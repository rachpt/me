<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[a-simple-script-to-count-ABC]]></title>
    <url>%2F2018%2F06%2F21%2Fa-simple-script-to-count-ABC%2F</url>
    <content type="text"><![CDATA[一份规整的 excel 表格，需要统计每一行所有 ABC 的个数,求和放到最后一行。 我是不会手工数的，当然是写个小程序或者说是脚本更准确。 代码如下：可以先 wc -l 看一下 csv 文件行数。 12345678#!/bin/bashfor n in &#123;1..72&#125;do count=`cat data.csv|sed -n "$&#123;n&#125; p"|egrep -o 'A|B|C'|wc -l` sed -i "$n s/$/,$count/" data.csv count=0done 当然开始前（与windows有文件交换）使用 dos2unix 转换一下，结束后 unix2dos 换回来。 这里记录一下。]]></content>
      <categories>
        <category>linux</category>
      </categories>
      <tags>
        <tag>shell</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[install-CAJViewer-on-Linux]]></title>
    <url>%2F2018%2F06%2F05%2Finstall-CAJViewer-on-Linux%2F</url>
    <content type="text"><![CDATA[在安装 Linux 上安装 CAJViewer 阅读 caj 文件。使用 crossover 容器安装。 crossovercrossover 运行在 linux 和 mac 上的用以安装 windows 软件的一个兼容层，商业软件，可以试用几天。为何不用免费开源的 wine？因为目前使用 wine 安装的 Tim 有致命 bug，及其容易卡死软件，而使用 crossover 安装的 Tim 几乎完美（有几个小 bug，传文件OK），安装 crossover 可以参考： 可以在此下载 https://www.newasp.net/soft/423534.html 。 永久试用教程 。 补丁： https://pan.baidu.com/s/1eSgLS6u ，或者 https://pan.baidu.com/s/1kVTeir1 密码：bov7 。 如果使用的是 英文界面，可能会有较为严重的中文支持问题。这里打包了 win10 中文默认字体。 蓝奏云 https://www.lanzous.com/i15vvsb ，注意使用的 xz 压缩， 改成7z后缀方便上传用。 如下图所示，在软件容器中放入字体文件就能解决中文乱码问题。 CAJViewer 直接去 CNKI 下载 CAJViewer 7.2 ，也可以直接在 crossover 里面下载，也是 7.2 版。 直接 使用 软件建议的 xp 兼容层安装。 至此，可能觉得已经万事大吉，不然，当运行软件时，会提示： MSXML not regester ，然后软件闪退。 原因可能是没有必要的运行库。 对于 xp 兼容层，安装 运行库 2010，如下图示。注意 安装到 CAJViewer 的容器里面。 最后提示，别忘了复制中文字体到 CAJViewer 容器字体文件夹。 CAJViewer 运行图。]]></content>
      <categories>
        <category>linux</category>
      </categories>
      <tags>
        <tag>CAJViewer</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[upgrade-ubuntu-stepped-pit]]></title>
    <url>%2F2018%2F05%2F07%2Fupgrade-ubuntu-stepped-pit%2F</url>
    <content type="text"><![CDATA[日常干活用的 mint，特殊情况换到 ubuntu 上干活，一直很烦 窗口关闭按钮一会儿在左边一会儿在右边，考虑到娱乐用的 windows 也在右边，所以看到 ubuntu 18.04 lts 的关闭按钮在右侧，于是有了将 16.04 lts （unity 好像没法设置按钮）升级的想法。 换更新源之前一直用的 清华的源，毕竟同一个局域网速度快。前几天，大概 5月4日，一直检测不到新版本，于是换了个 阿里云 的，一下检测到新的版本，载了一个多小时， 1sudo do-release-upgrade -d 参考内容。 期间不能跑，需要选择配置。因为不想继续使用 unity ，所示选择安装 GNOME 3。 重启后，以前的 ctrl + alt + f7 变成了 ctrl + alt + f1 。 差点吓傻了我，屏幕被放得很大，找了下，发现是 无障碍模式某个都系被打开了，这可能是之前开了大小写指示器的原因所致。 python3.6python3.5 被升级至 3.6 版本。为什么我关心python版本，应为之前安装 flexget ，官方说是不支援 py3.6，因为2.7还在，所以先 用 pip2 重新安装了 flexget 。正在愁以后是不是要装个虚拟环境 装 3.5，某天再看 flexget 的主页，居然支持 3.6了，balabala…… 问题就是 pip 还是 pip3.5 ，而非 3.6 ， 没办法了，一个一个改，使用 find 搜了一下所有 python3.5 的残留相关文件，cd 过去 cat 看看能不能删。最主要的就是 pip3.5 这个也得干掉（sudo apt remove pip3.5），将python 的脚本文件夹/usr/local/lib/python3.5/dist-packages/ 改到3.6，我可不想再一个一个 pip 重装。 12345678910111213141516171819sudo apt remove pip3.5sudo rm /usr/share/app-install/desktop/python3.5:python3.5.desktopsudo rm -f/usr/share/app-install/desktop/idle-python3.5:idle-python3.5.desktopsudo rm -f /usr/share/app-install/desktop/idle-python3.5:idle-python3.5.desktopsudo rm -r python3.5sudo rm /var/lib/dpkg/info/python3.5-minimal.listsudo rm /var/lib/dpkg/info/libpython3.5-minimal:amd64.listsudo rm -r /usr/local/lib/python3.6 #先看下里面的东西sudo mv /usr/local/lib/python3.5 /usr/local/lib/python3.6sudo rm /var/lib/dpkg/info/libpython3.5-minimal:amd64.postrmsudo rm /var/lib/dpkg/info/python3.5-minimal.postrm#/home/[username]/.vim/bundle/YouCompleteMe/third_party/ycmd/third_party/JediHTTP/vendor/parso/test/normalizer_issue_files/# 上面这个不要 removesudo apt install python3-pipsudo pip3 install --upgrade pip 附上 修改 pip 源。 123456$ cat ~/.pip/pip.conf [global]index-url = https://pypi.tuna.tsinghua.edu.cn/simpleextra-index-url= https://pypi.doubanio.com/simple[install]trusted-host=mirrors.aliyun.com 需要自己创建该文件。]]></content>
      <categories>
        <category>linux</category>
      </categories>
      <tags>
        <tag>ubuntu</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[extra-shell-note]]></title>
    <url>%2F2018%2F05%2F07%2Fextra-shell-note%2F</url>
    <content type="text"><![CDATA[自学收集的一些有用的 shell 奇淫妙技。 unset12unset 变量名unset .f 函数名 .f 前后用空格。用于删除定义了的变量与函数。 包含文件123. filePathsource filePath . 后面有一空格。 注释shell 没有块注释，可以使用一对花括号将需要注释的内容包起来，定义成一个函数，但是后面不使用改函数，从而曲线救国。 字符串获取字符串长度 12string="abcd"echo $&#123;#string&#125; #输出 4 提取子字符串 12string=&quot;alibaba is a great company&quot;echo $&#123;string:1:4&#125; #输出liba 查找子字符串 12string="alibaba is a great company"echo `expr index "$string" is` # 查找 i s 在变量中的位置 数组之前一直不会用，get 到技能，这里记录一下。 1234567891011121314151617181920212223#!/bin/bash NAME[0]="Zara"NAME[1]="Qadir"NAME[2]="Mahnaz"NAME[3]="Ayan"NAME[4]="Daisy"echo "First Index: $&#123;NAME[0]&#125;"echo "Second Index: $&#123;NAME[*]&#125;" # * 与 @ 效果一样，显示全部# 打印for i in $&#123;NAME[@]&#125;do echo $&#123;NAME[$i]&#125;done# 批量修改for i in $&#123;NAME[@]&#125;do NAME[$i]=`expr $i + 5 `echo $&#123;NAME[$i]&#125;done 参考内容1, 取最后一行获取最后一行数据。 法一， 1echo $varibles | tail -1 法二， 1echo $varibles | awk 'END&#123;print&#125;' 法三， 1echo $varibles | sed -n '$p' 其他， 1234sed '$!N;$!D'# 获取最后两行# 一样的效果awk '&#123;b=a"\n"$0;a=$0&#125;END&#123;print b&#125;' 参考资料 。 不让别名生效在 .bashrc 或者 .profile 里面定义 alias 可以简化命令输入，但有时想用非别名命令，可以在前面加一个 \ ，如下 1\grep something filename ps 命令ps 命令的参数有： 参数 作用 -a 显示所有进程（包括其他用户的） -u 用户以及其他信息 -x 显示没有控制终端的进程 特别地，ps aux 这种短格式不加减号（-）也是合法的。 123pidof sshd # 显示程序 PIDkill 3459 # 停止PID对应程序killall httpd # 终止程序所有进程 有用的小命令12345678910111213141516171819202122232425262728last # 系统登录记录history # 执行命令历史# 几个全称su：Swith user # 切换用户，切换到root用户cat：Concatenate # 串联uname：Unix name # 系统名称df：Disk free # 空余硬盘du：Disk usage # 硬盘使用率tar：Tape archive # 解压文件pwd：print working Directory # 打印工作目录grep：global regular expression printsudo：Superuser dochown：Change owner # 改变所有者chgrp：Change group # 改变用户组chmod：Change mode # 改变模式# 路径全称/bin = BINaries /dev = DEVices /etc = Editable Text Configuration # 配置文件/opt = Optional application software packages/lib = LIBrary /tmp = TeMPorary /usr = Unix Shared Resources /var = VARiable # 储存各种变化/proc = PROCesses /sbin = Superuser BINaries 12345678more filename # 一页一页看head -n 20 filename # 看头，默认 10行head - 20 filename # 简洁的写法tail ... # 和head类似，显示 尾部tr [原始字符] [目标字符] # 替换，例子如下cat filename | tr [a-z] [A-Z] # 全部大写wc -lwc # 统计字等stat filename # 文件详情 123# cut 按 列 提取文本tail -20 ～/.bash_history |cut -d' ' -f2# -d 设置分割， -法显示列 123# diff 比较文件差异diff -c fileA.sh fileB.sh# -c 详情， --brief 给出判断结果 touch 修改已经存在文件的信息。 参数 作用 -a 修改“读取时间”（atime） -m 修改“修改时间”（mtime） -d 上面两者同时修改 1touch -d '2018-05-15 01:22:23' filemname 历史命令！数字 用于重复执行某次命令。history 查看历史命令。mkdir -p /a/b/c 递归迭代创建文件夹。 sed 多个匹配： 123sed '1,3s/my/your/g; 3,$s/This/That/g' my.txt# 等价于sed -e '1,3s/my/your/g' -e '3,$s/This/That/g' my.txt 使用&amp;来当做被匹配的变量 1sed 's/my/[&amp;]/g' my.txt 圆括号 使用圆括号匹配的示例：（圆括号括起来的正则表达式所匹配的字符串会可以当成变量来使用，sed中使用的是\1,\2…） 12345$ sed 's/This is my \([^,&amp;]*\),.*is \(.*\)/\1:\2/g' my.txtcat:bettydog:frankfish:georgegoat:adam 上面这个例子中的正则表达式有点复杂，解开如下（去掉转义字符）： 正则为：This is my ([^,&amp;]*),.*is (.*)匹配为：This is my (cat),……….is (betty) 然后：\1就是cat，\2就是betty. 参考内容。或者这里。 待续……]]></content>
      <categories>
        <category>linux</category>
      </categories>
      <tags>
        <tag>shell</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[flexget-and-transmission-on-ubuntu]]></title>
    <url>%2F2018%2F05%2F07%2Fflexget-and-transmission-on-ubuntu%2F</url>
    <content type="text"><![CDATA[Flexget 进阶。自动下载与删除。 安装 flexgetflexget 需要 python2.7, 3.4, 3.5 或者 3.6。（居然支持3.6了 (￣▽￣)／ ） 命令12345678910sudo pip3 install flexgetflexget -V # 检查版本flexget check # 检查配置文件flexget --test execute # 测试flexget status # 状态flexget --db-cleanup # 初始化 SQLite数据库flexget execute # 运行which flexget # 查看安装路径，用于 crontab 定时任务 crontab 配置参考 。 Control daemon: 123sudo status flexgetsudo stop flexgetsudo start flexget yml 配置文件12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758596061626364656667686970717273747576777879808182838485templates: default: transmission: host: localhost port: 9091 username: username password: 'password' free_space: path: /srv/ftp/data space: 10240 download: /home/rc/Downloads ##----------------## limit_size: content_size: min: 512 max: 61440 strict: no ##----------------## clean: clean_transmission: enabled: yes host: localhost port: 9091 username: username password: 'password' finished_for: 7 days tracker: xxxxxxx|xxxxx delete_files: yes disable: details ##----------------## ttg_wiki: if: - "'1080p' in title": reject - "'720p' + 'WiKi' in title": accept tasks: byr_test: rss: https://xxxxx.xxx accept_all: yes template: - default #- limit_size content_size: min: 52 max: 6144 strict: no transmission: ratio: 2 path: /srv/ftp/data ##----------------## wiki: rss: https://xxxxx.xxx accept_all: yes template: - default - limit_size - clean transmission: #ratio: 2 path: /srv/ftp/data ##----------------## hdsky: rss: https://xxxxx.xxx template: - default - clean if: - "'Complete' in title": reject - "'iPad' in title": accept content_size: min: 400 max: 10240 strict: no transmission: ratio: 2 path: /srv/ftp/mp4 ##----------------## # 号注释，yml 需要严格对齐，使用两个空格缩进，形成代码块，yml 文件的语法格式：字段+冒号+空格+内容 。 templates: # 模板。 tasks: # 任务。 transmission 模块需要安装，另外，transmission-daemon或者 GUI 需要设置 rpc。 模块transmission password 记得加上引号。 1pip install transmissionrpc space 单位 M，content_size 一样，用于限制大小。download 放的是torrent文件路径。path 为种子内容下载路径。 具体可以参考 官方文档。 使用 transmission 模块和使用 watch-dir 相比，更灵活更方便，对不同的 rss ，可以设置不同的分享率 ratio ，以及不同的下载路径 path 。但是添加了的 torrent 文件需要自己写其他脚本删除或者移动。参见其他。 后续使用 flexget 的自动删种可能效果不是很好，需要使用另外的脚本处理。 待续…… 参考1 ，参考2 transmission-remote ，参考3 。 其他如果想在种子发布一段时间后猜开始下载，比如越过 新种免费期，可以使用下面的脚本配合 watch-dir 实现。 12345678910111213141516171819202122232425262728#!/bin/bash#author rachpt@126.com#date 2018-05-07#-----------设置-------------## flexget torrent 下载路径flexgetPath="/home/rachpt/Downloads/temp/"# transmission watch-dirautoDownloadPath="/home/rachpt/Downloads/ttg/"# 间隔时间，秒intervalsTime=25200#----------------------------#filelist=$(find $flexgetPath -iname "*.torrent*")# 使用换行分割IFS_OLD=$IFSIFS=$'\n'for filename in $filelistdo modifiedTime=`stat -c %Y "$filename"` currentTime=`date +%s` if [ $[$currentTime - $modifiedTime] -gt $intervalsTime ] then mv -f "$filename" "$autoDownloadPath$&#123;flexgetPath##*/&#125;" fidoneIFS=$IFS_OLD &lt;span id=&quot;tr-auto-delete&quot;&gt;transmission 完成下载后自动移动种子文件到指定文件夹脚本。 12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758596061626364#!/bin/bash# author rachpt@126.com# required dumptorrent to find the real name of torrent# get dumptorrent here: https://sourceforge.net/projects/dumptorrent/files/#----------------设置------------------#dumptorrentPath="/usr/local/bin/dumptorrent"flexgetPath="/home/rachpt/Downloads/ttg/"moveTotPath="/home/rachpt/Downloads/finish/"logoPath="/home/rachpt/Downloads/finish/info"#----------------日志函数---------------#function printLogo &#123; echo "=================================" &gt;&gt; $logoPath echo "匹配成功" &gt;&gt; $logoPath echo "下载到了："$TR_TORRENT_DIR &gt;&gt; $logoPath echo "种子编号："$TR_TORRENT_ID &gt;&gt; $logoPath echo -e "于："$TR_TIME_LOCALTIME " \c" &gt;&gt; $logoPath echo "完成对："$TR_TORRENT_NAME" 的移动！" &gt;&gt; $logoPath&#125;#----------------处理空格---------------#function moveBlank &#123; find "$1" -name "* *" | while read name do na=$(echo $name | tr ' ' '.') mv "$name" $na done&#125;#--------------移动种子文件-------------#moveBlank $flexgetPath# 生成点分割文件名function createMoveToPath &#123; dotTrPath=`echo "$newname" | sed 's/[ ][ ]*/\./g'` if [ -n $dotTrPath ] then totalMoveToPath="$moveTotPath$dotTrPath.torrent" else totalMoveToPath="$moveTotPath$newname.torrent" fi&#125;filelist=$(find $flexgetPath -iname "*.torrent.*")# 使用换行分割IFS_OLD=$IFSIFS=$'\n'for filename in $filelistdo newname=`$dumptorrentPath "$filename" | gawk 'BEGIN&#123;FS=":"&#125; /Name/&#123;print $2&#125;'` newname=`echo "$newname" | sed 's/^ [ ]*//g'` if [ "$newname" = "$TR_TORRENT_NAME" ] then createMoveToPath mv -f "$filename" "$totalMoveToPath" &gt;&gt; $logoPath printLogo fidoneIFS=$IFS_OLD#----------------移动完成---------------#]]></content>
      <categories>
        <category>linux</category>
      </categories>
      <tags>
        <tag>ubuntu</tag>
        <tag>flexget</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Windows 使用笔记-02]]></title>
    <url>%2F2018%2F04%2F02%2Fwindows-note-02%2F</url>
    <content type="text"><![CDATA[承诺好的笔记，一直没写，一是不好意思，因为我已经转向 linux 了，不好说啥，二是才学疏浅，想到没必要将自己的观点强加到他人身上。 但还是继续，承诺需要兑现。 装机后驱动不管是核心显卡还是独立显卡，刚刚装好系统后，显示一般都比较粗大，甚至是模糊，亮度最大，不能调节，这是驱动的问题，需要更新驱动。如果不适很老的机器，或者硬件特殊，只需要使用 windows 的系统更新即可自动装好合适的驱动。 你可能需要先激活系统才能进行自定义设置。激活工具推荐 01笔记文末 链接。 如果嫌 windows 系统更新的下载速度慢，可以使用 绿色版的 驱动精灵安装驱动，推荐 在 http://www.zdfans.com/ 上下载，或者 baidu，如果你经验足够丰富不会下到 下载器 安装流氓软件。 右键 此电脑 —-&gt; 管理 —-&gt; 设备管理器（或者 ctrl + x —-&gt; m，或者 右键 开始 —-&gt; 设备管理器(M)）进入设备管理器，没有叹号，表面几乎所有驱动 ok 了。 关闭 windows 的自动更新为什么要关闭 自动更新，会不会不安全？ 几乎没有坏的影响，好的到是有，之所以 你背流氓 安装 xx管家、xx助手等不是电脑中毒了，二是你自己手贱所致。如何下载到正确的软件 我之后会提到。别用软件管家！真的是没必要，贪图眼前的便利准会掉坑里。 自动更新，windows 防火墙，windows defender 这三个不是同一个东西。 如何关闭。（家庭版需要其他方法，自己百度） 点击 运行，或者 win + R ，输入 gpedit.msc ；或者 打开 cmd 输入 gpedit 。 依次展开 计算机配置 —-&gt; 管理模板 —-&gt; windows 组件 —-&gt; windows 更新。 将 配置自动更新 （双击打开） 改成 已禁用 ，这是最重要的，其他的可以不改，如果你想尝试 ，请仔细阅读 说明。可以将 自动更新频率 设为 禁用。 同样的道理，你可以在这里面 禁用 onedrive defender等。 理论上讲，子要你不自己取点 设置（win+I） 里面的 检查更新，系统不会自己 更新。 运行库Microsoft Visual C++ Redist xxxx，有些软件提醒你安装运行库， 推荐 zdfans 上面的运行库。说一下，这个 zdfans 大部分软件不是 他自己做的，是搬运，或者说是一种备份。自己百度 常用运行库也是可以的。 别提醒我 是否 我知道需要运行的软件很安全，不需要这个。怎么去掉？ 打开 控制面板（win + R然后输入 ctontrol）不行的话你点点点找一下， 展开 用户账户，然后再点击 用户账户。接着 更改用户账户控制设置。 滑块移到最下面，确定。 显示此电脑win + I 打开设置，或者你点点点找一下，不同版本可能不一样。 个性化 —-&gt; 主题 —-&gt; 桌面图标设置，把计算机勾上，其他的按需勾选。 又或者 桌面 右键 —-&gt; 个性化 —-&gt; 主题 —-&gt; 桌面图标设置。 点点点，没什么好说的。 更干净的界面推荐 软件 dism++， 下载请出门百度，第一个就是（如果你没被广告）。 ​ 这个 Dism++ x86/x64 ，就是下载链接。 绿色软件 无需安装，解压后 推荐放到 D 盘。 dism++ 可以干的事： 清理垃圾，清理 C盘的windows 目录，我一般是全部勾上清理。 去掉 桌面 快捷方式 字样，快捷方式箭头，以及小盾牌，具体自己去该软件里面点点点找一下。 精简 文件资源管理器 （就是点开此电脑的界面）左侧 的东西，比如网络、家庭组、可移动设备、以及此电脑下的 6个（或者其他）文件夹。 找回 window 照片查看器，去掉 ie 右上角笑脸。 关闭 安全警告等等 。 卸载 uwp 应用，不懂别乱卸！ 显示复选框 扩展名等如下图没什么好说的。 清理注册表软件卸载后一般会在注册表里面留下无用的记录，可以使用 CCleaner清理，这软件不免费，推荐 zdfans 上面下载，或者其他的 什么 大眼仔啥的。 这个软件也可以清理系统 垃圾 ，主要是 user 目录下的，注意清理别勾选 浏览器的 cookie，否则你每次都要登录。 使用绿色版！ 一些日用软件 bandizip 点击到官网，免费，无广告，图标主题不错！兼容 rar、7z、zip、等各种格式，压缩 推荐 使用 7z 格式，别用 rar 这个收费格式，也别用各种破解版 winRAR 了（别提免费版），好压、360压啥的也不要用。而且支持不解压 看图。自动解压功能也很好用，具体看官网的介绍。 7zip 也不错，可是界面有点丑。不嫌弃用这个也可以的。 potplayer 棒子出品，质量不错，解码强，无广告，可玩性很丰富，有很多快捷键。 点击到官网 ，安装的时候记得把推荐的额外解码器都装上，保平安。如果嫌烦，可以关闭它的自动更新。开源 全平台的 vlc 也是不错的，论外观易用性，还是首推 pot。我 Linux 上最喜欢的简洁 mpv (全平台)播放器是不会推荐的，那是极客的最爱。 TIM 比 QQ 好，干净些许。 Sumatra PDF 免费小巧的 pdf &amp; 电子书（mobi、epub等）阅读软件，如果你不需要 做标记，用这个准没错，有绿色便携版，推荐使用安装版，可以关联格式。 点击到官网 ，LaTeX 的御用 阅读器。 Gimp &amp; photoshop 这年头，不会P图，好意思说自己会用电脑？ 免费 开源 跨平台 就用 Gimp，只用 win 的话，网上搜个 破解版的 ps cc，有绿色破解版，自己baidu，这玩意儿 熟能生巧。 点击到 Gimp 官网 。Gimp 比 PS 小巧很多，有中文官方文档。 Snipaste 点击到官网 ，比 QQ（TIM） 的强大，图标好看，快捷键强。免费。希望 linux 快点出来。 写代码 Visual Studio Code，atom，sublime 破解版，notepad++，notepad2 都不错。 如果只是想看 linux 生成的 文本文件 ，notepad2 代替默认的记事本很便利。 IDM &amp; FDM 下载器，区别前者收费，后者免费，但是前者感觉更好。迅雷什么的还是不要用。 Get Free Download Manager ，IDM -旧版- 绿色破解版 。 视频压制 推荐使用 小丸工具箱，如果你不会 使用 ffmpeg 的话，megui 啥的大部分人也用不着。 隆重介绍一下火绒 想不出什么理由让我不推荐它。如果你不放心 defender ，别用管家、别用卫士！ 点击到官网 ，注意 设置取消 它的 主页推广，如果你不想被它换主页。 先这样吧 :joy: 。 推荐阅读 Windows 绝赞应用 。 可以先关注 http://amazingapps.org/ 这个，截止目前就 windows 的比较完整。]]></content>
      <tags>
        <tag>windows</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[use-linux-format-not-dos]]></title>
    <url>%2F2018%2F04%2F01%2Fuse-linux-format-not-dos%2F</url>
    <content type="text"><![CDATA[写个 shell 脚本格式化输出数据，出现诡异 bug，郁闷了一天，早上看书之际，dos2unix 出现到脑海中，乌云散去，果然如此。 情景有一个 txt 文件，行数很多，需要复制其中的部分数据到 excel 统计，一个文件大概要复制 40-50 次，懒人总是想捷径。首先想到的是使用 shell 脚本实现，因为 python 才开始，先是看书，4-5天，写脚本，各种碰壁，于是 用了低级方法可以干活，隔几天后 改进，如下。 123456789101112131415161718192021222324252627282930313233343536373839#!/bin/bashtempfile=`mktemp const.XXXXXXXX`sed -n '/+\/-/p' $1 &gt; $tempfilebulkmodulus=`gawk '/=/ &#123; print $4 &#125;' $tempfile`for (( j = 4; j &lt; 7; j = j + 2 ))do for (( i = 1; i &lt; 22; i++ )) do cijTempName=`cat $tempfile | gawk -v circle=$j '$1 == loop &#123;print $circle&#125;' loop=$i` if [ $i -ge 2 ] &amp;&amp; [ $i -le 6 ] then if [ -z $cijTempName ] then echo -e "-\t\c" else echo -e $cijTempName"\t\c" fi else if [ -z $cijTempName ] then echo -e "0\t\c" else echo -e $cijTempName"\t\c" fi fi done echo doneecho echo 'bulk:' $bulkmodulus rm -f $tempfile $tempfile2 数据大概如下： 做了部分模糊处理。 错误需要提出 cij 的 第 4列 以及 第 6 列。使用制表符在各自行中打印。 结果出乎我的意料，第二行的 误差值 只打印了两个。 百思不得其解，我甚至已经考虑 使用 awk 的 FS ORS 各种折腾。最后皆以失败告终。 解决今天图书馆看书，突然想到我这个 txt 文件是在 windows 生成的，自然 换行符与 linux/unix 的不同，如此以来自然能够解释 中间部分正常，而尾巴部分出现诡异。 于是，加上 dos2unix Constants.txt ，完美解决问题。 存在即是合理，不是莫名其妙，只是你不知道。]]></content>
      <categories>
        <category>linux</category>
      </categories>
      <tags>
        <tag>shell</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[use-outer-variables-in-awk]]></title>
    <url>%2F2018%2F03%2F31%2Fuse-outer-variables-in-awk%2F</url>
    <content type="text"><![CDATA[awk 命令中使用外部定义的变量。 做好了的 12345678910111213141516171819202122for (( i = 1; i &lt; 22; i++ ))do cijTempName=`cat $tempfile | gawk '$1 == loop &#123;print $4&#125;' loop=$i` if [ $i -ge 2 ] &amp;&amp; [ $i -le 6 ] then if [ -z $cijTempName ] then echo -e "-\t\c" else echo -e $cijTempName"\t\c" fi else if [ -z $cijTempName ] then echo -e "0\t\c" else echo -e $cijTempName"\t\c" fi fidone 使用 awk（gawk 是 AWK 的 GNU 版本）获取每行第一个位置的元素，并与外面的 loop counter 比较，如果比配，则打印这一行中的 第四个元素，否则，1-6 loop 中打印 “-”，后面的打印 0。 关键点 gawk 中判断 \$1 与 loop counter 如何处理。 格式：awk ‘{action}’ 变量名=变量值 这样传入变量，可以在action中获得值。 注意：变量名与值放到’{action}’后面。 如果要在 BEGIN 的action不能获得变量值，使用 参数 v，即是 awk -v 。这里没用到。 参考内容。]]></content>
      <categories>
        <category>linux</category>
      </categories>
      <tags>
        <tag>awk</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[the-gateway-of-materials-studio]]></title>
    <url>%2F2018%2F03%2F31%2Fthe-gateway-of-materials-studio%2F</url>
    <content type="text"><![CDATA[关于 Materials studio 的 Remote Gateway。 MS 默认 使用 http://localhost:18888 查看进程，之前一直不知道 Edti 的用户名与密码是啥，google 了下，找到官方帮助文档，看了下了解了些许，这里记录一下。 开关找到路径 ~/Accelrys/MaterialsStudio8.0/etc/Gateway 与自己的安装路径有关。 12345678910./gwstart# 开./gwstop# 关./gwrestop# 重启#目录下的其他可执行文件功能，如其名#运行计算中 需要保持 这个 是开得状态。 用户1234567# 在刚才的目录下./gwusers /list# 列出 用户./gwusers /add rachpt# 添加用户 默认情况下 使用 gatekeeper 密码： 空 管理 emote Gateway 。 参考内容 。 更多请看 。]]></content>
      <categories>
        <category>DFT</category>
      </categories>
      <tags>
        <tag>castep</tag>
        <tag>ms</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[a-bash-script-for-pt-signin]]></title>
    <url>%2F2018%2F03%2F29%2Fa-bash-script-for-pt-signin%2F</url>
    <content type="text"><![CDATA[写一个脚本，每天 定时自动签到 PT 站。 加了 图片验证的比较复杂，目前搞不定，只对不需要 验证码的签到有效。 脚本如下，自己需要修改 cookie ，或者其他。 12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758596061626364656667686970717273747576777879808182838485868788899091929394959697#!/bin/bash# author: rachptecho "hyperay 签到"curl 'https://www.hyperay.org/sign_in.php' \-H 'Host: www.hyperay.org' \-H 'User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:58.0) Gecko/20100101 Firefox/58.0' \-H 'Accept: */*' \-H 'Accept-Language: zh-CN,zh;q=0.8,zh-TW;q=0.7,zh-HK;q=0.5,en-US;q=0.3,en;q=0.2' --compressed \-H 'Content-type: application/x-www-form-urlencoded' \-H 'Cookie: xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx' \-H 'DNT: 1' \-H 'Connection: keep-alive' \--data 'action=sign_in'echo ''echo "hdhome 签到"echo ''curl 'https://hdhome.org/attendance.php' \-H 'Host: hdhome.org' \-H 'User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:58.0) Gecko/20100101 Firefox/58.0' \-H 'Accept: text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8' \-H 'Accept-Language: zh-CN,zh;q=0.8,zh-TW;q=0.7,zh-HK;q=0.5,en-US;q=0.3,en;q=0.2' --compressed \-H 'Cookie: __xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx' \-H 'DNT: 1' \-H 'Connection: keep-alive' \-H 'Upgrade-Insecure-Requests: 1'echo ''echo "6v 签到"echo ''curl 'http://bt.neu6.edu.cn/forum.php' \-H 'Host: bt.neu6.edu.cn' \-H 'User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:58.0) Gecko/20100101 Firefox/58.0' \-H 'Accept: text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8' \-H 'Accept-Language: zh-CN,zh;q=0.8,zh-TW;q=0.7,zh-HK;q=0.5,en-US;q=0.3,en;q=0.2' --compressed \-H 'Cookie: LRpW_2132_ulastactivity=fb5dVHpNQ0vxxxxxxxxxxxxxxxxxxxxxxxxx' \-H 'DNT: 1' \-H 'Connection: keep-alive' \-H 'Upgrade-Insecure-Requests: 1'echo ''echo "hdchina 签到"echo ''curl 'https://hdchina.org/plugin_sign-in.php?cmd=signin' \-H 'Host: hdchina.org' \-H 'User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:58.0) Gecko/20100101 Firefox/58.0' \-H 'Accept: */*' \-H 'Accept-Language: zh-CN,zh;q=0.8,zh-TW;q=0.7,zh-HK;q=0.5,en-US;q=0.3,en;q=0.2' --compressed \-H 'X-Requested-With: XMLHttpRequest' \-H 'Cookie: __cxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx' \-H 'DNT: 1' \-H 'Connection: keep-alive' \--data 'cmd=signin'echo ''echo "TTG 签到"echo ''tempPage=`mktemp ttgpage.XXXXXX`curl 'https://totheglory.im/' \-H 'Host: totheglory.im' \-H 'User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:59.0) Gecko/20100101 Firefox/59.0' \-H 'Accept: */*' \-H 'Accept-Language: zh-CN,zh;q=0.8,zh-TW;q=0.7,zh-HK;q=0.5,en-US;q=0.3,en;q=0.2' --compressed \-H 'Content-Type: application/x-www-form-urlencoded' \-H 'X-Requested-With: XMLHttpRequest' \-H 'Cookie: __xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx' \-H 'DNT: 1' \-H 'Connection: keep-alive' &gt; $tempPagemyTimestamp=`gawk '/token/&#123;print $3&#125;' $tempPage | gawk 'BEGIN&#123;FS="\""&#125; &#123;print $2&#125;'`myToken=`gawk '/token/&#123;print $5&#125;' $tempPage | gawk 'BEGIN&#123;FS="\""&#125; &#123;print $2&#125;'`curl 'https://totheglory.im/signed.php' \-H 'Host: totheglory.im' \-H 'User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:59.0) Gecko/20100101 Firefox/59.0' \-H 'Accept: */*' \-H 'Accept-Language: zh-CN,zh;q=0.8,zh-TW;q=0.7,zh-HK;q=0.5,en-US;q=0.3,en;q=0.2' --compressed \-H 'Content-Type: application/x-www-form-urlencoded' \-H 'X-Requested-With: XMLHttpRequest' \-H 'Cookie: __xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx' \-H 'DNT: 1' \-H 'Connection: keep-alive' \--data 'signed_timestamp=$myTimestamp&amp;signed_token=$myToken'rm -f $tempPageecho ''echo "所有签到完成！"exit 其中 TTG 和其他的有区别，需要获取 但前时间 time 以及 token，比较懒，curl 的头可以封装 成函数，这里 直接 使用 firefox 复制的 curl 链接。:joy: 😂 😂 定时 任务 请参考 here , and here 。 第二版，添加 cmct.tv ，TTG 的需要修改 cookie 格式，以及变量存在的行使用 双引号！ 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115#!/bin/bash# author: rachptecho "hyperay 签到"curl 'https://www.hyperay.org/sign_in.php' \-H 'Host: www.hyperay.org' \-H 'User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:58.0) Gecko/20100101 Firefox/58.0' \-H 'Accept: */*' \-H 'Accept-Language: zh-CN,zh;q=0.8,zh-TW;q=0.7,zh-HK;q=0.5,en-US;q=0.3,en;q=0.2' --compressed \-H 'Content-type: application/x-www-form-urlencoded' \-H 'Cookie: xxxxxxxxxxxxxx' \-H 'DNT: 1' \-H 'Connection: keep-alive' \--data 'action=sign_in'echo ''echo "hdhome 签到"echo ''curl 'https://hdhome.org/attendance.php' \-H 'Host: hdhome.org' \-H 'User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:58.0) Gecko/20100101 Firefox/58.0' \-H 'Accept: text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8' \-H 'Accept-Language: zh-CN,zh;q=0.8,zh-TW;q=0.7,zh-HK;q=0.5,en-US;q=0.3,en;q=0.2' --compressed \-H 'Cookie: xxxxxxxxxxxxxx' \-H 'DNT: 1' \-H 'Connection: keep-alive' \-H 'Upgrade-Insecure-Requests: 1'echo ''echo "6v 签到"echo ''curl 'http://bt.neu6.edu.cn/forum.php' \-H 'Host: bt.neu6.edu.cn' \-H 'User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:58.0) Gecko/20100101 Firefox/58.0' \-H 'Accept: text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8' \-H 'Accept-Language: zh-CN,zh;q=0.8,zh-TW;q=0.7,zh-HK;q=0.5,en-US;q=0.3,en;q=0.2' --compressed \-H 'Cookie: xxxxxxxxxxxxxx' \-H 'DNT: 1' \-H 'Connection: keep-alive' \-H 'Upgrade-Insecure-Requests: 1'echo ''echo "hdchina 签到"echo ''curl 'https://hdchina.org/plugin_sign-in.php?cmd=signin' \-H 'Host: hdchina.org' \-H 'User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:58.0) Gecko/20100101 Firefox/58.0' \-H 'Accept: */*' \-H 'Accept-Language: zh-CN,zh;q=0.8,zh-TW;q=0.7,zh-HK;q=0.5,en-US;q=0.3,en;q=0.2' --compressed \-H 'X-Requested-With: XMLHttpRequest' \-H 'Cookie: xxxxxxxxxxxxxx' \-H 'DNT: 1' \-H 'Connection: keep-alive' \--data 'cmd=signin'echo ''echo "TTG 签到"echo ''tempPage=`mktemp ttgpage.XXXXXX`curl -c ttgcookie 'https://totheglory.im/' \-H 'Host: totheglory.im' \-H 'User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:59.0) Gecko/20100101 Firefox/59.0' \-H 'Accept: */*' \-H 'Accept-Language: zh-CN,zh;q=0.8,zh-TW;q=0.7,zh-HK;q=0.5,en-US;q=0.3,en;q=0.2' --compressed \-H 'Content-Type: application/x-www-form-urlencoded' \-H 'X-Requested-With: XMLHttpRequest' \-H 'Cookie: __cfduid=xxxxxxxxxxxxxx; uid=XXXXXX; pass=xxxxxxxx' \-H 'DNT: 1' \-H 'Connection: keep-alive' &gt; $tempPage# myTimestamp=`gawk '/token/&#123;print $3&#125;' $tempPage | gawk 'BEGIN&#123;FS="\""&#125; &#123;print $2&#125;'`# 不需要上面这个！myToken=`gawk '/token/&#123;print $5&#125;' $tempPage | gawk 'BEGIN&#123;FS="\""&#125; &#123;print $2&#125;'`myLaccess=`cat "ttgcookie" | awk '/laccess/&#123;print $7&#125;'`curl 'https://totheglory.im/signed.php' \-H 'Host: totheglory.im' \-H 'User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:59.0) Gecko/20100101 Firefox/59.0' \-H 'Accept: */*' \-H 'Accept-Language: zh-CN,zh;q=0.8,zh-TW;q=0.7,zh-HK;q=0.5,en-US;q=0.3,en;q=0.2' --compressed \-H 'Content-Type: application/x-www-form-urlencoded' \-H 'X-Requested-With: XMLHttpRequest' \-H “Cookie: __cfduid=xxxxxxxxxxxxxx; uid=XXXXXX'; pass=xxxxxxxx ” \-H 'DNT: 1' \-H 'Connection: keep-alive' \--data “signed_timestamp=$myLaccess&amp;signed_token=$myToken”# 注意 使用了变量的地方 使用 双引号 不能使用 单引号。rm -f $tempPage ttgcookieecho ''echo "CMCT.tv 签到"echo ''curl 'https://cmct.tv/plugin.php?id=dsu_paulsign:sign&amp;operation=qiandao&amp;infloat=1&amp;inajax=1' \-H 'Host: cmct.tv' \-H 'User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:59.0) Gecko/20100101 Firefox/59.0' \-H 'Accept: */*' \-H 'Accept-Language: zh-CN,zh;q=0.8,zh-TW;q=0.7,zh-HK;q=0.5,en-US;q=0.3,en;q=0.2' --compressed \-H 'Content-Type: application/x-www-form-urlencoded' \-H 'X-Requested-With: XMLHttpRequest' \-H 'Cookie: xxxxxxxxxxxxxx' \-H 'DNT: 1' \-H 'Connection: keep-alive' \--data 'formhash=04fcd2f6&amp;qdxq=ym&amp;qdmode=1&amp;todaysay=%C7%A9%B5%BD%C0%B2%C0%B2%C0%B2%A1%A3%A1%A3%A1%A3&amp;fastreply=0'echo ''echo "所有签到完成！"exit 注意 使用了变量的地方 使用 双引号 不能使用 单引号。TTG cookie 中的 PHPSESSID 字段 不需要。]]></content>
      <categories>
        <category>linux</category>
      </categories>
      <tags>
        <tag>shell</tag>
        <tag>pt</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[change-sidebar-width-of-firefox]]></title>
    <url>%2F2018%2F03%2F28%2Fchange-sidebar-width-of-firefox%2F</url>
    <content type="text"><![CDATA[Firefox 的侧边书签很好用，但是在低分辨率屏幕上，最小宽度总是太宽，有办法突破最小值吗，答案是有的。不知道现在侧边栏插件适配了没有。这里记录在 ubuntu 平台使用自定义 css 样式改小侧边栏的最小值。 配置文件路径在 firfox 地址栏输入 about:profiles ，找到配置文件路径。如下图。 在 Root Directory 中创建 chrome 文件夹，然后在其中新建一个名为 userChrome.css 的 css 文件。 CSS 文件12345#sidebar-box,#sidebar,#sidebar-header &#123; max-width: 300px !important; min-width: 50px !important;&#125; 重启 firefox 生效，效果 如上图。 参考内容1，内容2，内容3 。]]></content>
      <categories>
        <category>linux</category>
      </categories>
      <tags>
        <tag>firefox</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[transmission-settings]]></title>
    <url>%2F2018%2F03%2F25%2Ftransmission-settings%2F</url>
    <content type="text"><![CDATA[之前不会设置 transmission ，习惯了 ut 的点点点，觉得很是不好用，对其 json 的配置文件很不友好的形式感到恶心，不过现在有了更多的 linux 命令行与 shell 脚本知识后，再看 transmission，真心佩服如此灵活的配置。什么 qBittorrent，deluge 什么的，一边去，看我 transmission。这里记录一些 配置心得。 transmission 有好几个版本，带有用户形图界面 GUI 的 GTK+、QT，完整命令行的 cli，以及守护进程的 daemon。其中 daemon版没有任何 GUI界面，需要一个例外的软件管理它控制它，remote 或者 WebGUI。 下面说的是 daemon 版的设置，对其他的也是有效的。只是 settings.json 的位置读一样。 rpcrpc 可以理解为 WEBGUI 控制的相关设置。 1234567891011121314151617181920212223&quot;rpc-authentication-required&quot;: false,# 是否需要用户名与密码验证，是全局设置&quot;rpc-bind-address&quot;: &quot;0.0.0.0&quot;,# 黑名单，全局性的&quot;rpc-enabled&quot;: true,# 是否开启 WebGUI，开启其他才有效&quot;rpc-host-whitelist&quot;: &quot;*example.com&quot;,# 在有密码验证的时候，host名单，默认 localhost 和所有 ip 地址在其中&quot;rpc-host-whitelist-enabled&quot;: true,# 是否开启 host 白名单&quot;rpc-password&quot;: &quot;×××&quot;,# 密码，保存后自动转化成加密态&quot;rpc-port&quot;: 9091,# 端口，默认9091,ip + : + 端口号，才能访问 tr&quot;rpc-url&quot;: &quot;/transmission/&quot;,# 路径名，显示在端口后面，默认即可&quot;rpc-username&quot;: &quot;××&quot;,# 用于认证的有户名&quot;rpc-whitelist&quot;: &quot;127.0.0.1,10.42.0.*&quot;,# 全局白名单，只有 ip 在其中的客户机才能访问，可以使用通配符# 这个与 需不需要 用户名与密码验证无关&quot;rpc-whitelist-enabled&quot;: true,# 是否开启 白名单访问，除非你只在一个固定的 ip (段)上管理，否则不要开启 参考文档 。 脚本1234&quot;script-torrent-done-enabled&quot;: true,# 每一个种子完成后 执行脚本 开关&quot;script-torrent-done-filename&quot;: &quot;/home/transmission/auto&quot;,# 执行的脚本路径，使用 全路径 可以 使用的变量 TR_APP_VERSION TR_TIME_LOCALTIME TR_TORRENT_DIR TR_TORRENT_HASH TR_TORRENT_ID TR_TORRENT_NAME 一个例子 , 参考文档 。 其他暂时没什么说的，都能百度到，或者看官方文档搞定。 2018-05-15 更新 制作种子需要安装 transmission-create ，web版帮助文档。 使用命令： 1transmission-create -p -o /path/out.torrent -s 16384 -t https://example.com/announce.php -c 'made by Linux' /path/something/ -p 表示私密种子， -o 设置输出路径，-s 设置分块大小，单位KiB ，默认 2M，-t 设置tracker，-c 添加评论，最后的文件或者路径即是需要制作种子的源文件。 remote使用transmission-remote 管理tr，web版帮助文档。 具体应用可以参考这里。]]></content>
      <categories>
        <category>linux</category>
      </categories>
      <tags>
        <tag>transmission</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[notes-for-shell-scripting-bible]]></title>
    <url>%2F2018%2F03%2F23%2Fnotes-for-shell-scripting-bible%2F</url>
    <content type="text"><![CDATA[Linux 命令行与 shell 脚本编程大全（第二版）简要阅读笔记。 看到哪儿就就记到哪，没有规律可循。 cron 时间表全称 cron table ，* 通配符，dayofweek 可以使用 三字母格式（mon, tue, wed, thu, fri, sat, sun） 对应0-6 ，0 为 sun。 每一月最后一天执行脚本的一种方式： 100 12 * * * if [ `date +%d -d tomorrow` = 01 ] ; then ; COMMAND crontab -l 列出所有定时任务。 crontab -e 编辑用户自己的时间表，文件在 /var/spool/cron/ 目录下。 对于不要求使用精确时间的任务，可以在 /etc/cron.*ly 添加脚本。 hourly，monthly，daily。意如其名，复制到里面即可。 cron 惟一的问题是假定你 7x24 小时开机。 anacron 可以执行错过了的 cron 任务。 cron 时间戳文件在 /var/spool/anacron 下，作业表在 /etc/anacrontab 文件。 123456789100 2 * * 6* * * * * *- - - - - -| | | | | || | | | | + year [optional]| | | | +----- day of week (0 - 7) (Sunday=0 or 7)| | | +---------- month (1 - 12)| | +--------------- day of month (1 - 31)| +-------------------- hour (0 - 23)+------------------------- min (0 - 59) 在线验证 corntab 表达式 。 开机运行脚本ubuntu 发行版默认开机运行级别 2 ，如果想改，需要自己创建 /etc/inittab文件。 0，关机；1 ，单用户模式；6 ，关机。2-5 ubuntu 不区分，red hat 区分。 不同发行版使用的 开机脚本(upstart script)路径不同，如 /etc/rc#.d /etc/init.d /etc/init.d/rc.d 定义自己的 /etc/initio.d/rc.local dabian 发行版 /etc/rc.local ubuntn 发行版 如果使用脚本，需要使用全路径名。 任务优先级使用 nice 与 renice 命令修改优先级。值 -20 – 20 ，越大优先级越小。 123nice -d 10 ./test.shrenice 12 -p 进程号 普通用户只能降低优先级，root 用户（或者 sudo）可以随意。 进程状态 S 符号 意义 D 可中断的休眠状态 R 运行状态 S 休眠状态 T 跟踪状态或停止状态 Z 僵化状态 模式空间与保持空间一个经典案例，使用模式空间与保持空间实现反序。 1sed -n '&#123;1!G ; h ; %p &#125;' filepath 命令 操作 h 模式空间 复制 到保持空间 H 模式 附加 到 保持 g 保持 复制到 模式 G 保持 附加到 模式 x 二者交换 ！ negate 排除命令。排除末尾行，\$! N …. and 符号使用&amp;符号 代替 sed 匹配的内容。 1234echo "The cat sleeps in his hat" | sed 's/.at/"&amp;"/g'# 输出结果The "cat" sleeps in his "hat" 上例中可以使用 子字符模块 实现， 123echo "That furry cat is pretty, taht furry hat is pretty" | sed 's/hurry \(.at\)/\1/'# 输出结果That cat is pretty, taht hat is pretty \1 替换第一个模块，\2 替换第二个，以此类推。 加倍行间距一个简单的命令，加倍行间距。 1sed '$!G' datafile 保持空间 在启动sed的时候默认只有一行空行。 但是有一个缺点，如果原文件中已经有些许空行，则会出现空行不均。 改进方法。 1sed '/^$/d;$!G' datafile 先删除空行，然后加倍行。如果空行中有空格，需要例外匹配。 添加行号简单的方法。 1sed '=' datafile 但是 行号 与行不在同一行。改进。 1sed '=' datafile | sed 'N; S/\n/ /' 说明，N 同时处理两行，将其中的 \n 换成 空格。 打印末尾几行123456789101112131415161718rachpt@pc ~/desktop $ sed '&#123;&gt; :start&gt; $q&gt; N&gt; 11,$D&gt; b start&gt; &#125;' ms_castep.param# 结果如下geom_method : BFGSfixed_npw : falsegeom_modulus_est : 500.000000000000000 GPacalculate_ELF : falsecalculate_stress : truepopn_calculate : truecalculate_hirshfeld : truecalculate_densdiff : falsepopn_bond_cutoff : 3.000000000000000pdos_calculate_weights : false \$q 末行退出 b 跳转的循环，D 只输出模式空间中的第一行。 选择性删除空行1234567891011rachpt@pc ~/desktop $ sed '/./,/^$/!d' test# 结果如下This is a header lineline 2line 3line 4end of filerachpt@pc ~/desktop $ /./,/^$/ 匹配 任意字符行可空行区间。]]></content>
      <categories>
        <category>linux</category>
      </categories>
      <tags>
        <tag>shell</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[CASTEP-module-in-MS]]></title>
    <url>%2F2018%2F03%2F23%2FCASTEP-module-in-MS%2F</url>
    <content type="text"><![CDATA[网上找的部分 Materials Studio 关于 CASTEP 模块的使用。 生成的文件作用.cell 文件包含 坐标和晶格参数.param 文件包含 所有模拟输入参数 ms 设置 中的 Optimize cell 意思是优化晶格常数，改变 计算精度，自动优化晶包 得到的文件.xsd 最后的优化结构.xtd 轨迹文件，包含每一步的结构.castep 包含优化信息的输出文件 计算任何性质，都有 .param .castep 文件输出。 linux 使用 perl 脚本命令进行 处理 比如 perl cell2poscar.pl .cell, 生成POSCAR文件 原出处 。 关于第一原理的一些理解：（1）第一性原理其实是包括基于密度泛函的从头算和基于Hartree-Fock自洽计算的从头算，前者以电子密度作为基本变量（霍亨伯格-科洪定理），通过求解Kohn-Sham方程，迭代自洽得到体系的基态电子密度，然后求体系的基态性质；后者则通过自洽求解Hartree-Fock方程，获得体系的波函数，求基态性质；评述：K-S方程的计算水平达到了H-F水平，同时还考虑了电子间的交换关联作用。（2）关于DFT中密度泛函的Functional，其实是交换关联泛函，包括LDA，GGA，杂化泛函等等。一般LDA为局域密度近似，在空间某点用均匀电子气密度作为交换关联泛函的唯一变量，多数为参数化的CA-PZ方案；GGA为广义梯度近似，不仅将电子密度作为交换关联泛函的变量，也考虑了密度的梯度为变量，包括PBE,PW,RPBE等方案，BLYP泛函也属于GGA；此外还有一些杂化泛函，B3LYP等。（3）关于赝势在处理计算体系中原子的电子态时，有两种方法，一种是考虑所有电子，叫做全电子法，比如WIEN2K中的FLAPW方法(线性缀加平面波)；此外还有一种方法是只考虑价电子，而把芯电子和原子核构成离子实放在一起考虑，即赝势法，一般赝势法是选取一个截断半径，截断半径以内，波函数变化较平滑，和真实的不同，截断半径以外则和真实情况相同，而且赝势法得到的能量本征值和全电子法应该相同。赝势包括模守恒和超软，模守恒较硬，一般需要较大的截断能，超软势则可以用较小的截断能即可。另外，模守恒势的散射特性和全电子相同，因此一般红外，拉曼等光谱的计算需要用模守恒势。赝势的测试标准应是赝势与全电子法计算结果的匹配度，而不是赝势与实验结果的匹配度，因为和实验结果的匹配可能是偶然的。（4）关于收敛测试：（a）Ecut，也就是截断能，一般情况下，总能相对于不同Ecut做计算，当Ecut增大时总能变化不明显了即可；然而，在需要考虑体系应力时，还需对应力进行收敛测试，而且应力相对于Ecut的收敛要比总能更为苛刻，也就是某个截断能下总能已经收敛了，但应力未必收敛。（b）K-point，即K网格，一般金属需要较大的K网格，采用超晶胞时可以选用相对较小的K网格，但实际上还是要经过测试。（5）关于磁性一般何时考虑自旋呢？举例子，例如BaTiO3中，Ba、Ti和O分别为+2，+4和-2价，离子全部为各个轨道满壳层的结构，就不必考虑自旋了；对于BaMnO3中，由于Mn+3价时d轨道还有电子，但未满，因此需考虑Mn的自旋，至于Ba和O则不必考虑。其实设定自旋就是给定一个原子磁矩的初始值，只在刚开始计算时作为初始值使用，具体的可参照磁性物理。（6）关于几何优化包括很多种了，比如晶格常数和原子位置同时优化，只优化原子位置，只优化晶格常数，还有晶格常数和原子位置分开优化等等。在PRL一篇文章中见到过只优化原子位置，晶格常数用实验值的例子（PRL 100, 186402 (2008)）；也见到过晶格常数先优化，之后固定晶格常数优化原子位置的情况；更多的情况则是Full geometry optimization。一般情况下，也有不优化几何结构直接计算电子结构的，但是对于缺陷形成能的计算则往往要优化。（7）关于软件软件大致分为基于平面波的软件，如CASTEP、PWSCF和ABINIT等等，计算量大概和体系原子数目的三次方相关；还有基于原子轨道线性组合的软件(LCAO)，比如openmx，siesta，dmol等，计算量和体系原子数目相关，一般可模拟较多原子数目的体系。 参考文献：Designing meaningful density functional theory calculations in materials science—a primer 赝势 晶包内原子超过30个时，或者晶包内有许多空洞的地方，使用 real-space 效率更高。 出处 。]]></content>
      <categories>
        <category>DFT</category>
      </categories>
      <tags>
        <tag>castep</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[几个 shell 脚本]]></title>
    <url>%2F2018%2F03%2F19%2Fsevseral-shell-scripts%2F</url>
    <content type="text"><![CDATA[记录几个 shell 脚本，高效。 批量使用下划线替换路径中的空格12345678910#!/bin/bash find . -name "* *"|while read name;do na=$(echo $name | tr ' ' '_') mv "$name" $nadone 参考文章。 Imagemagic 批量缩小图片123456789101112131415161718192021222324#!/bin/bash if [ ! -d re_size ];then mkdir -p re_sizefifilelist=$(find -iname "*.jpg")FOLDER=$(cd `dirname $0`; pwd)for filename in $filelistdo tempname=$&#123;filename#*.&#125; newfilename=$&#123;FOLDER&#125;$&#123;tempname&#125; if [ ! -d re_size$&#123;tempname%/*&#125; ];then mkdir -p re_size$&#123;tempname%/*&#125; fi convert $newfilename -resize 800 -quality 60 $&#123;FOLDER&#125;/re_size$&#123;tempname&#125; done 参考文章1 ，参考2 。 批量压制视频12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758596061#!/bin/bash # author: rachpt@126.com#------settings--------#myfolder=finshed# use sd or ipadcompatibility=sd #-------maincode-------#if [ $compatibility == "sd" ]then cut="854x480" videorate="500k" audiorate="64k" speed="fast" profile="-x264-params \"profile=high:level=4.0\"" out="480p" elif [ $compatibility == "ipad" ]then cut="1280x720" videorate="2200k" audiorate="128k" speed="slow" profile="-x264-params \"profile=high:level=4.2\"" out="720p"else exit fiif [ ! -d $myfolder ];then mkdir -p $myfolderfifilelist=$(find \( -iname "*.mp4" -o -iname "*.mkv" -o -iname "*.ts" -o -iname "*.avi" -o -iname "*.wmv" \) -a ! -name "*_$out.mp4")FOLDER=$(cd `dirname $0`; pwd)for filename in $filelistdo tempname=$&#123;filename#*/&#125; newfilename=$&#123;FOLDER&#125;/$&#123;tempname&#125; ffmpegcode="ffmpeg -i $newfilename -s $cut -c:v libx264 $profile -preset $speed -b:v $videorate" isempty=$&#123;filename#*.&#125; isempty=$&#123;isempty%/*&#125; if [ ! -d $myfolder$isempty ];then mkdir -p $myfolder$isempty fi nohup $ffmpegcode -pass 1 -an -f mp4 -y /dev/null &amp;&amp; $ffmpegcode -pass 2 -c:a aac -b:a $audiorate -strict -2 $&#123;FOLDER&#125;/$myfolder/$&#123;tempname%.*&#125;_$out.mp4 &gt;/dev/null 2&gt;&amp;1donerm -f ffmpeg2pass*echo "finished!"exit]]></content>
      <categories>
        <category>linux</category>
      </categories>
      <tags>
        <tag>shell</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Materials Studio CASTEP 迭代次数设置]]></title>
    <url>%2F2018%2F03%2F14%2Fms-scf-max-iterations%2F</url>
    <content type="text"><![CDATA[今天遇到 Materials Studio cij 计算失败，提示基态电子最小化失败。检查输出文件，发现蛛丝马迹。 错误信息1234Error check_elec_ground_state : electronic_minimisation of initial cell failed.Current trace stack: check_elec_ground_state castep 检查castep 文件发现下面的片段 1234567891011121314... 99 -2.09594982E+004 6.31070540E-001 3.18129596E-006 4013.01 &lt;-- SCF 100 -2.09594980E+004 6.31017470E-001 -2.41328571E-006 4053.95 &lt;-- SCF------------------------------------------------------------------------ &lt;-- SCF *Warning* max. SCF cycles performed but system has not reached the groundstate. Current total energy, E = -20959.33865776 eVCurrent free energy (E-TS) = -20959.49797103 eV(energies not corrected for finite basis set) . . . 意思大概是我设置的 SCF 迭代次数不够，100次后仍然未能找到自恰解。 回想使用步骤皆是以前的所用的，马上翻看之前成功的castep文件， 12345678 13 -2.78030685E+004 -1.99686373E+000 -7.49554981E-007 898.41 &lt;-- SCF 14 -2.78030685E+004 -1.99941165E+000 4.13854537E-008 943.16 &lt;-- SCF 15 -2.78030685E+004 -2.00267847E+000 -2.65786251E-007 988.60 &lt;-- SCF------------------------------------------------------------------------ &lt;-- SCF Final energy, E = -27803.06847596 eVFinal free energy (E-TS) = -27803.06847596 eV(energies not corrected for finite basis set) 几乎都是十几次得到自恰解。 找到问题所在。 迭代次数我不是设置的500 么回到 windows 版的MS，检查设置。我勒个去，Geometry Optimization 的 Max.iterations是500没错，但是Elastic Constants 的 Max.iterations还是默认的100。 还有 SCF 迭代次数可以设置。 问题有可能就在这里，提高迭代次数上线，有可能能够收敛，也有可能不能，白白浪费时间。 截断能、k点、自旋、对称性等都有可能影响收敛。 没办法，只能试试看了。 后续如果解决，会详细记录。]]></content>
      <categories>
        <category>DFT</category>
      </categories>
      <tags>
        <tag>castep</tag>
        <tag>ms</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[几个 MS 错误]]></title>
    <url>%2F2018%2F03%2F13%2Fsome-error-of-ms%2F</url>
    <content type="text"><![CDATA[记录几个 MS 的错误。 未找到基态能 在计算过程中经常遇到计算失败的情况，文件给出的警告是： 123*Warning* max. SCF cycles performed but system has not reached the groundstate. Warning: electronic minimisation did not converge when finding ground state. 和收敛有关的参数主要有能量的CUTOFF，SCF的次数，SMEAR，以及K点选取等，可以尝试一下。 SCF最大仍不收敛一般来说，MS默认的SCF次数100对于小系统是够用的，但是，原子数一多，就不一定了。 a) 首先结构的合理性，如果自建的结构偏离最低能量太大（或失配度太大），可能会难以收敛。 b) 取消一切对称性，充分驰豫晶格。 c) 有些结构本身就是亚稳态，scf的各项收敛指标如果设的太高，对于亚稳态就可能达不到如此的精度。 d) 改变收敛的条件，降低精度(能量的截断值)。 e) 增加循环次数。 f) 改变赝势。 优化不收敛增加设Max.Interations的大小 interations是定义积分精度的，相当于gaussian里的int选项；根据gauss的经验，对重原子如果不用细的积分网格，结果就不准确，特别是频率计算，可能会把正的频率算成负的频率。提高 interations的确可以提高精度，特别是对于过渡态和频率计算。 总能和文献不一致，而且多种方法都不同 很正常，只要相对值近似就可以。 在倒空间进行电子结构计算的方法中,都存在一个能量零点的取法的问题,不同的程序,取的不同。根本原因是V(G)在G=0是发散的(可以去R.T. Martin的电子结构那本书)。 castep是利用周期性,在倒空间进行电子结构计算的.我没有记错的话,Dmol3是在实空间来进行电子结构计算的.能量零点的取法就跟不同前者了。 因此在进行电子结构计算中，不要比较任何绝对能量值的大小，这样是毫无意义的，即使是同一个程序中也是这样，更不用说是两个不同的程序。 能量的相对值才具有物理意义。 部分来自该文 。 CASTEP结果错报警信息是CASTEP结果中的出错报警信息，该信息的含义如下： Warning max. SCF cycles performed but system has not reached the groundstate.已完成最大SCF循环，但体系仍未到达基态。Current total energy, E = -3470.539604785 eVCurrent free energy (E-TS) = -3470.795901720 eV(energies not corrected for finite basis set) NB est. 0K energy (E-0.5TS) = -3470.667753253 eV上述三者分别为完成最大SCF循环后（即当前）能量值。**** Warning: electronic minimisation did not converge when finding ground state.在搜寻基态过程中电子最小化并未达到收敛，]]></content>
      <categories>
        <category>DFT</category>
      </categories>
      <tags>
        <tag>castep</tag>
        <tag>ms</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Linux 中快速添加 hexo 文章]]></title>
    <url>%2F2018%2F03%2F13%2Fquick-add-a-essay-on-hexoSystem%2F</url>
    <content type="text"><![CDATA[在 hexo 添加新的文章的方式通常使用 new 命令新建一个 post ，然后编辑保存，或者直接使用编辑器新建保存，写了一个 shell 脚本实现便利地写文章。 所用的系统为 Linux mint ，markdown 编辑器为 typora 。 由于在 _post 中直接新建 md 文件需要自己手动天际 yaml 文件头，title 、date 等。而 cd 到 hexo 根目录后，使用命令 hexo new post &quot;title-of-essay&quot; ，即可在 _post 中创建预定样式的 md 文件，但是步骤略微繁琐。 通常的步骤： 1234cd blog #我的 hexo 博客目录hexo new post title-for-a-pagetypora ~blog/source/_posts/title-for-a-page.md &amp; 需要按的键比较多。 想到使用 shell 脚本，然后使用 alias 设置别名，爽歪歪。 脚本如下： 12345678#!/bin/bash read -t 600 -p "输入文章标题：" titlecd ~/blog dir=$(hexo new post $title | cut -d : -f 2)dir=$&#123;dir#*/&#125;cd ~ typora $dir &amp;exit 其中 600 是超时时间，单位秒，typora 为 md 格式编辑器。 编辑 bashrc 。 123456gedit .bashrc# 在最后添加alias ww='sh /home/rachpt/document/ww.sh &amp;&amp; exit'# 写上自己的路径，创建新的文件后自动关闭终端。ww 为自定义别名。 几点笔记： read 命令实现读取用后输入信息。 变量赋值后面直接使用“=”，前后不能空格。 使用前面的变量 使用$ + 变量名。 管道运算符| 将前面命令的输出输入下一个可以接受标准输入的命令。 cut 实现分片。 #*/ 删除第一个/ 以及其前面的部分。]]></content>
      <categories>
        <category>linux</category>
      </categories>
      <tags>
        <tag>shell</tag>
        <tag>hexo</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[简单使用 FFmpeg 压制视频]]></title>
    <url>%2F2018%2F03%2F12%2Fa-simple-example-of-FFmpeg%2F</url>
    <content type="text"><![CDATA[使用 FFmpeg 2pass 简单改小视频分辨率，降低音视频码率，以用于移动设备观看。 直接上命令： 12345ffmpeg -i in.mp4 -s 854x480 -c:v libx264 -preset slow -b:v 500k -pass 1 -an -f mp4 -y /dev/null #windows 最后使用 NULL，linux 使用 /dev/null。抑制输出。# -s 后面就是视频分辨率， b:v b:a 后面是相应码率。# &amp;&amp; \ 可以连接两句ffmpeg -i in.mp4 -s 854x480 -c:v libx264 -preset slow -b:v 500k -pass 2 -c:a aac -b:a 64k -strict -2 out.mp4# strict -2 参数由ffmpeg版本决定，旧的要，否则报错。 速度选项： ultrafastsuperfastveryfastfasterfastmedium – default presetslowslowerveryslow 12345-an : 不编码音频-vcodec : 设置视频的编码，我这里使用的是x264-b : 这个是码率-f : 强制使用格式-y : 自动输y确认 一条命令： 1nohup ffmpeg -i in.mkv -s 854x480 -c:v libx264 -preset slow -b:v 500k -pass 1 -an -f mp4 -y /dev/null &amp;&amp; \ffmpeg -i in.mkv -s 854x480 -c:v libx264 -preset slow -b:v 500k -pass 2 -c:a aac -b:a 64k -strict -2 out.mp4 &gt;/dev/null 2&gt;&amp;1 &amp; 注意 \ 后面不要空格，直接接 ffmpeg 命令。或者不要这个连接符 试试。 参考内容1 ， 参考内容2 。 使用脚本批量压制： 12345678910111213141516#!/bin/bash filelist=$(find *.mp4 *.mkv *.avi ! -name "*_480p.mp4" -a)OLDIFS="$IFS"IFS=$"\n"for filename in *.mp4 *.mkv *.avido nohup ffmpeg -i $filename -s 854x480 -c:v libx264 -preset fast -b:v 500k -pass 1 -an -f mp4 -y /dev/null &amp;&amp; \ ffmpeg -i $filename -s 854x480 -c:v libx264 -preset fast -b:v 500k -pass 2 -c:a aac -b:a 64k -strict -2 "$&#123;filename%.*&#125;"_480p.mp4 &gt;/dev/null 2&gt;&amp;1 donerm ffmpeg2pass*IFS=$OLDIFS 参考文档1 ， 参考文档2—nohup ，参考文档—find ，参考文档—IFS 。 find 使用有无，具体修改如下。 改进版，可以处理子目录下的所有 mp4 mkv avi wmv格式视频。 123456789101112131415161718192021222324#!/bin/bash rm -f nohup.outif [ ! -d finish ];then mkdir -p finishfifilelist=$(find \( -iname "*.mp4" -o -iname "*.mkv" -o -iname "*.avi" -o -iname "*.wmv" \) -a ! -name "*_480p.mp4")FOLDER=$(cd `dirname $0`; pwd)for filename in $filelistdo tempname=$&#123;filename##*/&#125; newfilename=$&#123;tempname%.*&#125; nohup ffmpeg -i $FOLDER$&#123;filename#*.&#125; -s 854x480 -c:v libx264 -preset fast -b:v 500k -pass 1 -an -f mp4 -y /dev/null &amp;&amp; ffmpeg -i $FOLDER$&#123;filename#*.&#125; -s 854x480 -c:v libx264 -preset fast -b:v 500k -pass 2 -c:a aac -b:a 64k -strict -2 finish/"$&#123;newfilename&#125;"_480p.mp4 &gt;/dev/null 2&gt;&amp;1 donerm -f ffmpeg2pass*exit 裁剪1ffmpeg -ss 00:00:00 -i in.mp4 -to 03:35:55 -vcodec copy -acodec copy -avoid_negative_ts 1 cutout.mp4 -i 需要在 -to 前面。 参考文章1，参考2。 附录： mpv 几个快捷键 键 功能 &lt; 逐帧 播放，上一帧 &gt; 逐帧 播放，下一帧 M 静音 shift + &lt;– 退一秒 shift + –&gt; 进一秒 参考内容 。]]></content>
      <categories>
        <category>linux</category>
      </categories>
      <tags>
        <tag>ffmpeg</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[解决 mint 系统中 mendeley 无法使用 fcitx 输入中文]]></title>
    <url>%2F2018%2F03%2F12%2Fsolve-the-problem-of-cannot-inputting-Chinese-in-mendeley%2F</url>
    <content type="text"><![CDATA[自从使用了 mendeley 软件后各种不顺，万恶之源就是在 mendeley 中无法使用 fcitx 输入中文。 一开始的解决办法是换用 ibus 输入法，万般无赖，离开了使用良久的 fcitx，转向 ibus。先是 ibus 的 sunpinyin 无法设置使用双拼，然后是升级 libpinyin ，最后是尝试升级 ibus 本身，最后以失败告终，白白浪费时间罢了。 使用 ibus 最后连中文都无法输入，重启也无效。于是换回熟悉的 fcitx ，居然让我发现了解决 fcitx 与 mendeley 之间矛盾的方法。 最简单的解决办法： 123sudo cp /usr/lib/x86_64-linux-gnu/qt5/plugins/platforminputcontexts/libfcitxplatforminputcontextplugin.so /opt/mendeleydesktop/plugins/qt/plugins/platforminputcontexts/# linux mint 18.3，基于 ubuntu 16.04 参考 此文 （ubuntu），以及 知乎 链接 。 拷贝 libfcitxplatforminputcontextplugin.so 到 mendeley 安装位置，debian和ubuntu的安装位置为： /opt/mendeleydesktop/plugins/qt/plugins/platforminputcontexts/ 重新启动mendeley即可发现中文可以输入了。 1234locate libfcitxplatforminputcontextplugin.so #找到系统中的libfcitxplatforminputcontextplugin.so#复制到 /opt/mendeleydesktop/plugins/qt/plugins/platforminputcontexts/ 目录下。 需要注意的是，在这之前，我使用新立得卸载了 ibus，不知怎么总是无法生效。 于是在系统设置 –&gt; 输入法 中 安装简体中文的语言支持，也就是同时装好 fcitx 和ibus 后，重启。 最后成功解决 fcitx 在 mengeley 中输入中文的问题。]]></content>
      <categories>
        <category>linux</category>
      </categories>
      <tags>
        <tag>memdeley</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[努比亚 Z11 mini 换电池]]></title>
    <url>%2F2018%2F03%2F11%2Fchange-battery-for-nubiaZ11mini%2F</url>
    <content type="text"><![CDATA[年前就想换电池了，听说小米7快发布了，于是没换等mi7。现在看来mi7要等上一段时间了。所已淘宝买个电池换换，再战个半年。 准备工作 淘宝买电池： 随便找的 淘宝电池 ，41块大洋。 买来后东西挺多的， 使用工具： 只需要这三个工具 + 一个电吹风机。 刀子用来翘壳和电池的，需要十字螺丝刀。 拆后壳由于只有一个手机，所以没拍图片，网上找的图片修的。 使用吹风机加热后壳，变烫后直接用刀子在下面位置撬开小口。 注意避开卡扣位置。 需要注意的是，有如下三个地方使用了胶，特别是指纹区域附近，用卡片从 右侧 顶开胶。 小心指纹排线。 拆开上板使用螺丝刀拆掉摄像头所在区域的金属盖板，注意 保存螺丝。 从摄像头红圈上面部分翘起 盖板。 拆电池首先拆掉指纹排线 btb ，然后是电池的 btb。 两块黄色区域就是固定电池的双面胶尾巴。 用刀子或者 塑料片拆解电池（图片来自 优酷）。用吹风机加热电池四周以方便将其取下。 如果使用刀子，注意电池后面的排线，别划到了。 拆电池会使电池变形。 建议建议新电池先上排线 btb，开机测试，充电测试一下，没问题再关机装好还原。 最后， 附上拆下来的电池图。 以及比较。]]></content>
      <tags>
        <tag>nubia</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Linux 设置开机自动打开数字小键盘]]></title>
    <url>%2F2018%2F03%2F11%2Flinux-allow-numlock-on%2F</url>
    <content type="text"><![CDATA[Linux mint 设置开机自动打开数字键盘锁 numlock。 因为开机密码是用的数字，每次开机或者重起系统后输入密码前总是需要手动打开Numlock开关，很麻烦，还没有指示器。于是想到让其开机自动打开省事。 linux mint 设置对于linux mint ，在系统设置 –&gt; 登录窗口 –&gt; 设置 中，有激活 numlock 开关，但是是不可用状态。 原因是需要安装一个软件： numlockx 1sudo apt-get install numlockx #安装好后，可能需要重起系统 设置好后，重起即可看到效果。 或则编辑 lightdm 的配置文件： 1sudo gedit /etc/lightdm/lightdm.conf 添加新行 123456[Seat:*]allow-guest=false #不允许访客登录系统greeter-show-manual-login=false #可以自己输入登录用户名greeter-hide-users=true #隐藏用户列表greeter-setup-script=/usr/bin/numlockx on #这一行自己加的，其他是系统设置时自动加的 这样等同于在设置中激活numlock 。 参考博文 。]]></content>
      <categories>
        <category>linux</category>
      </categories>
      <tags>
        <tag>numlock</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[几个关于 iBus 输入法的记录]]></title>
    <url>%2F2018%2F03%2F10%2Fnotes-for-solve-ibus-error%2F</url>
    <content type="text"><![CDATA[Mendely 的标注功能只支持 iBus 的中文输入，被迫从 Fcitx 改成 iBus。遇到一些问题，这里记录备忘。 Sunpinyin 无法打开首选项Linux mint 切换输入法还是很简单的，Fictx 和 iBus 一键安装。系统设置 –&gt; 语言 –&gt; 输入法 –&gt; 简体中文 点击安装即可。切换需要重启系统。 在终端中输入 1ibus-setup #设置 iBus 点击 Sunpinyin 首选项，报错如下： 1234Traceback (most recent call last): File "/usr/share//ibus-sunpinyin/setup/main.py", line 42, in &lt;module&gt; import ibusImportError: No module named ibus 提示没有 ibus 模块，网上搜到的解决办法如下： 从 https://ubuntu.pkgs.org/14.04/ubuntu-main-amd64/python-ibus_1.5.5-1ubuntu3_all.deb.html 下载deb安装即可。或则从 这里 下载。 原地址: ibus-setup-sunpinyin 无法打开设置 使用ibus-libpinyin相比 ibus-pinyin ，ibus-libpinyin 更新一些。可能会更好。源码地址： https://github.com/libpinyin/ibus-libpinyin 安装很是费劲，最后更新到 IBus 智能拼音 1.9.3 后居然直接不能用来，使用 apt 安装的是1.7.3 （mint 18.3）。 安装参考 在debian stretch上编译安装ibus-libpinyin(V1.7.3)过程记录 。 核心思想： 提示缺少啥依赖，就安装啥。 如 name 的依赖缺少，就找 libname-dev 的包。 其中 libdb4.8-dev 的部分 直接使用 sudo apt install libdb5.3-dev 解决的（mint 18.3）。 关于libpinyin， 在 github 上下源码编译 make 老是报错，最后直接 在此 下载现成的解决的。 libpinyin 使用./autogen.sh --prefix=/usr 加上路径安装。默认在 /usr/local 目录下，自带 share 。装错 直接 rm 删掉即可。 好气，转好后居然不能用。 软件能用坚决不要强行更新ibus 有个下bug，不能一直显示输入法状态，于是想到更新软件版本解决，从源码编译，麻蛋，一个又一个的依赖缺失，最后make还是失败了。从deb安装，直接提示部分核心组件需要升级，😂，而核心组件的升级除非我升级底层系统。所以最后只好换回原来版本。]]></content>
      <categories>
        <category>linux</category>
      </categories>
      <tags>
        <tag>ibus</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[next 主题设置]]></title>
    <url>%2F2018%2F03%2F05%2Fsettings-for-next-theme%2F</url>
    <content type="text"><![CDATA[记录几个修改，方便以后升级主题后更新。 目前 next 版本：6.0.5 。 文章加密打开themes-&gt;next-&gt;layout-&gt;_custom-&gt;head.swig文件(默认路径)插入 JS 脚本： 12345678910&lt;script&gt; (function()&#123; if('&#123;&#123; page.password &#125;&#125;')&#123; if (prompt('请输入文章密码') !== '&#123;&#123; page.password &#125;&#125;')&#123; alert('密码错误！返回上页'); history.back(); &#125; &#125; &#125;)();&lt;/script&gt; 使用：12345678---title: date: 2018-03-05 19:37:08tags:categories:top: #顶置password: #密码--- 没什么卵用，查看源码一切都暴露了。 添加 DaoVoice打开themes-&gt;next-&gt;layout-&gt;_custom-&gt;head.swig文件(默认路径)插入JS： 123456789&#123;% if theme.daovoice %&#125; &lt;script&gt; (function(i,s,o,g,r,a,m)&#123;i[&quot;DaoVoiceObject&quot;]=r;i[r]=i[r]||function()&#123;(i[r].q=i[r].q||[]).push(arguments)&#125;,i[r].l=1*new Date();a=s.createElement(o),m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;a.charset=&quot;utf-8&quot;;m.parentNode.insertBefore(a,m)&#125;)(window,document,&quot;script&quot;,(&apos;https:&apos; == document.location.protocol ? &apos;https:&apos; : &apos;http:&apos;) + &quot;//widget.daovoice.io/widget/0f81ff2f.js&quot;,&quot;daovoice&quot;) daovoice(&apos;init&apos;, &#123; app_id: &quot;&#123;&#123;theme.daovoice_app_id&#125;&#125;&quot; &#125;); daovoice(&apos;update&apos;); &lt;/script&gt;&#123;% endif %&#125; 首先在 daovoice 注册账号，邀请码是0f81ff2f,注册完成后会得到一个 app_id ： 123# Online contact daovoice: truedaovoice_app_id: &quot;刚才获得的 app_id&quot; 自定义css打开themes/next/source/css/_custom/custom.styl ： 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354// Custom styles.// 主页文章添加阴影效果 （不利于移动端）/* .post &#123; margin-top: 60px; margin-bottom: 60px; padding: 15px; -webkit-box-shadow: 0 0 5px rgba(202, 203, 203, .5); -moz-box-shadow: 0 0 5px rgba(202, 203, 204, .5); &#125;*/// 鼠标样式 * &#123; cursor: url("/images/sword2.ico"),auto!important &#125; :active &#123; cursor: url("/images/sword1.ico"),auto!important &#125; // DaoVoice 图标透明 .daodream-launcher-button, .daodream-launcher-maximized, .daodream-launcher-with-initials &#123; opacity:0.3; -moz-opacity:0.3; opacity: 0.3; &#125; #daodream-launcher &#123; opacity:0.1; -moz-opacity:0.1; opacity: 0.1; &#125; div.daodream-launcher-preview &#123; opacity:0.9 !important; -moz-opacity:0.9 !important; opacity: 0.9 !important; &#125; #daodream-launcher:hover &#123; opacity:0.9 !important; -moz-opacity:0.9 !important; opacity: 0.9 !important; &#125; .daodream-launcher-button:hover, .daodream-launcher-maximized:hover, .daodream-launcher-with-initials:hover &#123; opacity:0.9 !important; -moz-opacity:0.9 !important; opacity: 0.9 !important; &#125;// Valine 和 algolia 和 DaoDream 去除 Powered By div.info, span.algolia-powered, div.daodream-powered-by &#123; visibility: hidden !important; height: 0 !important; &#125; div.txt-right&#123; visibility: hidden !important; height: 0 !important; &#125; 统计字数&amp;阅读时间至hexo根目录，安装 hexo-symbols-count-time ： 1sudo npm install hexo-symbols-count-time --save 至 hexo 的 _config.yml 添加： 12345symbols_count_time: symbols: true time: true total_symbols: true total_time: true 至 next 主题 的 _config.yml 修改： 123456symbols_count_time: separated_meta: &lt;span style=&quot;color: red&quot;&gt;true&lt;/span&gt; item_text_post: true item_text_total: false awl: 5 wpm: 200 hexo-reading-time 和 hexo-worcount 已经弃用。 站点访问量直接配置 next 主题： 12345678busuanzi_count: enable: &lt;span style=&quot;color: red&quot;&gt;true&lt;?span&gt; total_visitors: true total_visitors_icon: user total_views: true total_views_icon: eye post_views: true post_views_icon: eye 或者自己改文件： 在 /home/rachpt/blog/themes/next/layout/_partials/footer.swig 最后添加代码： 1234567&lt;script async src="https://dn-lbstatics.qbox.me/busuanzi/2.3/busuanzi.pure.mini.js"&gt;&lt;/script&gt;&lt;div&gt; &lt;i class="fa fa-user-md"&gt;&lt;/i&gt; 本站总访问量：&lt;span id="busuanzi_value_site_pv"&gt;&lt;/span&gt; &amp;nbsp;| &amp;nbsp; &lt;i class="fa fa-eye"&gt;&lt;/i&gt; 本站访客数：&lt;span id="busuanzi_value_site_uv"&gt;&lt;/span&gt; &lt;/div&gt; 头像旋转在\themes\next\source\css\_common\components\sidebar\sidebar-author.styl，里面添加如下代码： 1234567891011121314151617181920212223242526272829303132333435363738 /* 鼠标经过头像旋转360度 */ -webkit-transition: -webkit-transform 1.0s ease-out; -moz-transition: -moz-transform 1.0s ease-out; transition: transform 1.0s ease-out;&#125;/* 鼠标经过头像旋转360度 */img:hover &#123; -webkit-transform: rotateZ(360deg); -moz-transform: rotateZ(360deg); transform: rotateZ(360deg);&#125;/* Z 轴旋转动画 */@-webkit-keyframes play &#123; 0% &#123; -webkit-transform: rotateZ(0deg); &#125; 100% &#123; -webkit-transform: rotateZ(-360deg); &#125;&#125;@-moz-keyframes play &#123; 0% &#123; -moz-transform: rotateZ(0deg); &#125; 100% &#123; -moz-transform: rotateZ(-360deg); &#125;&#125;@keyframes play &#123; 0% &#123; transform: rotateZ(0deg); &#125; 100% &#123; transform: rotateZ(-360deg); &#125;&#125; 添加 “本文结束”创建。在路径 \themes\next\layout\_macro 中新建 post-end-tag.swig 文件,并添加以下内容： 1234567&lt;div&gt; &#123;% if not is_index %&#125; &lt;div style="text-align:center;color: #ccc;font-size:14px;"&gt;&#123;# #&#125;&#123;&#123; __(theme.post_end_tag.contents) &#125;&#125;&#123;# #&#125;&lt;/div&gt; &#123;% endif %&#125;&lt;/div&gt; 修改。接着打开\themes\next\layout\_macro\post.swig文件，在post-body 之后， post-footer 之前添加如下画红色部分代码 参数。主题配置文件（theme/next/_config.yml)末尾添加： 123post_end_tag: enabled: true contents: ---------本文结束&lt;i class=&quot;fa fa-paw&quot;&gt;&lt;/i&gt;感谢阅读--------- 内容可以自定义。本人参考 hexo的next主题个性化配置教程 修改。 顶置修改 hero-generator-index 插件，把文件：node_modules/hexo-generator-index/lib/generator.js 内的代码替换为： 12345678910111213141516171819202122232425262728'use strict';var pagination = require('hexo-pagination');module.exports = function(locals)&#123; var config = this.config; var posts = locals.posts; posts.data = posts.data.sort(function(a, b) &#123; if(a.top &amp;&amp; b.top) &#123; // 两篇文章top都有定义 if(a.top == b.top) return b.date - a.date; // 若top值一样则按照文章日期降序排 else return b.top - a.top; // 否则按照top值降序排 &#125; else if(a.top &amp;&amp; !b.top) &#123; // 以下是只有一篇文章top有定义，那么将有top的排在前面（这里用异或操作居然不行233） return -1; &#125; else if(!a.top &amp;&amp; b.top) &#123; return 1; &#125; else return b.date - a.date; // 都没定义按照文章日期降序排 &#125;); var paginationDir = config.pagination_dir || 'page'; return pagination('', posts, &#123; perPage: config.index_generator.per_page, layout: ['index', 'archive'], format: paginationDir + '/%d/', data: &#123; __index: true &#125; &#125;);&#125;; 使用：（数值越大文章越靠前） 1234567---title: date: 2018-03-05 19:37:08tags:categories:top: #顶置--- 添加侧边栏音乐播单 下载所需文件： ​ 长显+连续播放+右键音量控制 OR ​ 长隐+连续播放 ​ 备用下载播放器 密码：oznd 设置 hexo 配置文件 _config.yml : 123skip_render: - 404.html #跳过404页面 - static/** #跳过static目录下的所有内容，注意是两个*号。 先复制 下载文件中的 四个文件夹至 source/static 。然后将 _my 文件夹移动到 /themes/next/layout 。 使所有页面都能播放，在 /themes/next/layout/_layout.swig 的 &lt;/body&gt; 前添加 1&#123;% include &apos;_my/audio.swig&apos; %&#125; 至/themes/next/_config.yml 主题配置文件末尾添加： 1234567891011121314# musicaudio: enable: true sources: [ &#123; title: '....', artist: '....', mp3: '......mp3', cover: '.....jpg' &#125;, &#123; title: '.....', artist: '......', mp3: '.......mp3', cover: '.....jpg' &#125; ] 其他： 注释掉 source/static/js/player.js的$(&quot;div.ssBtn&quot;).click() ，播放器就不会一直弹出。 12345678910source/static/js/player.jsvar setProgress = function (value) &#123; var currentSec = parseInt(value % 60) &lt; 10 ? '0' + parseInt(value % 60) : parseInt(value % 60), ratio = value / audio.duration * 100; $('.timer').html(parseInt(value / 60) + ':' + currentSec);+ localStorage.time = value //储音乐的播放状态+ localStorage.song = currentTrack //储音乐的播放状态&#125; sessionStorage.autoPlay = &quot;true&quot; 控制自动播放。 123456789101112131415161718var FirstLoad = function (i, time) &#123; if (i == undefined) &#123; i = 0 currentTrack = 0 shuffleIndex = 0 &#125; loadMusic(i) if (time) &#123; audio.currentTime = time &#125; if (localStorage.volume) &#123; audio.volume = localStorage.volume &#125; if (sessionStorage.autoPlay == undefined) &#123; sessionStorage.autoPlay = "true" &#125;&#125; 设置 参考 。]]></content>
  </entry>
  <entry>
    <title><![CDATA[next 主题使用笔记——标签]]></title>
    <url>%2F2018%2F03%2F05%2Ftest%2F</url>
    <content type="text"><![CDATA[记录 hexo-theme-next 一些使用技巧，自用。 版本要求 0.4.5+ 。 引用文字居中1&#123;% cq %&#125; 文本居中引用&#123;% endcq %&#125; #简洁的写法 cq = centerquote 文本居中引用 大图片 图片将自动扩大 26%。 1&#123;% fi /image-url, alt, title %&#125; # fi = fullimage note 标签 http://getbootstrap.com/ 至next主题配置文件上设置： 1234567note: style: simple # modern # flat # disabled icons: false border_radius: 3 # Offset lighter of background in % for modern and flat styles (modern: -12 | 12; flat: -18 | 6). # Offset also applied to label tag variables. This option can work with disabled note tag. light_bg_offset: 0 使用： 123456789&#123;% note class_name %&#125; Content (支持部分 md 格式) &#123;% endnote %&#125;class_name 使用： default primary success info warning danger default 样式 (支持部分 md 格式) primary 样式 (支持部分 md 格式) success 样式 (支持部分 md 格式) info 样式 (支持部分 md 格式) warning 样式 (支持部分 md 格式) danger 样式 (支持部分 md 格式) 插入视频使用： 12&lt;video src=&apos; &apos; type=&apos;video/mp4&apos; controls=&apos;controls&apos; width=&apos;100%&apos; height=&apos;100%&apos;&gt;&lt;/video&gt; 音乐使用： http://saili.science/2017/05/30/music/ 12&lt;audio controls=&quot;controls&quot; playsinline=&quot;&quot; webkit-playsinline=&quot;&quot;&gt; &lt;source src=&quot;http://other.web.nf01.sycdn.kuwo.cn/resource/n2/40/14/3065311430.mp3&quot; type=&quot;audio/mpeg&quot;&gt; &lt;/audio&gt; Tabs 标签至 next 主题配置中启用： 1234567# Tabs tag.tabs: enable: true&gt; transition: tabs: true labels: true border_radius: 0 使用： 1234567891011&#123;% tabs 选项卡[标题], 2 %&#125;&lt;!-- tab --&gt;**这是选项卡 1**&lt;!-- endtab --&gt;&lt;!-- tab --&gt;**我是选项卡 2**&lt;!-- endtab --&gt;&lt;!-- tab --&gt;**就是选项卡 3 了**&lt;!-- endtab --&gt;&#123;% endtabs %&#125; , 2 从第二个开始。 选项卡[标题] 1选项卡[标题] 2选项卡[标题] 3这是选项卡 1 我是选项卡 2 就是选项卡 3 了 1234567891011&#123;% tabs Fifth unique name %&#125;&lt;!-- tab @text-width --&gt;**This is Tab 1.**&lt;!-- endtab --&gt;&lt;!-- tab @amazon --&gt;**This is Tab 2.**&lt;!-- endtab --&gt;&lt;!-- tab @bold --&gt;**This is Tab 3.**&lt;!-- endtab --&gt;&#123;% endtabs %&#125; This is Tab 1. This is Tab 2. This is Tab 3. https://almostover.ru/2016-01/hexo-theme-next-test/]]></content>
  </entry>
  <entry>
    <title><![CDATA[新博客地址]]></title>
    <url>%2F2018%2F03%2F03%2Fmy-new-blog%2F</url>
    <content type="text"><![CDATA[已经对 wordpress 无止境的更新无语了，慢慢迁移至 Github Pages &amp; Coding Pages。 永久地址： https://rachpt.github.io ，已经重定向至 https://rachpt.me 。 https://rachpt.coding.me ，已经重定向至 https://blog.rachpt.me 。 &nbsp; 以后有可能 重定向到这个域名。]]></content>
      <categories>
        <category>随笔</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[Gimp 简单使用笔记]]></title>
    <url>%2F2018%2F03%2F03%2Fgimp-simple-notes%2F</url>
    <content type="text"><![CDATA[记录一些 Gimp 常用操作，力求简洁明了。 画矩形框 选用矩形选择工具 (快捷键R) ，选区。 编辑 –&gt; 勾画选区。 画笔工具使用 快捷键 P 进入画笔工具，临时使用拾色器工具 （吸管工具）快捷键 ctrl + 鼠标左键； 与此对比，PS 使用 b 进入画笔工具，使用 alt 取色。两者 画笔放大缩小 快捷键一致，[ ] 。 放大缩小GIMP 和 PS 一样使用 Z 进入缩放zoom。不同处， ps 按住z 键 同时按住鼠标左键左右拖动实现缩放；双击左侧工具栏上的 抓手工具 或者 缩放工具 画面大小自适应。 而GIMP 不同，任意界面 按住 ctrl 键，使用鼠标滚轮实现缩放。]]></content>
      <categories>
        <category>教程</category>
      </categories>
      <tags>
        <tag>gimp</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Pycharm please specify a different SDK name]]></title>
    <url>%2F2018%2F03%2F03%2Fpycharm-please-specify-a-different-SDK-name%2F</url>
    <content type="text"><![CDATA[设置 pycharm 保存时， 报错：pycharm please specify a different SDK name ，网上找到解决办法，这里记录一下，备用。 产生原因之前创建过两个相同的 project。比如先建一个 project，觉得不好，删掉再建，手残有时刚刚删掉的project，就会出现这个错误。两个现有虚拟环境具有相同的名称，于是无法设置解释器。 解决办法打开 settings ，在project interpreyer 里面，show all 。 选择有红色警示符的项，删掉即可。 参考： PyCharm 2017.3 Help 。]]></content>
  </entry>
  <entry>
    <title><![CDATA[Windows 使用笔记-01]]></title>
    <url>%2F2018%2F01%2F27%2Fwindows-note-01%2F</url>
    <content type="text"><![CDATA[首先得知道windows这玩意儿是啥。或许很多人已将将windows和PC电脑画等号了，这显然是不对的。windows是巨硬推出的一款带图形界面的操作系统，我们买的电脑或者笔记本大部分钱用于硬件上，几户所有预装系统的笔记本都是最便宜定置性最差的windows家庭版（或则家庭中文版）。于是逻辑上而言，装系统将是使用windows的第一步，对于小白用户，老老实实用你的windows家庭版（或许你都不知道自己的系统是啥，和别人的有啥区别，囧）。 目前而言，可以考虑安装的windows有三个 大版本：win7,win8.1,win10。win7应该很快进入与xp一样的停止支持的状态，而win8.1真心不适合桌面平台，win10将是我最先推荐的。现在几户所有的电脑都是64位的处理器了，除非老爷机。（对于win10 右键此电脑，属性 即可看到如下所示信息页面，或则在 资源管理器 中右键点击 属性） 32位windows系统最大只支持3.6G左右的内存，如果你有4G或以上内存，请不要考虑32位系统。32位系统也有它自己的优点，小就是一个，32位系统可以节省系统安装空间30%-40%，32位系统当然是不支持64位应用程序的，同一个软件32位版与64版运行效率相当，能用64的我当然是推荐使用64的。 如果你是考虑兼容性，在win7 与win10之间无法决则，我几乎可以告诉你兼容性几乎不用考虑，除非你要使用老掉牙的旧软件，或者是某些特别偏的久久未更新的行业（小众）软件。win10 几乎支持能用到的所有软件。 如果你还是要使用win7，那么没必要非旗舰版不可，对于普通用户而言可能专业版就很不错了，一是安装体积较旗舰版小上不少，再则你永远用不到的旗舰版的功能也没必要占用你本来就不多的硬件资源。 win8.1 我们直接忽略，一是安装体积较win7、10都大上不少（是win10的1.5倍），开始屏真的不适合桌面用户，还有那厚厚的程序边框（用过win10的窄边后你会觉得8.1很丑）[我会告诉你有软件可以修改，但是还是没有win10一个像素窄]。 至于win10，如果你是变形本，比如surface之类有触控屏的笔记本，并且想体验完整的windows服务，那么pro专业版或者enterprise企业版将是你最好的选择，教育版和企业版类似。对于普通user而言pro专业版就够了。家庭版没有本地策略组，很多必要的功能没有，所有强烈建议不要使用家庭版系统（谁用谁知道：开机，尼玛，正在安装系统更新，重启，靠，更新失败，正在回滚，重启；关键是这是一个循环，以后还会这样）。 对于普通笔记本与台式机，如果你不用巨硬的uwp应用，并且不是edge浏览器的忠实粉丝（谁会用这玩意儿啊，体验太差！）。那么 windows 10 LTSB 企业长期服务支持版 将是最好的选择。推荐理由如下： 原生无应用商店哪些没卵用的东西； 无edge浏览器，有IE，不用考虑兼容性，有些网银必须这货才能用； 更新少，稳定性高（当然可以设置禁用自动更新）。LTSB目前有两个分支：ltsb 2015 和 ltsb 2016（这两个是独立维护不一样的）。推荐笔记本使用2016，台式机使用2015。理由： 2016 系统自带wifi热点（你非要用猎豹wifi，我无话可说）与护眼模式（第三方软件也可以实现），这两点笔记本比较需要。同时开始菜单较2015版有一点改变，16的更方便些。 2015 的软件兼容性可能更好，比如好用的KClock只能在2015上用，2016及其以上不行。[win + x]和2016有区别，个人觉得2015的更方便。至于你一直关心的激活，除win7外，都只能 KMS激活180天（激活软件都贴心的做了定时重新激活，所以一次激活后你就不用管了，至于软件文末给链接），系统镜像下载，推荐百度 i tell you 或则记住这个 http://msdn.itellyou.cn/ 。 点击详情，复制 ed2k 链接至百度云离线下载，然后使用工具从百度网盘下载即可得到系统镜像文件。 推荐使用U盘全新安装。win10 的系统可以直接挂载镜像复制里面的全部内容至一个格式化的U盘即可完成启动盘的制作。无需向win7一样必须使用工具刻录制作启动盘。如果你不放心，可以使用这个免费的工具 Rufus http://rufus.akeo.ie/ 。U盘格式一般使用fat32即可，其他的NTFS、exfat也行。 一本正经地系统安装开始。 开始前备份好需要的文件。如果你有固态硬盘，推荐固态硬盘不要分区（自己百度分区脑补），机械的建议不要分太多，两个不能再多了。 可能还有UEFI引导是大多数新手的困惑，UEFI引导需要配合GPT分区（如果有固态，这个是必须的！才能发挥固态的优势）。能使用UEFI则尽量使用。如果安装中发现 以前分区是MBR格式，如果无重要文件可以全盘格式化变成GPT格式分区，如果有重要分区不能格式化，找个PE系统，进去点点点几下就可以轻松转换格式，具体自己百度。 鉴于windows的运行机制，个人建议固体硬盘留给C盘做系统盘，机械硬盘一个分区用作数据存储。如果只有一个机械硬盘，要安装的软件少，则100G给C盘，其他做数据存储。让C盘的空间使用率在60%或许是比较合适的。 具体而言，不同的主板进入BIOS的方法可能不一样，大部分是使用F2 进入BIOS设置。装系统，需要关闭有个 security 啥的，允许 使用USB boot 引导 使用 UEFI，可以设置U盘的引导顺序为第一个，F10保存重启，如果不知道如何进入boot manager 的话。如果一切顺利，重启选择重USB引导启动进入安装界面，一路点点点，设置分区大小，会自动重启几下，随后系统就算是全新安装好了。如果你是个懒人，可以考虑双击setup 进行升级安装，但只能升级对应版本系统，并且升级后极有可能有一些莫名其妙的小bug，不推荐。 win10 全系列+office 激活工具（最好的激活工具）： 蓝奏云盘: https://pan.lanzou.com/i0fg1tg 度盘链接: https://pan.baidu.com/s/1mjbPqm0 密码: rach 至于后续，会有其他windows系列教程上线，敬请期待。]]></content>
      <categories>
        <category>实用</category>
        <category>教程</category>
      </categories>
      <tags>
        <tag>windows</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Linux下的PDF阅读软件zathura]]></title>
    <url>%2F2018%2F01%2F22%2Flinux-pdfreader-zathura%2F</url>
    <content type="text"><![CDATA[记录 zathura 的常用设置与技巧。 配置~/.config/zathura/zathurarc 用户配置文件与路径； /etc/zathurarc 全局配置文件与路径； 使用 gedit ~/.config/zathura/zathurarc 添加下面的配置命令，#号以及后面为注释。 set adjust-open &quot;width&quot; #以宽度自适应打开 set font &quot;Noto Sans CJK SC Regular 10&quot; #字体与字号 set guioptions &quot;&quot; #GUI相关，留空可隐藏底部statusbar set window-title-basename true #只显示文件名，否则显示完整路径 set incremental-search true #增强搜索，实时搜索 set show-v-scrollbar true #显示右侧进度条 set selection-clipboard clipboard #粘贴版 set window-height 760 #默认高度，像素 set window-width 1300 #默认宽度 # 更多请参考：https://github.com/lervag/dotfiles/blob/master/config/zathura/zathurarc linux mint 18.3 的路径# 设置默认打开方式，（如果右键无效可使用下面方法） /etc/gnome/defaults.list #保存全局打开方式路径 /usr/share/applications #保存 ，这两个是一样的 ～/.config/mimeapps.list #用户 # 添加 application/pdf=xpdf.desktop 部分快捷键 f 高亮链接，按 相应数字 打开链接； q 退出； \# ^ 是 ctrl 键 ^f Scroll page down ^b Scroll page up ^d Scroll half a page down ^u Scroll half a page up r Rotate the page R Reload the document ^n Toggle statusbar visibility ^m Toggle inputbar visibility ^r inverted color /反色 space 半页 数字 + G 跳转页码 gg 最前 GG 最后 命令 :bmark xxx 创建书签xxx （长书签） :blist xxx 打开bookmark :bdelete xxx 删除书签 :q 退出 `/word` 搜索word，使用 `n / N` 跳到下一个(上一个)结果， ？ 搜索 向前（向后） :info 显示文档信息 短命令书签 使用 `a letter or number` ，先按 m 键，然后按短书签名，创建； 跳转先前的短书签，先按 `&apos;` 键，然后先前的字母或数字； 关于复制问题 I discovered that zathura is using the x11 primary selection as default instead of the actual clipboard. This can be changed by creating a ~/.config/zathura/zathurarc file with the following content:1set selection-clipboard clipboard 具体见 https://github.com/zegervdv/homebrew-zathura/issues/5 部分参考 http://80x86.io/post/pdf-viewer-for-linuxer]]></content>
      <categories>
        <category>实用</category>
        <category>教程</category>
      </categories>
      <tags>
        <tag>PDF</tag>
        <tag>linux</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[ubuntu 更新 xz 至 5.2+]]></title>
    <url>%2F2018%2F01%2F13%2Fubuntu-update-xz-to-5-2%2F</url>
    <content type="text"><![CDATA[xz 是啥，以前觉着7z就已经到顶级了，原来还有更厉害的xz压缩。 具体见知乎 谁才是压缩的王者？7z 还是 xz 。 了解到 xz 5.2 以上才支持多线程，而ubuntu 默认的xz不支持多线程，于是升级xz。 下面是记录升级方法： 到 https://launchpad.net/ubuntu/+source/xz-utils/5.2.2-1.3/+build/13082764 下载 liblzma5_5.2.2-1.3_amd64.deb (88.7 KiB)安装即可 使用xz -V 命令查看 xz版本。]]></content>
      <categories>
        <category>实用</category>
        <category>教程</category>
      </categories>
      <tags>
        <tag>ubuntu</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[建一个个人网站需要花费多少]]></title>
    <url>%2F2018%2F01%2F12%2F%E5%BB%BA%E4%B8%AA%E4%BA%BA%E7%BD%91%E5%9D%80%E9%9C%80%E8%A6%81%E8%8A%B1%E5%A4%9A%E5%B0%91%2F</url>
    <content type="text"><![CDATA[几年前，当我还是个电脑盲，在探索各种系统美化设置的过程中了解到了博客这种东西。 HTML语法常用的标签得会，虽然博客系统已经可以做到所见即所得，但还以有可能需要直接使用源码编辑。 解决完会编辑后，让别人看到。 WEB环境几乎是建站三件套 Apache + PHP + MySQL 。分别处理 HTML php 与 数据库。对于新手而言，只要多找几篇博文就能购轻松搭建好环境。 使用建站软件在Apache的安装目录有 htcp 文件夹为网址根目录（nginx 为 www 文件夹） ，放好解压了的建站软件，比如Joomla，WordPress，Drupal等软件，启动web服务，使用浏览器访问 localhost ，然后按说明点点点就可以了。几乎是个会用电脑的人都会吧。 云主机一般独立主机，一个月100元以内，对于建一个个人小网站实在是大材小用。推荐使用虚拟云主机，阿里云的，6元1年，200m空间，20m数据库，月10G浏览对于小站足够了。]]></content>
      <categories>
        <category>笔记</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[Linux mint 安装 Materials Studio 8.0 与使用 CASTEP]]></title>
    <url>%2F2018%2F01%2F11%2Finstall-materials-studio-on-ubuntu%2F</url>
    <content type="text"><![CDATA[linux mint 是基于ubuntu的，所以对ubuntu也应该是有效的。（推荐 desktop 使用 mint cinnamon 版） 安装简要步骤setp1. 安装 rpm2cpio step2. 使用 bash csh step3. sudo ./install /opt/ms80 step4. cd /opt/ms80/LicensePack/etc step5. sudo ./lp_config step6. sudo ./lp_echovars step7. sudo ./install /opt/ms80 y # OK! It work’s! # 最好安装到自己的家目录 更新 2018.01.12安装到自己的家目录（/home/user）重启后才有用，无需 sudo。 使用 bash 很重要，不能使用 ubuntu默认的 dash，否则软件无法安装，无法运行！ 12# 查看使用的默认 shell 是啥。ls -l /bin/sh ubuntu 采用的是 dash （theDebian Almquist Shell），而非 bash （GNU Bourne-Again Shell，大多数 linux 默认使用这个作为默认shell）。 修改默认的sh。 1sudo dpkg-reconfigure dash 然后选择【否】 完成修改。 参考1 ，bash与dash 区别 。 自己看 install.log , 并设置开机自动启动 gateway 。 12# 设置开机启动/home/rachpt/Accelrys/MaterialsStudio8.0/etc/Gateway/gwstart 浏览器 http://127.0.0.1:18888 查看是否成功。 使用方法1234567~/Accelrys/MaterialsStudio8.0/etc/CASTEP/bin/RunCASTEP.sh -np 8 "you ms_job path/name" # 不要 param 后缀的 param 文件名。# 例子nohup /home/rachpt/Accelrys/MaterialsStudio8.0/etc/CASTEP/bin/RunCASTEP.sh -np 7 PMA2PbI4 &amp;# nohup ... &amp; 由于后台运行，# 7 表示CPU 核心数，# 由于是在 PMA2PbI4 任务的文件夹中打开的终端，所以任务直接使用 相对路径。]]></content>
      <categories>
        <category>linux</category>
        <category>DFT</category>
      </categories>
      <tags>
        <tag>castep</tag>
        <tag>ms</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Linux 免安装程序配置]]></title>
    <url>%2F2017%2F12%2F31%2Fsetting-protable-program-on-linux%2F</url>
    <content type="text"><![CDATA[给黑程序上户口。适用于基于debian 的 ubuntu ，以及 linux mint（强烈推荐）。 Linux 创建程序图标Debian 这类linux的软件包是 deb 后缀，这是一种类似 windows 下的 exe 安装包文件，除此之外，还有一种一文件夹形式存在的软件包，其中的 xxx.sh 就是软件的可执行文件，类似与 windows 软件安装完成后其目录中的 exe 文件（软件快捷方式就是链接到这类文件的），这就如同 windows 平台的绿色免安装软件。 linux 用户软件一般放到 /opt/ 目录，下面以pycharm-edu 为例： 1234sudo mv -f pycharm-edu /opt/ # 使用命令移动文件# 然后到 /usr/share/applications/ 目录下创建 .desktop 文件sudo touch /usr/share/applications/pycharm.desktop #创建空文件，当然也可以不创建，下马一步保存时可以创建。sudo gedit /usr/share/applications/pycharm.desktop #在其中写如如下内容 12345678[Desktop Entry]Version=1.0Name=pycharm #显示的名字Exec=/opt/pycharm-edu/bin/pycharm.sh #软件路径Terminal=falseIcon=/opt/pycharm-edu/bin/pycharm.png #软件图标Type=ApplicationCategories=Development #软件分类 保存即可，如果需要加入环境变量（直接在terminal中输入软件名字，即可打开软件），需要进行如下操作。 加入环境变量##方法一 配置用户主目录下的.profile或.bashrc文件（推荐）， 登录到你的用户（非root），在终端输入：1sudo gedit ~/.profile #(or .bashrc) 在文件末尾加入PATH的设置如下：1export PATH=”$PATH:your path1:your path2 ...” 保存文件，注销再登录，变量生效。该方式添加的变量只对当前用户有效。​ 方法二在系统目录，进行类似操作。12/etc/profile/etc /environment 在登录时,操作系统定制用户环境时使用的第一个文件 ,此文件为系统的每个用户设置环境信息,当用户第一次登录时,该文件被执行。第二个文件, 系统在读取你自己的profile前,设置环境文件的环境变量。]]></content>
      <categories>
        <category>实用</category>
        <category>教程</category>
      </categories>
      <tags>
        <tag>ubuntu</tag>
        <tag>linux</tag>
        <tag>mint</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[ubuntu 学习笔记]]></title>
    <url>%2F2017%2F12%2F18%2Fnotes-for-ubuntu%2F</url>
    <content type="text"><![CDATA[记录一些学习ubuntu要点，力求实用。 常用系统命令 getconf LONG_BIT 查看系统位数。 uname -a 更详细的方法。 lsb_release -a 系统详细版本情况。 w 当前谁在登录。 last 查看登录记录。登录信息记录在二进制 /var/log/wtmp文件中。 ~/.bash_history 中记录所有输入的命令。 &amp; 后台运行。 ctrl + Z 暂停并放到后台。 ctrl + C 结束正在运行的任务。 jobs 查看后台有多少任务，kill %num 结束任务，num为任务号。 fg 后台任务调至前台并继续。 bg 继续后台任务。 kill -p xxx 强制 结束 xxx 进程 ps -t pts/3 查看pts/3的所有进程 ​ python 配置 python3 --version 查看安装python版本，如果是3的； sudo apt-get install python3-pip 安装 pip ; pip -V 检查pip； 机遇用户的 默认版本切换 123456789ls /usr/bin/python* #显示所有 pythonvim ~/.bashrc #编辑配置文件#添加如下行 ，alias，别名。路径以上面显示的为准。alias python='/usr/bin/python3.5'sudo pip install --upgrade pip # 升级pip show requests # 查看模块安装位置 解决：Command &quot;python setup.py egg_info&quot; failed with error code 1 in /tmp/pip-build* 1234sudo pip2 install setuptools# 或则sudo easy_install -U setuptoolssudo pip install setuptools python 计算环境 暂无 ​ apt-get 使用ipv4有时，您需要在APT包中禁用IPv6，只有在需要时，其他程序可以继续使用IPv6。 要在APT中禁用IPv6，请运行以下命令为APT创建一个配置文件。 1sudo nano /etc/apt/apt.conf.d/99force-ipv4 将以下行复制并粘贴到文件中。 1Acquire::ForceIPv4 "true"; 12345678910111213141516apt-cache search package 搜索软件包apt-cache show package 获取包的相关信息，如说明、大小、版本等sudo apt-get install package 安装包sudo apt-get install package --reinstall 重新安装包sudo apt-get -f install 修复安装sudo apt-get remove package 删除包sudo apt-get remove package --purge 删除包，包括配置文件等sudo apt-get update 更新源sudo apt-get upgrade 更新已安装的包sudo apt-get dist-upgrade 升级系统apt-cache depends package 了解使用该包依赖那些包apt-cache rdepends package 查看该包被哪些包依赖sudo apt-get build-dep package 安装相关的编译环境apt-get source package 下载该包的源代码sudo apt-get clean &amp;&amp; sudo apt-get autoclean 清理无用的包sudo apt-get check 检查是否有损坏的依赖 linux 常用编辑器​ vi 属于基本编辑器，除此之外，有些发行版还会预装nano，vim等编辑器。 vi命令​ ESC 切换到命令模式​ a A i I 这是个键在命令模式下却换到编辑模式​ 区别在于插入位置，常用 i 。​ 常用命令(同样适用于 vim )​ x 删除一个字符，​ dd 删除光标所在行，​ ZZ 保持并退出，​ ZQ 不保持退出。 ​ 底行命令使用 : 键进入，​ :wq 保持并退出，​ :w 只保存，不退出，​ :!q 退出不保存，​ :set nu 显示行号，​ :set 语法高亮 ​ u可以撤销一次操作。 ​ 行号 + G 跳转到相应行。 vimvim 是 vi 的增强版（vi improved）。 u 撤销上一步的操作Ctrl+r 恢复上一步被撤销的操作 ​ 注意vi 下编辑模式不能使用delete backspace 键，​ 而vim 可以使用上面两键。 ​ 替换 语法为 :[addr]s/源字符串/目的字符串/[option] :s/vivian/sky/ 替换当前行第一个 vivian 为 sky :s/vivian/sky/g 替换当前行所有 vivian 为 sky 全局替换命令为：:%s/源字符串/目的字符串/g [addr] 表示检索范围，省略时表示当前行。 如：“1，20” ：表示从第1行到20行； “%” ：表示整个文件，同“1,$”； “. ,$” ：从当前行到文件尾； s : 表示替换操作 [option] : 表示操作类型 如：g 表示全局替换; c 表示进行确认 p 表示替代结果逐行显示（Ctrl + L恢复屏幕）； 省略option时仅对每行第一个匹配串进行替换； 如果在源字符串和目的字符串中出现特殊字符，需要用”\”转义 下面是一些例子： #将That or this 换成 This or that:%s/(That) or (this)/\u\2 or \l\1/ 复制12:9,15 copy 16 :9,15 co 16 将第9行到第15行的文本内容 复制 到第16行的后面 。 移动12:9,15 move 16 :9,15 m 16 将第9行到第15行的文本内容 移动 到第16行的后面 。 批量注释与反注释 v 进入 virtual 模式， 上下选择，ctrl + v 进入列模式， 使用大写 I，行首插入模式，输入 “#”， 然后 按 两次 ESC ！ 反注释，类似，i 换成 d 即可。 nano命令​ 翻页 ​ Ctrl+Y到上一页​ Ctrl+V到下一页 帮助中的 ^ 表示ctrl 键（也可以连续按两次esc 键代替）， M 表示 alt 键。 ​ 显示行号 打开 /etc/nanorc 将 # set constantshow 前面的注释#号去掉即可。 ​ 保存 使用Ctrl+O来保存所做的修改 ​ 退出 按Ctrl + X or q 部分来自: http://man.linuxde.net/nano PDF阅读软件 zathura~/.config/zathura/zathurarc 用户配置文件与路径； /etc/zathurarc 全局配置文件与路径； 使用 gedit ~/.config/zathura/zathurarc 添加下面的配置命令，#号以及后面为注释。 1234567891011set adjust-open &quot;width&quot; #以宽度自适应打开set font &quot;Noto Sans CJK SC Regular 10&quot; #字体与字号set guioptions &quot;&quot; #GUI相关，留空可隐藏底部statusbarset window-title-basename true #只显示文件名，否则显示完整路径set incremental-search true #增强搜索，实时搜索set show-v-scrollbar true #显示右侧进度条set selection-clipboard clipboard #粘贴版set window-height 760 #默认高度，像素set window-width 1300 #默认宽度# 更多请参考：https://github.com/lervag/dotfiles/blob/master/config/zathura/zathurarc mint 18.3 的路径1234567/etc/gnome/defaults.list #保存全局打开方式路径/usr/share/applications #保存 ，这两个是一样的～/.config/mimeapps.list #用户# 添加application/pdf=xpdf.desktop 快捷键 f 高亮链接，按 相应数字 打开链接；q 退出；# ^ 是 ctrl 键^f Scroll page down^b Scroll page up^d Scroll half a page down^u Scroll half a page upr Rotate the pageR Reload the document^n Toggle statusbar visibility^m Toggle inputbar visibility^r inverted color /反色space 半页数字 + G 跳转页码gg 最前GG 最后 命令 :bmark xxx 创建书签xxx （长书签）:blist xxx 打开bookmark:bdelete xxx 删除书签:q 退出/word 搜索word，使用 n / N 跳到下一个(上一个)结果，/ ？ 搜索 向前（向后）:info 显示文档信息 短命令书签 使用 a letter or number ，先按 m 键，然后按短书签名，创建； 跳转先前的短书签，先按 &#39; 键，然后先前的字母或数字； ##关于复制问题 I discovered that zathura is using the x11 primary selection as default instead of the actual clipboard. This can be changed by creating a ~/.config/zathura/zathurarc file with the following content: 12&gt; set selection-clipboard clipboard&gt; https://github.com/zegervdv/homebrew-zathura/issues/5 http://80x86.io/post/pdf-viewer-for-linuxer mpv 播放就差笔记部分快捷键[ ] { } 播放速度相关， backspace 恢复播放速度， f 全屏， q 退出， Q 保存播放位置退出， 9 0 音量减小与增大， space 播放暂停， T 总在最前面切换， s 视频截图，包含字幕， S 视频截图，不带字幕， alt + s 自动逐帧视频截图，开关， alt + 1 100%视频大小， alt + 2 两倍视频大小， alt + 0 恢复默认大小， up 快进60s， down 快退60s， right 快进5秒， left 快退5秒， 用户自定义~/.config/mpv/input.conf 快捷键文件路径， https://github.com/mpv-player/mpv/blob/master/etc/input.conf 常用小技巧长按Alt 键拖动看不到head bar的窗口。 cd ~ 返回home目录，注意root用户的目录与普通用户目录的区别。sudo 只能暂时切提权，5分钟。使用 sudo -i 可以切换到root账户。pwd 显示当前目录。clear 清屏。cat name 浏览name文件。 man xxx 查看 xxx 程序的详细说明文档。 sudo apt-cache search apache | less 用于搜索与 apache 相关的 包名（package name）。less 显示文件内容. 修改软件源 sudo gedit /etc/apt/sources.list ，sudo apt-get update 更显后使用此更新。 sudo chmod -R 777 * #对当前目录的所有文件以及文件夹授权 777，-R。 任务管理器打开命令： gnome-system-monitor 。 sudo gsettings set.com.canonical.Uniyt always-show-menus true 让 Unity 全局菜单始终可见，其中true改为 false 恢复。 sudo gnome-session-properties 管理开机启动。 /usr/share/applications 查看所有应用。 sudo apt-get install -y ubuntu-desktop 修复桌面。 sudo 卸载应用 1234sudo apt-get remove --purge 软件名称 sudo apt-get autoremove --purge 软件名称 sudo apt-get autoremove -purge xxxxx #推荐sudo apt-get autoclean 16.04开始，用户可以实现改变启动器的位置，可以将启动器移到屏幕底部，但是无法移到右边或顶部。打开终端，然后输入下面这个命令，即可将启动器移到屏幕底部：gsettings set com.canonical.Unity.Launcher launcher-position Bottom如果你使用后，觉得不喜欢，还可以恢复到屏幕左边，只要运行：gsettings set com.canonical.Unity.Launcher launcher-position Left nohup COMMAND &amp; 后台永久执行 COMMAND 命令。 添加到 /etc/init.d/rc.local ，实现开机执行sudo命令。 使用 ftp，以及 tar 打包与解压连接1234567891011ssh 2001:da8:8019:235::30# enter username# enter password# 出现ftp&gt; ls #查看目录，or llcd path # 切换路径pwd # 显示当前路径rm path # 删除文件rm -r path #删除文件夹 客户端常用命令1234get test.md #下载远程文件到本地put test.txt #上传单个本地文件到远程服务mput file #上传多个文件 打包与解包1234567891011121314#.tar 参数带 z 表示压缩 gztar xvf FileName.tar #解包tar cvf FileName.tar DirName # 打包tar czvf my.tar file1 #单个文件压缩打包 tar czvf my.tar file1 file2 ... #多个文件压缩打包 tar czvf my.tar dir1 #单个目录压缩打包 tar czvf my.tar dir1 dir2 #多个目录压缩打包 tar xzvf my.tar #解包至当前目录tar -cvf get.tar PEA_I_* PMA_I_* --exclude *.check #排除特定后缀文件tar -cvf get.tar PEA_I_* PMA_I_* --exclude *.check --exclude *.usp #排除多种文件tar -tf get.gz #查看压缩包文件 PASH环境变量的设置方法一：用户主目录下的.profile或.bashrc文件（推荐） 登录到你的用户（非root），在终端输入： 1sudo gedit ~/.profile #(or .bashrc) 可以在此文件末尾加入PATH的设置如下： 1export PATH=”$PATH:your path1:your path2 ...” 保存文件，注销再登录，变量生效。该方式添加的变量只对当前用户有效。 方法二：在系统目录，进行类似操作。 123/etc/profile/etc /environment 在登录时,操作系统定制用户环境时使用的第一个文件 ,此文件为系统的每个用户设置环境信息,当用户第一次登录时,该文件被执行。第二个文件, 系统在读取你自己的profile前,设置环境文件的环境变量。 设置系统变量 PATH 方法： /etc/environmet 中PATH 后面引号中添加，使用: 分隔不同的路径。 关于环境变量 1231. $HOME是一个环境变量，它代表当前登录的用户的主文件夹（就是家目录的那个）2. $HOME/bin当然就是主文件夹下的bin子目录（注意不是根目录的那个）3. PATH=$PATH:$HOME/bin这句是设置PATH环境变量（设置环境变量用等号），首先:冒号是分割符（记得Windows上面也有PATH环境变量，Windows的路径之间的分隔符是;分号），$PATH:$HOME/bin表示在保留原来的$PATH环境变量的基础上，再增加$HOME/bin这个路径作为新的$PATH环境变量。 GIMP 相关使用中文界面， 全称 (The GNU Image Manipulation Program) 用 LANGUAGE=zh_CN gimp 启动，或者LANG=zh_CN gimp ，然后在选择中文（不行就是阿里的源，sudo apt-get gimp重装一下）。 gimp裁剪图片，使用快捷键 shift + c。单窗口模式，在顶部 窗口 菜单下 启用单窗口模式。 GIMP 使用教程 拖到最左边的工具列上，打开一张新的图片； ctrl + shift a 矩形选择 和 椭圆选择，使用ctrl减选，shift加选； 自由选择 工具将ps的 套索工具 和 多边形套索 工具结合，左键直接画是套索，而单击是多边形套索； 模糊选择 工具和 按颜色选择 工具则是把ps 魔棒 工具给分拆； ctrl + 鼠标滚轮 实现连续，Z + 鼠标选区 实现区域缩放。 安装Arc GTK主题 还是不要装的好 先添加 Arc GTK theme 源 1sudo sh -c "echo 'deb http://download.opensuse.org/repositories/home:/Horst3180/xUbuntu_16.04/ /' &gt;&gt; /etc/apt/sources.list.d/arc-theme.list" 安装软件源的密钥，否者无法正常使用 12wget http://download.opensuse.org/repositories/home:Horst3180/xUbuntu_16.04/Release.keysudo apt-key add - &lt; Release.key 安装 Arc GTK 主题 12sudo apt updatesudo apt install arc-theme 安装 Unity Tweak Tool 1sudo apt install unity-tweak-tool ssh 使用在终端远程连接其他ubuntu系统 两台设备先安装ssh server和 clicent 12sudo apt-get install openssh-client sudo apt-get install openssh-server 启动于停止service 12345sudo /etc/init.d/ssh start #或者 sudo service ssh start sudo /etc/init.d/ssh stop sudo /etc/init.d/ssh restart client 使用下面的命令连接 sever 12345678ssh 用户名@ip ssh -l 用户名 ip# 文件交换#1.上传[如果目录 使用 scp -r ]scp '/home/rachpt/desktop/1.png' rc@10.42.0.1:/var/www/new/images/news#2.下载scp -r rc@10.42.0.1:/var/www/remote_dir/（远程目录） /var/www/local_dir（本地目录） 允许 root 远程登录，修改server配置文件 12345678sudo gedit /etc/ssh/sshd_config修改#PermitRootLogin without-passwordPermitRootLogin yes然后重启sudo systemctl restart ssh.service 查看ssh 状态 123ps -e |grep ssh #看到sshd则说明ssh-server已经安装启动 Git 配置 ssh配置多用户 git 本地密钥。 生成新的ssh keys： 123456ssh-keygen -t rsa -C "your_email@example.com"#使用自定义名称/home/rachpt/.ssh/id_rsa_coding# or/home/rachpt/.ssh/id_rsa_github 复制，id_rsa_coding.pub or id_rsa_github.pub 至相应网站 SSH 公钥 页面，完成添加。 如果测试报错： 1sign_and_send_pubkey: signing failed: agent refused operation 解决办法： 123456789eval "$(ssh-agent -s)"ssh-add /home/rachpt/.ssh/id_rsa_coding# orssh-add /home/rachpt/.ssh/id_rsa_github#测试，需要输入，则 yes ssh -T git@git.coding.net# orssh -T git@github.com# 显示相应用户名，则表示成功。 配置 FTP severlinux ftp服务器软件有 vsftpd ，pure-ftpd ，proftp 。 1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556575859606162#安装sudo apt-get install vsftpd#控制命令sudo /etc/init.d/vsftpd startsudo /etc/init.d/vsftpd stopsudo /etc/init.d/vsftpd restart#或者类似sudo service vsftpd restart#多了ftp用户组和ftp用户sudo cat /etc/groupsudo cat /etc/passwd#ftp服务器的目录位置在 /srv/ftp，这也是匿名用户访问时的根目录。 #使用下列命令来间接更改目录cd /srvsudo rm -d ftp# 挂载家目录cd ~/sudo mkdir ftp# ln -s 为文件创件符号连接，非硬连接.cd ~#配置sudo gedit /etc/vsftpd.conf#允许匿名用户登录anonymous_enable=YES#允许本地用户登录local_enable=YES#开启全局上传write_enable=YES#允许匿名用户上传文件anon_upload_enable=YES #充许匿名用户新建文件夹anon_mkdir_write_enable=YES#加点banner提示ftpd_banner=Hello~~ #FTP服务器最大承载用户max_clients=100#限制每个IP的进程max_per_ip=5#最大传输速率(b/s)local_max_rate=256000#隐藏帐号hide_ids=YES #启动chroot列表(Change root)chroot_list_enable=YES#指定列表位置(我这用的是默认地址)chroot_list_file=/etc/vsftpd.chroot_listssup #这句默认设置里是没有的，自己加user_config_dir=/etc/自己定义一个设置个别用户用的文件夹地址 关于 vsftpd：500 OOPS: vsftpd: refusing to run with writable root inside chroot ()误的解决方法。比如配置匿名服务器，默认root 目录是 /srv/ftp ，1sudo chmod a-w /srv/ftp/ 即可解决。此帖也有反映。 文件共享samba 文件共享服务123456789sudo apt install samba #安装samba服务#更改配置文件sudo vi /etc/samba/smb.conf #其中 ` ; ` 注释行，#########sudo mount -t cifs -o username=***,password=**** //10.42.0.1/disk /media/rachpt/server/ #手动挂载至本地的路径。 使用 mount 挂载 samba 一直提示无权限，使用下面的命令，设置本地账户的smb密码 sudo smbpasswd -a 现有用户。 自动挂载linux 设置开机自动挂载硬盘，网路空间 首先使用： 12sudo blkid #查看硬盘的格式，以及设备名。# TYPE="ext4" 等。 编辑 /etc/fastab 文件，配置开机挂载。 12345678sudo vim /etc/fastab #编辑# 在后面添加新的行# disk sdb1 #号开头为注释，ext4 即是文件系统（格式）/dev/sdb1 /media/rachpt/disk ext4 defaults 0 0 #/media/rachpt/disk 为挂载点，/media/rachpt/server 也是，自己 mkdir# smb//10.42.0.1/disk /media/rachpt/server cifs defaults,username=**,password=*** 0 0# *为用户名与密码，分隔的空格可以使用多个 123smbclient -L 10.42.0.1 -N #此命令用于查看共享目录sudo mount -a #编辑好/etc/fastab，用此命令测试。 使用 blkid查看硬盘 UUID 和标签。 12sudo blkid /dev/sdb1$/dev/sdb1: LABEL="disk" UUID="9a0d1374-540f-4a32-92d1-2e1beaee1709" TYPE="ext4" PARTUUID="c0134fff-477f-4b71-be37-88119c640180" 12# disk sdb1 ,使用 uuidUUID=9a0d1374-540f-4a32-92d1-2e1beaee1709 /media/rachpt/disk ext4 default 0 0 也可以 添加 /etc/rc.lacal ,如下。（使用的是 nfs ，而非 samba） 1234567891011# By default this script does nothing.password="myRootPassword"echo $password |sudo mount -o v3 -t nfs 10.42.0.1:/home/rc /media/rachpt/rcecho $password |sudo mount -o v3 -t nfs 10.42.0.1:/srv/ftp/data /media/rachpt/ftp/dataecho $password |sudo mount -o v3 -t nfs 10.42.0.1:/srv/ftp/pub /media/rachpt/ftp/pubecho $password |sudo mount -o v3 -t nfs 10.42.0.1:/srv/ftp/mp4 /media/rachpt/ftp/mp4unset password exit 0 字体在终端输入以下命令进行字体安装： 1234567wget -O get-fonts.sh.zip http://files.cnblogs.com/DengYangjun/get-fonts.sh.zipunzip -o get-fonts.sh.zip 1&gt;/dev/nullchmod a+x get-fonts.sh./get-fonts.sh 如果要删除已下载的字体安装脚本，执行以下命令： 1rm get-fonts.sh get-fonts.sh.zip 2&gt;/dev/null 如果要恢复系统默认的字体，执行以下命令： 1234567cd /etc/fonts/conf.availsudo mv 51-local.conf.old 51-local.conf 2&gt;/dev/nullsudo mv 69-language-selector-zh-cn.conf.old 69-language-selector-zh-cn.conf 2&gt;/dev/nullsudo rm -f -r /usr/share/fonts/truetype/myfonts 2&gt;/dev/null 记录以备用。https://www.cnblogs.com/jaxu/p/5565326.html 中文语言下修改 home 文件夹 英文路径1nano ～/.config/user-dirs.dirs # 修改配置文件，也可以使用gedit等编辑器代替nano 12345678XDG_DESKTOP_DIR=&quot;$HOME/desktop&quot;XDG_DOWNLOAD_DIR=&quot;$HOME/download&quot;XDG_TEMPLATES_DIR=&quot;$HOME/template&quot;XDG_PUBLICSHARE_DIR=&quot;$HOME/public&quot;XDG_DOCUMENTS_DIR=&quot;$HOME/document&quot;XDG_MUSIC_DIR=&quot;$HOME/music&quot;XDG_PICTURES_DIR=&quot;$HOME/picture&quot;XDG_VIDEOS_DIR=&quot;$HOME/video&quot; 或者使用 暂时改为英文环境，再改回中文： 1234567export LANG=en_US #step 1xdg-user-dirs-gtk-update #step 2# 跳出对话框询问是否将目录转化为英文路径,同意并关闭.export LANG=zh_CN #step 3#重起系统.系统会提示是否把转化好的目录改回中文.选择不再提示。 ubuntu 常用软件 htop 友好查看系统负载与进程， top 的加强版，一般 terminal 使用 q 键退出。 nload 监视网速，常用命令 nload -u M # 以MByte 为单位，也可以用 K 等，回车切换其他网卡。 System monitor Indicator 可以在状态栏以数字形式显示网速负载等信息。 nginx 配置locate nginx 列出所有相关文件位置； /etc/nginx/nginx.conf 服务器配置文件路径； /etc/nginx/sites-available/default 重定向配置文件路径； /etc/nginx/sites-enabled/default 这个应该是测试通过后的copy； nginx -t 用于测试配置文件是否正确； 12345678910111213141516171819202122232425262728server &#123; listen 80; server_name localhost; root /var/www; index index.php index.html; location / &#123; try_files $uri $uri/ =404; &#125;# 重定向 if ( $request_uri = &quot;/&quot; ) &#123; rewrite &quot;/&quot; http://rachpt.iok.la/new/ break; &#125; # 404 等页面重定向 error_page 404 http://rachpt.iok.la/new/hide/r404.php; error_page 403 http://rachpt.iok.la/new/hide/r403.php; error_page 501 502 503 504 /50x.html; location = /50x.html &#123; root /var/www; &#125;# php连接部分 location ~ \.php$ &#123; try_files $uri =404; fastcgi_pass unix:/var/run/php/php7.0-fpm.sock; fastcgi_index index.php; fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name; include fastcgi_params; &#125;&#125; 更改/etc/nginx/nginx.conf在http定义区域加入： fastcgi_intercept_errors on; ，注意末尾分号。 ImageMagic 使用笔记一些快捷键space 显示下一张图片 backspace 显示上一张图片 h 水平翻转 v 垂直翻转 / 顺时针旋转90度 \ 逆时针旋转90度 > 放大 &lt; 缩小 F7 模糊图片 Alt+s 把图片中间的像素旋转 Ctrl+s 图象另存 Ctrl+d 删除图片 q 退出 display12345display foo.png #显示图片display *.png #如果你要显示多个文件，你可以使用通配符display -delay 5 * #幻灯片 import 截屏1234import foo.png #截取矩形区域，保存为 foo.png，import -pause 3 -frame foo.png #截取程序的窗口。-frame外框，-pause获得焦点才开始截图，import -rotate 30 -pause 3 -frame foo.png #倾斜窗口 30d度，import -pause 3 -window root screen.png #截取整个屏幕，暂停3秒。 Fit2D linux版下载地址http://ftp.esrf.eu/pub/expg/FIT2D/ 绑定两个地址： 12sudo mount --bind /mnt/smb/ /srv/ftp/test/ #将smb 链接到testsudo umount /srv/ftp/test/ #取消test的链接 花生壳安装32位：dpkg -i phddns_i386.deb64位：dpkg -i phddns_3.0_x86_64.deb 卸载：dpkg -r phddns phddns start（启动）| stop（停止）| status（状态）| restart（重启）|phddns reset（重置）phddns version（版本） Texmaker 在弹出的文件管理器下进入usr/share/applications/texmaker路径. 选中Texmaker的标签,右击鼠标,点中属性. 然后将Command一栏中的texmaker %F替换为 env UBUNTU_MENUPROXY= texmaker %F 可解决Texmaker快捷键失效问题。 mv 命令1234567mv file_2.txt file_3.txt file_4.txt /home/rc/document #移动多个文件到docmv -i file_1.txt /home/rc/document #交互式移动，提醒mv -v *.txt /home/rc/document #打印移动信息mv -vn *.txt /home/rc/document #n 移动不重复的mv -vu *.txt /home/rc/document #u 移动,时间戳更新的覆盖原来的mv -vb *.txt /home/rc/document #b 移动,以～备份原来的mv -f *.txt /home/rc/document #无条件覆盖 递归（Recursive）子目录，使用 参数”-r“或者”-R“。 1cp -n file1/ file2/ # 跳过相同的文件 1du -hc # 统计大小 终端中的链接符用法 &amp; 的作用是使命令在后台运行。 只要在命令后面跟上一个空格和 ‘&amp;’。你可以一口气在后台运行多个命令。 12ping c5 www.tecmint.com &amp;sudo apt-get update &amp; mkdit test &amp; ; 一口气运行几个命令。 命令顺序执行。 1apt-get update ; apt-get upgrade ; mkdir test &amp;&amp; 与操作符。 如果第一个命令执行成功，才会执行第二个命令。 || 或操作符 。 如果第一个命令执行失败，才会执行第二个命令。 ！ 非操作符。 执行除了提供的条件外的所有的语句。 1rm -r !(*.html) #删除除了 ‘html’之外的所有文件 &amp;&amp; – || 与或操作符。 ‘与’ 和‘ 或’ 操作符的组合，它很像 ‘if-else‘ 语句。 12ping -c3 www.tecmint.com &amp;&amp; echo "Verified" || echo "Host Down"# ping tecmint.com，如果成功打印‘已验证’，否则打印‘主机故障’。 | 管道操作符。 将第一个命令的输出作为第二个命令的输入. 1ls -l | less {} 命令合并操作符。 合并两个或多个命令，第二个命令依赖于第一个命令的执行。 12345[ -f /home/tecmint/Downloads/xyz.txt ] || touch /home/tecmint/Downloads/xyz.txt; echo "The file does not exist"[ -f /home/tecmint/Downloads/xyz1.txt ] || &#123; touch /home/tecmint/Downloads/xyz.txt; echo "The file does not exist" &#125; #检查一下文件‘xyz.txt’是否在Downloads目录下，如果不存在则创建之并输出提示信息。 () 优先操作符。 1(Command_x1 &amp;&amp; Command_x2) || (Command_x3 &amp;&amp; Command_x4) \ 连接符。 太长而分成多行命令。 ​ ls 命令-h 参数意味着便于人识别，单位 1024. -si 与h类似，单位 1000。 -S 以文件大小排序。 –block-size=K M G T P … 指定单位。两个-，无空格。 -a 显示隐藏文件，linux种使用“.”开头东阿是隐藏文件。 -d 只列出目录。例，ls -d */。 -g 不打印所有者。 -G 不打印组信息。 -n 打印UID和DID。 –color=never 不使用颜色。 -p 增加 / 标记文件夹。 -r 反序。 -R 递归列出子目录文件。 -X 以扩展名排序，同 –sort=extension 。 -t 以修改时间排序，新的在前面。 定时任务123456789crontab -e #编辑任务crontab -l #查看任务sudo /etc/init.d/cron start #启动服务sudo service cron restart # 也行，还有 stop start等。pgrep cron #查看是否在运行 # m h dom mon dow command m 分钟 0-59 h 小时 0-23 dom 天1-31 Day Of month mon 月 1-12 dow 星期 1-6 0 表示星期天 Day Of Week command 就是要执行的命令 在命令后加入 &gt;&gt; /home/rachpt/task.log 记录时间。 例子： 12*/1 * * * * python /home/rachpt/test.py &gt;&gt;/home/rachpt/test.log 2&gt;&amp;1# 每隔一分钟执行一次，表示重复的 用 */ + 时间。 12*/3 6-8 * * * python /home/rachpt/test.py &gt;&gt;/home/rachpt/test.log 2&gt;&amp;1# 上午6至8点，每隔 三分钟执行一次。 123* 5 * * * /bin/sh /home/rachpt/test.sh &gt;&gt;/home/rachpt/test.log 2&gt;&amp;1# 每天上午5点重复执行。 注意 * 号的数量。 * 代表所有的取值范围内的数字； / 代表”每”（“*/5”，表示每5个单位）； – 代表从某个数字到某个数字（“1-4”，表示1-4个单位）； , 分开几个离散的数字。 ubuntu 开启日志记录设置: 123sudo vim /etc/rsyslog.d/50-default.conf# 去掉 cron 前面的 '#' 号]]></content>
      <categories>
        <category>linux</category>
        <category>学习</category>
      </categories>
      <tags>
        <tag>ubuntu</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Olex2 软件使用笔记]]></title>
    <url>%2F2017%2F12%2F14%2Fnotes-for-olex2%2F</url>
    <content type="text"><![CDATA[记录 使用软件 Olex2 解晶体的心得与备注。 打开文件 File –&gt; Open , 找到 ~.ins 文件，打开。 解结构 Work 中直接单击 Solve 即可自动解； 单击Work 右侧展开详情，选择Solution Program –&gt; ShelXS or ShelXT ,区别； 手动精修，单击Refine ,并展开详情； 左边窗口，鼠标右键 前后移动可以放大与缩小所有原子，左键单击不放左右可以旋转所有原子； 右键原子，第一项显示原子的相对质量，单击选中，重复取消选中，多选直接单击需要的原子即可，直接滚动鼠标滚轮，实现轻原子隐藏； 由重原子开始，选中其后，右侧Tool Work 标记名称，其中...可以 打开元素周期表； 每次标定等操作后点击Refine 精修一下，直到最上面的八个参量的值全变成绿色即可（d I R 等），R1小于10%为好； 最后如果有些多余的衍射点，需要使用最上面第一个Edit(图标铅笔)，在其中加上OMIT -2 75 (此为[测试中心]给的参考值)，其它需要自己试，勾上Refine 里面的Auto-update .. ,然后再多次精修即可 保存数据暂无 Olex2下载与插件Olex2 下载地址： http://www.olex2.org/olex2-distro/1.2/ http://jupiter.plymouth.edu/~jsduncan/software/olex2.php Shelx 插件下载网址： http://shelx.uni-ac.gwdg.de/~gsheldr/bin/ 其中1234#用户名：shelx #密码：I43212 感谢木蚂蚁网友账号分享，密码中第一个是字母 i 。 linux 安装方法，将可执行文件移动到olex2中，给可执行权限。]]></content>
      <categories>
        <category>教程</category>
      </categories>
      <tags>
        <tag>笔记</tag>
        <tag>olex2</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Ubuntu 中的 Firefox]]></title>
    <url>%2F2017%2F12%2F09%2Ffirefox-in-ubuntu%2F</url>
    <content type="text"><![CDATA[记录几个 firefox 相关的笔记。 进入Firefox的方法有： SUPER + A，然后按firefox，回车。这个是在Dash面板中搜索应用程序运行。事实上，只要按fir就能定位到Firefox程序。 ALT，然后按firefox，回车。这个相当于在命令行运行一条命令。 在终端中按firefox&amp;，回车。这个适用于以终端作为主要操作窗口的用户，使用TAB键还可以自动补全命令（只需输入前几个字母再按TAB键）。&amp;在shell中是后台运行的意思，这样终端就不会被Firefox独占。 部分常用快捷键CTRL + T: 新建标签页 CTRL + W: 关闭标签页 CTRL + SHIFT + T: 重新打开最近关闭的一个标签页 CTRL + TAB: 切换到下一个标签页 CTRL + SHIFT + TAB: 切换到上一个标签页 ALT + [1-8]: 跳到制定标签页 ALT + 9: 跳到最后一个标签页 CTRL + L: 跳到地址栏 ESC: 停止加载当前页面 CTRL + K: 跳到搜索引擎输入框 CTRL + F: 在当前页面中搜索 /: 快速查找。在Linux中很多程序（如VI、Man、Less）都使用/作为搜索的快捷键，并且可使用正则表达式查找。但在Firefox中没有正则表达式搜索的功能。 CTRL + D: 收藏到书签 ALT + 左方向键: 后退 ALT + v: 前进 CTRL + Q: 退出 F3 ：查找下一处（向下） SHIFT + F3 ：查找上一处（向上） ctrl-shift-Del ：清除上网记录 Alt+上方向键 或 Alt+下方向键 ：选择或管理搜索引擎 Alt+左方向键 或 Backspace ：后退 Shift+Backspace 或 Alt+右方向键 ：前进 Ctrl + Shift + H ：小窗口打开历史记录 关闭恢复页面每次强行 kill 进程后，再次打开 firefox ，会提示恢复之前页面。对于浏览器偶然崩溃找回之前页面来说不错，但是一般不会，因为需要使用脚本控制 firefox ，所以 kill 后，不需要恢复，于是这样设置。 地址栏 about:config，回车。 查找browser.sessionstore 。 browser.sessionstore.max_tabs_undo 改为0（非法关闭后保存的Tab页数 0）。 browser.sessionstore.max_windows_undo 改为0（保存的窗口数 0）。 browser.sessionstore.resume_from_crash 改为false（禁用恢复会话功能）。 重启 firefox生效。 关闭标签后无法使用 ctrl + shift + T 恢复。]]></content>
      <categories>
        <category>linux</category>
      </categories>
      <tags>
        <tag>firefox</tag>
        <tag>ubuntu</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[COMSOL 简要笔记]]></title>
    <url>%2F2017%2F12%2F04%2FCOMSOL-notes%2F</url>
    <content type="text"><![CDATA[未完待续…… COMSOL 简单模拟声子晶体步骤 定义 参数设置 几何 几何模型 材料 计算的材料选择 物理场 其中 边界条件选择尤为重要 网格 网格 计算 后续计算 结束 一切完成，导出数据]]></content>
      <categories>
        <category>笔记</category>
      </categories>
      <tags>
        <tag>comsol</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Linux 文件 hash]]></title>
    <url>%2F2017%2F12%2F03%2Fcalc-hash-in-linux%2F</url>
    <content type="text"><![CDATA[记录如何计算文件哈希的方法。 如何计算文件哈希md5sum filename 即可,更多: 命令格式 md5sum [OPTION]… [FILE]… 命令选项 -b 或 –binary :把输入文件作为二进制文件看待。 -t 或 –text :把输入的文件作为文本文件看待（默认）。 -c 或 –check :用来从文件中读取md5信息检查文件的一致性。(不细说了参见info) –status :这个选项和check一起使用,在check的时候，不输出，而是根据返回值表示检查结果。 -w 或 –warn :在check的时候，检查输入的md5信息又没有非法的行，如果有则输出相应信息。 例子 生产一个文件的md5值，md5sum filename &gt; filename.md5]]></content>
      <categories>
        <category>linux</category>
      </categories>
      <tags>
        <tag>hash</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[越想越气——福利]]></title>
    <url>%2F2017%2F12%2F02%2Fwelfare-for-pt%2F</url>
    <content type="text"><![CDATA[好心发个种子被傻X的Dupe规则删掉了，说的就是 HDChina （等）. 这里分享一个 PT 吸血方法。 如果你不知道我在说啥，请不要继续往后看了。 教程开始首先正常下载种子。 utorrent 开始下载，然后，按下图打开 详情信息。 待到连上足够多的用户后，有较快下载速度，进行后续，如果是冷们资源，可能此法无效。 如下，找到伺服，右键，移除 tracker 。此处使用此方法不会影响下载速度（下载完成之前 不要 暂停、停止、断网等中断行为），这样 PT Tracker 就没法记录你这个种子的下载和上传流量了。如果你吝啬一点可以限制上传速度。 待到下载完成后，右键删掉任务。别手贱删数据。 至此，教程结束。 你会发现pt站只是记录你未完成该种，我突然不想下来，怎么找，你来ban我啊，我又没使用作弊软件刷上传数据。 理论上越是热门的东西，速度越是无区别。 如果你不想有个未完成任务，你可以再上面的步骤完成后 假装辅种一下。如果你不会，就算了。也没人会查你，就算查又能怎样。 这是 tracker 的普遍漏洞。 现在你再也不用担心下载东西而使分享率下降，因为你的下载量不会再增加了。]]></content>
      <categories>
        <category>教程</category>
      </categories>
      <tags>
        <tag>pt</tag>
        <tag>ut</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[解决WAMP搭建PHP环境后后局域网其他机器无法访问的问题]]></title>
    <url>%2F2017%2F12%2F02%2Fsolve-some-problem-about-wamp%2F</url>
    <content type="text"><![CDATA[解决WAMP搭建PHP环境后后局域网其他机器无法访问的问题。 刚安装wamp以后本地访问localhost或者127.0.0.1可以访问，但是如果局域网内其他电脑访问则出现403错误。从网上找了很多，各种说法都有了，却没几个好用的。 解决问题方法如下： 首先确定关闭了防火墙并且80端口没有被占用. 修改apache的httpd.conf文件，一共两处. 第一处12345Options FollowSymLinksAllowOverride NoneOrder deny,allowDeny from allSatisfy all 修改为： 123456789Options FollowSymLinksAllowOverride NoneOrder deny,allow# Deny from allAllow from all#允许所有访问Satisfy all 第二处onlineoffline tag - don’t remove Order Deny,AllowDeny from allAllow from 127.0.0.1 修改成：12345onlineoffline tag - don&apos;t removeOrder Deny,AllowDeny from allAllow from 127.0.0.1Allow from all 另外，如果使用DVWA的时候以上设置不起作用，因为htaccess限制了访问。解压DVWA以后放到主目录，将htaccess内规则修改如下：123order deny,allowdeny from noneallow from all 修改后重启apache，局域网内其他机器即可访问本机搭建的DVWA平台。]]></content>
      <categories>
        <category>教程</category>
      </categories>
      <tags>
        <tag>php</tag>
        <tag>wamp</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Python 学习笔记]]></title>
    <url>%2F2017%2F12%2F01%2Fnotes-for-learning-python%2F</url>
    <content type="text"><![CDATA[记录一些学习 python 的笔记。 1python -m pip install selenium 重要步骤 需要将firefox 与驱动程序（）加进环境变量。 字符串字符串中有 \ 的需要转意 \\ 。 原始字符串： r’string’ 。 字符串末尾不能以 \ 结尾，其表示未完继续。 长字符串： “““ strings ””” 。 列表123squarers = list(map(lambda x: x**2, range(10)))# 等价于squarers = [x**2 for x in range(10)] 这样写不会产生 副作用。 123&gt;&gt;&gt; [(x ,y) for x in [1, 2, 3] for y in [2, 3, 4] if x != y]# 输出[(1, 2), (1, 3), (1, 4), (3, 2), (3, 4), (2, 3), (2, 4)]]]></content>
      <categories>
        <category>python</category>
      </categories>
      <tags>
        <tag>python</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[使用FlexGet订阅下载Torrent]]></title>
    <url>%2F2017%2F11%2F30%2Fflexget-for-ut%2F</url>
    <content type="text"><![CDATA[此文目的在于简单的使用FlexGet代替UT自带的订功能，实现特殊需求。 FlexGet 基于 Python 的一套订阅方案，看到 PY 就能想到其牛逼。 环境配置FlexGet所要求的Python环境为2.7或者3.5，（不支持3.6及其以上，具体自己官网瞧）官网：https://flexget.com/ 。 Python环境安装，推荐3.5版64位的，安装时记得添加进环境变量。https://www.python.org/ftp/python/3.5.4/python-3.5.4-amd64.exe 。 按照官网方法 https://flexget.com/InstallWizard/Windows 安装。其中注意，如果你之前已经同时安装了py2和py3，那你可能得百度一下自己修改一下命令，python2 python3 。 1python -m pip install -U pip setuptools 12pip install flexget//有可能需要使用pip3,具体看自己环境 1flexget -V 至此基于 Python 的 FlexGet 环境已经搭建好了。下面我们配置 FlexGet 的控制文件。 配置FlexGet任务计划程序（我已经默认大家使用的windows）添加任务，如下面两图。 使用1分钟即可，不要配置几个任务，因为运行一次大概需要20-40秒，其中操作使用vbs文件，文件如下写:1234Set ws = CreateObject(&quot;Wscript.Shell&quot;) ws.run &quot;C:\Python35\Scripts\flexget.exe execute&quot;,vbhide#注意上面的路径，execute 参数很重要。 推荐直接在你的用户目录下新建flexget文件夹，然后将配置文件config.yml (自己建一个txt文件改后缀名即可)丢里面。 config.yml 按照下面的代码填写即可快速设置： tasks: TTG-WiKi: rss: https://totheglory.im/**** if: - &quot;&apos;1080p&apos; in title&quot;: reject - &quot;&apos;WiKi&apos; in title&quot;: accept download: C:\FlexgetDownloads\ content_size: min: 400 max: 60000 strict: no free_space: path: C:\ space: 900 说面一下，注意使用空格（不能使用制表符）严格对其，学过python就知道原因，rss就是你在PT站上面得到的个人RSS链接，download: 后面是你的utorrent自动载入种子的目录，content_size: 正如其义，可用于控制种子体积。其它可以参考 https://flexget.com/Plugins 。这里感谢[珞樱-WHUPT]的AutoSeed配置文件详解。 UTorrent设置设置 UT 自动从文件夹载 torrent 文件，如下图： 测试使用 flexget --test 测试，flexget execute直接运行也可以。 一般来说，种子发布后，2-3分钟内可以实现自动下载，而使用utorrent自带的rss刷新时间最少为5分钟，而且无法自定义体积等其它高级筛选。更多可以参考 https://pt.whu.edu.cn/forums.php?action=viewtopic&amp;topicid=2017&amp;page=p20477 。]]></content>
      <categories>
        <category>教程</category>
      </categories>
      <tags>
        <tag>pt</tag>
        <tag>flexget</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[京东预售商品加入购物车]]></title>
    <url>%2F2017%2F11%2F28%2Fadd-items-to-jdcart%2F</url>
    <content type="text"><![CDATA[京东抢购商品 在开始前提前加入购物车，这能够很大概率增大成功几率。使用下面的网址提交即可实现。 **https://cart.jd.com/gate.action?pid=商品编号&amp;amp;pcount=1&amp;amp;ptype=1** 其中的 商品编号 可以在商品详情页面网址中找到，就是那串数字。 抢购的时候。只需看着电脑上的毫秒显示，手机点击 [code]去结算[/code]， 使用默认收货信息，快速点击 立即下单 。除非是特别稀少，应该是能抢到的。 ​ &nbsp;]]></content>
      <categories>
        <category>教程</category>
      </categories>
      <tags>
        <tag>京东</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[我的研究生阶段该如何度过？]]></title>
    <url>%2F2017%2F11%2F20%2Fmy-graduate-stage%2F</url>
    <content type="text"><![CDATA[在大学即将毕业的时候，我就开始思考我该如何度过这3年或者5年的研究生阶段。 浑浑噩噩，已经半载。 现在开始有丝丝想法，稍纵即逝，我写下来好了。 &nbsp; 努力让自己真正忙起来，有目标、有意义、有规划地忙，而非无头苍蝇。 &nbsp; 对于软件方面：具体而言，在保证正常或者看似正常的必修课程学习的前提下，在最近的一到两个月入门[code]python[/code]语言，并会简单的计算。 强化MS与COMSOL的学习，matlab复习基础操作，直至写函数模块。 如果有时间，需再学习PS的复杂抠图等不常用功能。 对双拼输入法进行纠错性再学习，有意识的进行打字训练。 &nbsp; 对于专业方面：系统学习与整理今后将要用到的各种专业术语，制成文件。 专业单词整理，一定要打印出来。（包括量子力学，量子统计等方面的） 量子力学目前状况不是不懂，而是根本没看，因此以工作中心来看待，毕竟量子力学位高权重。 对于固体物理，需要再学习，着重理解相关概念，不仅多门课有涉及，以后对研究内容也是基础。 如果有时间，复习简单光学知识，毕竟光学专业。 &nbsp; 例外：六级，单词为先，首先得过，才能毕业。 &nbsp; 。 。 2018.01.01 目前折腾的有： python 感觉进展缓慢，目前 linux 下的环境编辑器都已经弄好了，可以开始了； web 建站与配置，重appache 到 nginx ； html 与 php ，主要是课题组网站方面的； linux 系统，ubuntu 与 mint，试了好几款 linux ，对 mint 相见恨晚； Transmission 与 flexget 自动下载配置，试了些其他的bt客户端，我还是老老实实使用 transmission 吧； ftp 配置，linux下的 ftp 真心难配置； GIMP ，考虑再学一门 “PS”； LaTeX 写东西，简历与beamer。 &nbsp; 这大半个月里，经常是很晚才睡，好多其他事都没做， 该停一停，缓一缓了， 现在全力应对 期末考试。 &nbsp; TO BE CONTINUING &nbsp;]]></content>
      <categories>
        <category>随笔</category>
      </categories>
      <tags>
        <tag>忙</tag>
        <tag>规划</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[《利用Python进行数据分析》]]></title>
    <url>%2F2017%2F11%2F17%2Fpython-for-data-analysis%2F</url>
    <content type="text"><![CDATA[一本书。 [第2版][2017年9月25日] title: Python for Data Analysis: Data Wrangling with Pandas NumPy and IPython 2nd Edition Author: Wes McKinney Length: 550 pages Edition: 2 Language: English Publisher: O’Reilly Media Publication Date: 2017-09-25 ISBN-10: 1491957662 ISBN-13: 9781491957660最新版利用Python进行数据分析，基于Python3.6，数据分析必备教材！ 点击跳转到下载页]]></content>
      <categories>
        <category>资源</category>
      </categories>
      <tags>
        <tag>python</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[高等量子力学_打印版笔记]]></title>
    <url>%2F2017%2F11%2F17%2Fquantum-mechanics-notes%2F</url>
    <content type="text"><![CDATA[胡勇 老师上课笔记。同高统一样，不废话。 这里提供网盘链接，链接评论可见！评论后请刷新页面。 &nbsp; [reply]点击跳转到下载页[/reply] &nbsp; 2018.01.17 更新部分习题答案，以及全部笔记。 2017.12.02 更新2017.01试题照片。 2017.11.17 更新第二节课件。 2017.11.17 开始更新第一节课件。]]></content>
      <categories>
        <category>资源</category>
      </categories>
      <tags>
        <tag>课件</tag>
        <tag>高亮</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[高等统计物理_打印版笔记]]></title>
    <url>%2F2017%2F11%2F16%2Fstatistical-physics-notes%2F</url>
    <content type="text"><![CDATA[首先，我也是有写笔记的，感谢年级群里面分享的同学，做这个打印版的初衷是回归pdf文档本质，去除杂项，优化以用于打印，方便后期复习。然并卵哪有时间看啊。 后来改进了部分方法，使得优化后的笔记质量有较大提高，由于原笔记有水平偏要的强行校准后优化成矢量版会恢复倾斜，于是标题黑白打印版的都只是黑白而已，放到最大有像素颗粒。而 高清矢量版则比较平滑。这里提供网盘链接，链接评论可见！评论后请刷新页面。&nbsp; [reply]点击跳转到下载页[/reply] 2017.12.05 更新至第六周课堂笔记。2017.11.23 更新至第五周课堂笔记。2017.11.21 更新至第五周课堂笔记part1。2017.11.17 更新至第四周课堂笔记。2017.11.16 更新至前三周课堂笔记。&nbsp;​]]></content>
      <categories>
        <category>资源</category>
      </categories>
      <tags>
        <tag>课件</tag>
        <tag>高统</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[教育网IPV6下载YouTube视频]]></title>
    <url>%2F2017%2F11%2F16%2Fdownload-youtube-video%2F</url>
    <content type="text"><![CDATA[&nbsp; 前些天有同学问我youtube视频怎么得到，这里展示一个对于教育网用户能够快速获得（下载）YouTube视频的方法。&gt; YouTube 是啥，不存在的网页…… 要想访问YouTube，你先的学会“翻墙”，至于how，自己想办法，如果你有幸使用的是中国科研教育网，并且能接入ipv6，那么通过下面简单的几个步骤就能获得YouTube视频音乐。（有时效性） ipv6?一个简单的办法，能打开 http://ipv6-only.netsh.org/ (或者 http://ipv6test.isoc.hk/index.html.zh_CN )则表示你有IPV6地址，如果你曾经有过，现在突然用不了了，可能只需修复一下以太网即可。 hosts翻墙不易，一般而言改hosts是最快的FQ方式，教育网推荐 https://serve.netsh.org/pub/ipv6-hosts/ 这个上面的 hosts ，没有ipv6的可以尝试百度 ipv4的hosts （这个有时效性），因为ipv6的hosts一般不易被墙所以推荐。至于怎么改，请出门百度关键词 hosts 。 下载改好hosts后惊喜地发现了新天地，可是教育网ipv6hosts是无法在线播放YouTube视频的，只能预览，但是能够使用特殊的方式下载。 请先收藏 http://www.clipconverter.cc/ 不要问问什么， 按照下面图片所示操作即可。 复制 视频链接 http://www.clipconverter.cc/ 然后 视频越大，等待时间越长 最后下载即可。 &nbsp; 文末推荐如果你还在使用迅雷这种下载器，那建议你果断卸载，并使用 IDM，有绿色破解版推荐 http://www.zdfans.com/575.html ，谁用谁知道，不解释。 ​&nbsp;]]></content>
      <categories>
        <category>教程</category>
      </categories>
      <tags>
        <tag>IPV6</tag>
        <tag>YouTube</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[我的安卓我做主]]></title>
    <url>%2F2017%2F11%2F14%2Fmy-android%2F</url>
    <content type="text"><![CDATA[开放源代码的安卓系统无疑是可玩性、可定制性极强的OS。在几年前我对安卓与IOS等系统还无法真正区分，直到换了新安卓手机，自己琢磨学会了刷机。为什么刷机，刷机可以体验到官方系统完全没有的新功能，有可能解决官方无法修复或者实现的功能但也可能引入其他缺陷（全看适配开发者个人能力），就像换了一台新手机，也可以体验纯正的Google服务（前提是要有相应的适配ROM）。 安卓 安卓一般指Android（Google公司开发的操作系统）。 开源精神是 Free &amp; Open Source，意思是自由与源代码开放，Free是自由不是免费。自由及开放源代码软件Free and open-source software Recvory安卓的硬件和软件是可以分开的，因此用户可以选择其他的系统（定制系统）。刷机和电脑的装系统道理是一样的，当时受限于硬件区别，不是所有的手机底层系统（俗称Recvory）都和电脑的底层系统Bios一样支持所有系统，因此安卓手机刷机的前提是Recvory的支持。TWRP Recovery算是目前最为顺手的 Recovery 了。但是一般情况下这并不是一种通用Recovery，需要有大牛针对具体硬件修改（也称适配）才能用。有了第三方REC是刷机的第一步。有些手机是有BootLoader的，要刷第三方REC就必须先解锁（比如小米魅族），BootLoader在一定程度上能保护用户手机，但还是有可能遭到暴力破解的。魅族手机好像是不给解锁BootLoader的，也就不能刷第三方ROM。具体刷机方法一般给手机论坛或者第三方论坛都有详解。 ROMMiui很便捷，该有的都有，Flyme适合不折腾的人，魔趣ROM可能是最贴切的偏原生安卓系统，AospExtended可能是最接近原生安卓的系统（加个Gapps几乎就是亲儿子了），Resurrection Remix OS（一般称RR）可定制性极高的原生类ROM，其他还有很大定制ROM，这里不详解。 root要想获得系统最高的控制权（root权限），可能小白用户会选择各种一键root应用，但是这里机器不推荐这么干，因为这些工具或多或少都有流氓行为，最优的办法是卡刷Super SU获得完美root权限。为什么要root，root后能够对应用进行完整控制，达到常规途径无法实现的操作。比如去广告，安装破解版应用，破解应用，卸载系统预装应用，自动操作，修改系统显示样式，查看连接过的wifi密码，特殊设置达到省电目的等。 ADBroot已经是玩机用户必备，但是root也可能会引入其他麻烦，最直接的就是影响官方系统的FOTA升级（如果是官方系统）。对于大部分国产rom一般来说root后的系统是不能通过FOTA（增量包）方式升级的。这里推荐一个和root一样强大（或者说比root更强大）的方式，那就是ADB（Andorid Debug Bridge）工具，每个系统都有这个，不管是官方还是第三方，ADB在安卓的开发者模式中开启，ADB大致就是通过PC与通过USB或者网络连接的安卓系统之间进行命令操作控制。pc上需要有ADB工具，百度即可得到，手机上开启USB调试即可（PS.火车站免费充电处千万别打开USB调试，不然就相当于将手机最高权限交予他人）。连接配对后，在PC控制台输入命令即可控制手机，比如卸载、冻结 (隐藏，没有卸载，但是和卸载效果等同，并不破坏系统完整性)系统或者用户应用。由于有一定门槛，大多数人几乎都没听过。除了这种麻烦的方式外，有手机app开发者制作了使用ADB权限控制手机的应用，比如黑域 appops等对于没有root的用户简直就是神器。 这里推荐酷安应用市场，小而实用的各种应用，只要你想得到的几乎都有。 核心破解安卓核心破解，顾名思义，破解安卓的一些系统验证。比如应用签名，低版本应用覆盖安装。一般来说，如果一个应用被反编译后打包，其签名不是和原来一样，系统若检测到签名不一致就不能升级安装应用，有些要求高的应用如果不签名或者签名不一致，会导致闪退或者功能受限，这可是有违反编译的目的，为了能用，就需要强行使用原来的签名，但这样必须要破解安装核心验证，否者应用无法安装，这也就是破解安卓核心的目的所在。典型代表，各种修改、美化、去广告、精简版应用。如何破解，一般两种方式，一是使用幸运破解器 （神器，还能破解其他东西，谁用谁知道），二是使用xposed 模块破解，其实是幸运破解器的核心破解功能提取。前一种需重启两次才能全部破解。而且每次刷机都必须重新破解，比较麻烦。 Xposed又一个神器，以QQ防撤回、抢红包、微信界面修改、运动记步修改、界面美化等闻名。对于大部分常见rom，需要单独适配才能用。官方下载地址 http://dl-xda.xposed.info/framework/ ，rov89大神维护。 除自带商店外，酷安里也有xposed模块板块下载。 有了这些工具，配合相应的强大应用，比如My Android Tools（写轮眼）禁用app组件与权限，SD女佣清理垃圾较CCleaner对于windows之效，xopsed红包插件快到令人发指，阻止运行 绿色守护 黑域 以及各种冻结软件共同镇压流氓软件之间的相互唤醒、恶意唤醒、后台耗电，V4A 杜比音效 提升音质，tasker高级自动化…… 我的安卓，我做主。玩坏了，大不了用钛备份来一个完整备份与还原。]]></content>
      <categories>
        <category>实用</category>
        <category>教程</category>
      </categories>
      <tags>
        <tag>安卓</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[张维为：中国信心]]></title>
    <url>%2F2017%2F11%2F12%2Fchinas-confidence%2F</url>
    <content type="text"><![CDATA[张维为讲中国信心：中国崛起大势不可阻挡。[videojs_video url=”http://upload.rachpt.top/%E5%BC%A0%E7%BB%B4%E4%B8%BA%EF%BC%9A%E4%B8%AD%E5%9B%BD%E4%BF%A1%E5%BF%83_x264.mp4&quot;] 党课第一节，老师放的这个视频，觉得讲的很好，所以分享给大家。 知乎：如何评价张维为的演讲《中国信心》？]]></content>
      <categories>
        <category>视频</category>
      </categories>
      <tags>
        <tag>视频</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[第一个小视频]]></title>
    <url>%2F2017%2F11%2F11%2Fvideo-test%2F</url>
    <content type="text"><![CDATA[紫菘半圆广场的一天 一年前拍摄的一整天的延时视频。没有配音乐。 视频码率1Mbps，在线播放有卡顿，以后适当降低码率。]]></content>
      <categories>
        <category>视频</category>
      </categories>
      <tags>
        <tag>视频</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Firefox 切换更新通道]]></title>
    <url>%2F2017%2F11%2F11%2Ffirefox-noupgrade%2F</url>
    <content type="text"><![CDATA[用过Firefox(火狐浏览器)的童鞋都知道，Firefox可是个更新狂魔，如果你只是一个浏览器轻度使用者，或者是是别人给你提供啥（预装）就用啥这种User，那么Firefox的高频更新对你可能影响不大。如果是和我一样，在浏览器中装了大量的生产力工具的重度（伪极客）用户，FX的更新可能是灾难性的。 Mozilla Firefox（简称Firefox），中文俗称火狐（中国大陆官方有使用但未注册为商标），是一个自由及开源的网页浏览器，由Mozilla基金会及其子公司Mozilla公司开发。Firefox支持Windows、OS X及Linux，其移动版支持Android及Firefox OS，这些版本的Firefox使用Gecko来排版网页，Gecko是一个运行当前与预期之网页标准的排版引擎，而在2015年发布的Firefox for iOS则非使用Gecko。 截至2016年1月，Firefox全球市占率为9％至16%，为全球第二流行的网页浏览器。 按更新频率大致可以这么排：ESR（42周），Release（6周），Beta（约一周），Nightly（每天），ESR是挺好的，但是Fx有个致命的缺点就是当扩展安装较多后，冷启动速度慢的令人发指，至于原因网上很多这方面的科学解释。现在更新的57版对冷启动速度有巨大提升，而插件兼容性方面对我影响不大，于是将所有的esr53.4升级到了57beta版（正式版当时还是56）。由于每次更新fx都会导致lastpass这个插件无法保持自动登录信息，能让fx延迟更新或者不更新吗？是有办法的。 [64位版Frefox] 默认安装目录 C:\Program Files\Mozilla Firefox\defaults\pref\channel-prefs.js 下使用记事本（notepad）打开，将末尾部分的 beta 改成 esr 即可进入延长支持版本通道，或者release 进入普通发行版通道。如下图。 最后可以在设置里面禁用Firefox的自动更新。 文末附上 Firefox的官方FTP下载地址，再也不用担心下到中国版了…… http://ftp.mozilla.org/pub/firefox/releases/ 我收藏的旧插件集，Fx 57+ 有部分用不了了 https://addons.mozilla.org/zh-CN/firefox/collections/rachpt/addons/ about:support 打开 配置目录 将 gmpopenh264.dll，gmpopenh264.info 这两个文件覆盖安装到 \gmp-gmpopenh264\1.6 目录下 ，版本号自己更新（在info文件中）]]></content>
      <categories>
        <category>教程</category>
      </categories>
      <tags>
        <tag>firefox</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[照片PDF优化成矢量版]]></title>
    <url>%2F2017%2F11%2F10%2Fmake-pdf-file-clear%2F</url>
    <content type="text"><![CDATA[手抄好慢好累，身边又没有扫面仪，嘿嘿，我手机像素好，拍照–&gt;打印–&gt;OK。可是…… 乌漆ma黑的，还有不相干的背景图，此处不放图。 平日里，我们看到的PDF文件一般有两种类型，一种是矢量版的，也就是无论放大多少倍，字体都是清晰的（某些图片也是清晰的），另外的一种就是体积很大的扫描版文件，放大后字体就会模糊。由于PDF文件一般不易被修改，因此里面的内容相对的更有保障，同时阅读容易（只需浏览器即可），因而大多数人都喜欢使用这种格式。 我想把用手机照片合成的PDF变成矢量打印清晰版，可以吗？ 当然可以，就是有点折腾。需要的软件有：Acrobat pro DC Photoshop ComicEnhancer Pro ，啥你不会PS，没事就很简单的几个步骤，ComicEnhancer Pro 可是重点条件，生产力工具，百度即可得到绿色版。 首先，将照片版PDF里面的照片提出出来（右键–&gt;另存 即可），导入PS，对照片的周围进行修改。使用画笔工具 [快捷键 B]，Alt 键 吸取边缘部分白色，将差别很大的背景涂成接近一致的颜色，[ ] 可用于放大缩小画笔工具。 改完后大致如上图。接着，使用ComicEnhancer Pro 将所有的修改后的图片导入进行批处理优化。导入后如下所示。 接着调节一下对比度 到60% 左右，亮度 调到最大，接着在其他 –&gt;色彩 里面设置颜色，色彩数 –&gt; 纯黑白 阈值算法–&gt; Wolf ，其他默认即可。效果如下。 至此优化基本完成。每一张图都保存一下，下面使用Acrobat pro DC 生成PDF文件，并进行增强优化。如下图所示。 至此已经全部完成。如果你的照片大小不完全一致，得到PDF各页之间可能有大小差异，可以选择打印，通过下面的设置，得到一份每页大小一致的PDF文件。 2017-11-10更新： 只需勾选如下选项即可快速去除边缘大部分背景。 至于每页大小不一致，这可以在PS中使用 快捷键[Ctrl + Alt + i] 调整每张图片宽度至一致即可。]]></content>
      <categories>
        <category>教程</category>
      </categories>
      <tags>
        <tag>pdf</tag>
        <tag>acrobat</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Materials Studio 超算步骤_精简版]]></title>
    <url>%2F2017%2F11%2F10%2Fmaterials-studio-super%2F</url>
    <content type="text"><![CDATA[简化以方便阅读。 结构优化文件准备 cif 文件按 ms_castep 命名（或者其他不带空格简单名字）； 选中全部原子，CASTEP Calculation 设置参数，[Setup] Task: Geometry Optimization , Quality: Ultra-fine , Functional: LDA, CA-PZ , More → Max.iterations 500 ,（默认的100可能不够） Optimize cell yes ; （优化晶格）[Electronic] More → Use custom energy cutoff 400 or others , k-points → Cusom grid parameters yes ,Grid parameters 4,2,4 or others ;[Propweties] Population analysis yes ; [Job Ctrol] Run in parallel on 8 or max （本地跑才需要设置这个） . Files → yes ； 在~Files→Documents→~CASTEP GeomOpt 复制 ~.cell 和 ~.param 文件到新文件夹 ~GeomOpt 同时复制 RunGeneral.sh &amp;amp; subGeneral 到其中； 设置 subGeneral 中 ppn=? 即是计算使用核数； 打开~.cell 找到 %BLOCK SPECIES POT 中的 ~.usp 部分，在 Material Studio 安装目录路径 C:\Program Files (x86)\Accelrys\Materials Studio 8.0\share\Resources\Quantum\Castep\Potentials\ 中复制所有需要的 到刚才的 ~GeomOpt 中（已经证明非比要，超算会自动加相应的 usp 赝势文件），至此结构优化文件准备已经完成。 超算部分 _结构优化 需要使用的步骤，dos2unix subGeneral RunGeneral.sh 转换步骤，chmod +x subGeneral RunGeneral.sh （只有使用 windows 提交的才需要这些），可以使用 Tab 自动填充，qsub subGeneral 提交任务， qstat 开始任务， bqueues 查看所有运行、请求与剩余的核数，qdel 任务ID号 结束任务； 下次在 qstat 无显示表示已经算完，但不知是否正常算完。$JOBNAME.o$JOBID 标准输出,$JOBNAME.e$JOBID 标准错误输出（直接看 .castep 文件最准确）。 计算弹性常数 下载除 ~.check 外的其他文件（.usp .pid 也不需要），复制粘贴并替换本地计算目录~GeomOpt ，在MS 中刷新refresh STP。 打开~.xsd 文件，选送全部原子，CASTEP Analysis → Structure →Upadte ；取消原子选中，CASTEP Calculation →Task Elastic Constants → Files ，Save。 根据右侧显示的~.param ms_castep_cij__ii__jj.param 修改subGeneral_cij.cij 中的循环次数，比最大的数大1。 复制文件到ms_castep_Cij ，所有原 Cij文件夹里面的 ~.cel ~.param 文件，以及~GeomOpt 里面的 ~.usp ~.sh ，以及刚才修改的subGeneral_cij.cij 。 提交ms_castep_Cij到远程，进入该目录，不要使用空格以及括号，否者出现 路径需要使用 \ 转义 ，chmod +x subGeneral_cij.cij RunGeneral.sh 以及 dos2unix subGeneral_cij.cij RunGeneral.sh ，ls 这两出现绿色（或其他）表示已经转码了（使用 ll 看有无执行权限 x即可），qsub subGeneral_cij.cij 提交任务，qstat 开始任务。 数据处理部分 同样，下载除 ~.check 外的其他文件，覆盖到原本地目录，找到并打开ma_castep.castep 文件，也就是总的计算结果。 使用CASTEP Analysis → Elastic constants → Calculate 。 右侧生成 ma_castep Elastic Contants.txt 文件包含计算得到的弹性常数等信息。 复制其中的Elastic Stiffness Constants Cij 矩阵到计算用的matlab程序包data内。 使用 Matlab 进一步计算 导入数据，Input.m 运行[F9] ，ElasticConst3D.m ElasticConst2D.m Plot 画图，YoungsModulus.m 计算 Youngs Modulus。 具体见 &gt; User’s Guide for ElasticConst 。 在线计算： http://progs.coudert.name/elate 关于MS 的一些笔记在计算弹性常数之前并不一定要进行几何优化，可以由实验观测到的结构计算出Cij数据。尽管如此，如果我们完成晶胞的几何优化，可以获得更多相容的结果，进而计算与理论基态对应的弹性常数。 弹性常数的精确度，尤其是切变常数的精确度，主要取决于SCF计算的品质，特别是布里渊区取样和波函数收敛程度的品质。所以我们设置SCF、k点取样和FFT格子的精度为Fine。 CASTEP的弹性常数计算任务的结果以一批.castep输出文件的形式给出。这些文件中的每一个文件都代表确定的晶胞在假设的应变模式和应变振幅下的几何优化运行结果。这些文件的命名约定为：seedname_cij__m__n。对于给定的模式来说，m代表当前的应变模式，n代表当前的应变振幅。 CASTEP可以使用这些结果来分析每一个运行计算出来的压力张量，产生一个有关弹性性质的文件。Modules | CASTEP | Analysis | Elastic constants —-&gt; sedname Elastic Constants.txt。 1234567此 `txt` 文档中的信息包括：* 输入的应变和计算出的应力的总结* 每一种应变模式线性拟合和拟合质量的计算结果* 给定对称性下计算出的应力与弹性常数之间的对应* 弹性常数Cij和弹性柔量Sij的表格* 导出量：体积模量和其倒数、压缩系数、杨氏模量、Poisson比、 Lame 常数(用于模拟各向同性介质) 完整原版教程： 下载 2017-12-14 更新 MS 如果不幸遇到下面的错误提示， 原因是： 文件路径中使用了中文字符所致。 解决办法： 使用非中文路径。 2018-03-14 更新 更新部分描述。]]></content>
      <categories>
        <category>DFT</category>
      </categories>
      <tags>
        <tag>ms,castep</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Acrobat 双页全屏显示]]></title>
    <url>%2F2017%2F11%2F10%2Facrobat-2pages-display%2F</url>
    <content type="text"><![CDATA[我有一个大显示器，但是阅读pdf时，Acrobat DC (或者reader) 使用快捷键 [ Ctrl + L ] ，全屏显示了,可是偌大的显示器只显示了一页，左右两边大大黑边很是浪费。有办法实现全屏双页显示吗？ 是的，可以。这里以Acrobat DC 为例。 Adobe Acrobat是由Adobe Systems所开发的电子文字处理软件集，可用于阅读、编辑、管理和共享PDF格式文档。 一般包含如下包： Adobe Acrobat，包括专业版和标准版。用于对PDF文件进行编辑、共享和管理，需要购买，而3D版本，除了专业版的功能，另外也支持立体向量图片的转换。 Acrobat Reader（2003年至2014年期间，曾使用Adobe Reader作为名称），用于阅读PDF文件，为免费发放。 首先，我们需要设置页面显示为双页视图，具体如下图所示。 然后，在 [首选项] - 快捷键[ Ctrl + K ]，或者从下面的位置进入。 接着，在 [首选项] →(左侧)[ 全屏 ]→[ 全屏设置 ]→去掉 &lt;下图红框项&gt; 前面的勾。如下图。 另外，如果你想开启Acrobat 的护眼模式(说白了也就是背景颜色)，可以设置一下 [辅助工具] 里面的 [文档颜色选项]，个人觉得这个不错——电脑管家的推荐色 [ R: 204 G: 232 B: 207 ]。 最后，使用快捷键 [ Ctrl + L ] 进入全屏阅读文档，或者点击 [ 视图 ] → [ 全屏模式 ] 。]]></content>
      <categories>
        <category>教程</category>
      </categories>
      <tags>
        <tag>PDF</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[搭建一个方便的多平台笔记方案]]></title>
    <url>%2F2017%2F11%2F10%2Fnote-markdown%2F</url>
    <content type="text"><![CDATA[在这里首先简介了一下md格式文件，md就是MarkDown的简称，就如HTML一样是一款标记语言，因其简洁明了兼容性强，语法简单同时又有比纯文本更丰富的样式而被多数的程序员使用。Windows下直接用记事本就可以打开编辑查看，但是标记语言丰富的样式得不到展示，这里我们使用三个平台（软件）实现windows与安卓手机之间的Markdown笔记同步协调工作。 插曲：我之所以不选择一家公司的现成完整方案，是因为：1、无用东西太多，不适合快速笔记，2、广告，非要用我看示广告，我可不干，3、数据难以迁移，只能吊死一颗树上。我们要用的有：坚果云、易码（手机APP）、还有 Typora（这篇文章就是就是用这个写的）。 坚果云免费账户每月1G上传流量3G下载流量，对于文档足够了。我们需要打开坚果云的第三方 WebDAV接口给易码，如下图 易码上使用坚果云账户（邮箱比如），密码是WebDAV应用的（这个是固定的不能改）。选一个文件夹用于存放笔记，可以设置默认保持在坚果云上，文档中的图片会一并同步到坚果云。在PC上下载坚果云的客户端，选择同步易码使用的笔记文件夹，Typora选则坚果云文件夹打开，这样PC手机就能同步协作创作了。 后记 易码我是在酷安发现的个人开发者，现在还是beta阶段但是已经相当好用，体积小巧（目前体积小于5兆）。推荐去酷安或者Google Play下载。 坚果云（和锤子科技没有半毛钱关系），还是挺好的，几乎没有难忍广告，速度通常比百度网盘快，空间累加，也就是你每个月上传1G文件，总空间就增加1G。 Windows平台的MD文件编辑阅读器较多，Typora算是免费中更符合大众需求的，源码时时展示，主题多样，唯一不好的可能就是没有中文菜单，至于显示中文默认使用衬线字体，可以自己修改主题的CSS样式实现。这里不赘述。 希望本笔记对喜欢折腾敢于冒险的读友有用。]]></content>
      <categories>
        <category>实用</category>
      </categories>
      <tags>
        <tag>MarkDown</tag>
        <tag>笔记</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[我总是很忙]]></title>
    <url>%2F2017%2F11%2F10%2Fso-busy%2F</url>
    <content type="text"><![CDATA[本来以为建好网站后，自己会轻松些许，看了是我想当然了。 上个月各种折腾，网站总算是从零到一，从无到有，基本够用了，但是那一丝丝的不甘终于在我发现Joomla！这个开原CMS后，转化成实际行动。 单就php上传文件乱码就困扰了很久，后来几乎就要完全解决了，但是登录模块是必须要数据库支持的，当然一切看似理所当然的事总有意外，折腾一整子后发现了phpmyadmin，脑袋突然一转，会不会有现成的类似工具？一搜果不其然，Joomla！进入我的视野，试用一下后，有了一种相见恨晚的气愤，相比其他，如果wordprass是电动车，那么Joomla！就是汽车，但是汽车得先考驾照，joomla的前期学习成本高，丈二和尚摸不着脑袋，好在优酷找到了很老的教学视频，入门容易很多。 在这之间还无意间测试并搭建了邮件系统，当是有bug，实用性不大，没经历深入研究。 想想，我好像总是能找到一件很无聊的事一个人自娱自乐。大一上课回去后一个人骑车出去夜逛，大二又迷上羽毛球，PS，mathematica，还有重装电脑，大三是越野自行车，到山里骑行，还有PT，大四上，考研，全身心投入，还学会了刷机，大四下干了啥，喔，看了些小说，…总之，好像时间总是会被其他与我无关的事所吸引。 虽然，生命不息，折腾不止，但是，本职工作，还需上心。 &nbsp;]]></content>
      <categories>
        <category>随笔</category>
      </categories>
      <tags>
        <tag>忙</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[顺利过度到 firefox 57]]></title>
    <url>%2F2017%2F11%2F03%2Fupto-firefox-57%2F</url>
    <content type="text"><![CDATA[Firefox 57可是说是火狐有史以来最棒的版本（我说的是速度），但是目前受限于webextension，很多以前实用的插件功能受限或者没有适配版。这里展示几个我遇到的问题与解决办法。 新标签打开书签页在firefox 57以前，如果你问有没有办法在新的标签打开书签、搜索、网址等，那么毫不犹豫会被推荐使用 Tab Mix Plus 这个插件，然而，现在的57版，该插件已经不再适用，因此还有办法延续我直接在新标签打开书签的习惯吗（别告诉我使用鼠标中键，我就喜欢左键）。 办法是有的， 1231. 在firefox 地址栏输入 about:config ，2. 确定，搜索 browser.tabs.loadBookmarksInTabs ，将其值改为 true (双击即可)。 也许你发现在标签页中建单击就关闭该页，如果你想不想使用这个关闭，可以按上述的方法修改该值 browser.bookmarks.openInTabClosesMenu 为 false 。 全局的鼠标手势用过 FireGesture 的都知道全局手势的吧便利性，在养成习惯后更是离不开，然而57版的Firefox可是不在支持这种牛逼的操作的了，虽然 Gesturefy 有望成为其替代者，但是终究是无法全局的。这里推荐一款能够实现全局手势的扩展软件 FireDoge 。 具体可以详见 https://shuax.com/portfolio/firedoge/ ，唯一缺点就是可定制性弱了一点。 其它插件Lastpass S3.Translator ADblock Plus ublock Tampermonkey 等都已经有适配版了，几乎已经能够满足大多数用户的需求。具体下载连接可以在下面的合集中找到。 https://addons.mozilla.org/zh-CN/firefox/collections/rachpt/1/ 至于移动版firefox，57版的冷启动速度已经正常了至少不会像以前版本让人感觉到明显的卡顿，但是网页加载渲染有些慢，没有手势（连下滑刷新都木有），或许后期有插件可以实现，目前还是继续使用我的小巧Via浏览器吧。]]></content>
      <categories>
        <category>教程</category>
      </categories>
      <tags>
        <tag>firefox</tag>
      </tags>
  </entry>
</search>

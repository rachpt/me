<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>rachpt&#39;s Blog</title>
  
  <subtitle>时间总是追不上</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://rachpt.github.io/"/>
  <updated>2019-04-10T10:02:02.518Z</updated>
  <id>https://rachpt.github.io/</id>
  
  <author>
    <name>rachpt</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>jupyter-notebook-cannot-work-with-the-same-base-name</title>
    <link href="https://rachpt.github.io/2019/04/10/jupyter-notebook-cannot-work-with-the-same-base-name/"/>
    <id>https://rachpt.github.io/2019/04/10/jupyter-notebook-cannot-work-with-the-same-base-name/</id>
    <published>2019-04-10T09:43:29.000Z</published>
    <updated>2019-04-10T10:02:02.518Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>.ipynb 死活连接不上kernel，但是单独放到其他目录又可以。</p></blockquote><a id="more"></a><p>使用 pycharm 以及 vs code编辑python 代码，但是运行时提示我的 matplotlib 有问题，因为我使用了 anaconda，同时有使用过 virtualenv，环境乱七八糟，但是我的 anaconda base环境里面使用我所用到的库的。由于代码也不多，于是想到直接使用jupyter notebook。</p><p>于是我创建了一个和刚才的 py 文件同名的 ipynb 文件。当然它们是在同一个文件夹下。下面就是我的遭遇：</p><p><img src="https://ws1.sinaimg.cn/large/675bda05ly1g1xorsbgxgj20pr05zgm4.jpg" alt="pic"></p><p>我打开其他目录下的 ipynb 文件却是正常的，于是排除我的 jupyter 环境的问题。<br>经过一通复制粘贴重命名后，最终确定是那个 base name 一样的 py 文件导致的。改名问题解决。</p><p><img src="https://ws1.sinaimg.cn/large/675bda05ly1g1xoz7jubhj207i09zt92.jpg" alt="pic"></p><p>这里记录一下，希望有用。</p>]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;.ipynb 死活连接不上kernel，但是单独放到其他目录又可以。&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
      <category term="python" scheme="https://rachpt.github.io/categories/python/"/>
    
    
      <category term="jupyter, python" scheme="https://rachpt.github.io/tags/jupyter-python/"/>
    
  </entry>
  
  <entry>
    <title>notes-about-awstats</title>
    <link href="https://rachpt.github.io/2019/03/22/notes-about-awstats/"/>
    <id>https://rachpt.github.io/2019/03/22/notes-about-awstats/</id>
    <published>2019-03-22T03:41:20.000Z</published>
    <updated>2019-03-22T04:28:04.354Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>使用awstata分析nginx以及vsftp日志。</p></blockquote><a id="more"></a><h1 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h1><p>可以使用相应平台的包管理器安装，也可以直接到<a href="https://awstats.sourceforge.io/#DOWNLOAD" target="_blank" rel="noopener">官网</a>下载归档文件，解压其中的 <code>wwwroot</code>放到nginx的根目录，或者在nginx config文件设置alias，可以参考 <a href="https://wiki.archlinux.org/index.php/awstats" target="_blank" rel="noopener">https://wiki.archlinux.org/index.php/awstats</a> 或者<code>tools/nginx/awstats-nginx.conf</code>文件。</p><p>另外，需要 perl，这个系统一般都带有。</p><h1 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h1><p>这部分比较复杂，可以使用配套的tools 里面的 <code>awstats_configure.pl</code> 交互式生成配置文件，也可以修改 <code>/etc/awstats/awstats.model.conf</code>，包管理器安装才有的。</p><p>我是用的 <code>pacman</code> 安装的，所以直接复制修改该model文件，将<code>model</code>改成自己的任务名，比如<code>web</code>或则<code>ftp</code>啥的。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">LogFile=&quot;/var/log/nginx/access.log&quot;</span><br><span class="line"></span><br><span class="line">LogType=W # 默认 web模式</span><br><span class="line"></span><br><span class="line">LogFormat=1</span><br><span class="line"></span><br><span class="line">SiteDomain=&quot;web-server&quot; # 改成你想显示的</span><br><span class="line"></span><br><span class="line">AllowToUpdateStatsFromBrowser=0  # 是否可以通过网页更新，具体好坏里面有说明</span><br><span class="line"></span><br><span class="line">DirIcons=&quot;/awstatsicons&quot; # 如果你修改了该路径</span><br><span class="line"></span><br><span class="line">UseFramesWhenCGI=0  # 是否开启侧边栏，0 不开</span><br><span class="line"></span><br><span class="line">ShowFlagLinks=&quot;en cn tw de jp&quot; # 显示语言切换按钮</span><br><span class="line"></span><br><span class="line">Logo=&quot;awstats_logo1.png&quot;  # logo 图片</span><br><span class="line">LogoLink=&quot;/&quot;   # logo 链接</span><br></pre></td></tr></table></figure><p>上面是 nginx 日志的，对于 vsftp 只有一点区别，就是需要自己定义 <code>LogFormat</code>，如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">LogFile=&quot;/var/log/vsftpd.log&quot; # vsftp 需要打开对应的日志开关！！！</span><br><span class="line"></span><br><span class="line">LogType=F  # ftp 模式</span><br><span class="line"></span><br><span class="line">LogFormat=&quot;%time3 %other %host %bytesd %url %other %other %method %other %logname %other %code %other %other&quot;  # 这个需要和你的 vsftp log 文件列匹配。</span><br><span class="line"></span><br><span class="line"># 其他类似</span><br></pre></td></tr></table></figure><p>需要注意文件权限问题，比如 wwwroot里面的 需要chown http(你的 nginx 运行用户)，log文件需要有读权限，否则你需要使用 root 运行下面家要说的生成命令。</p><h1 id="生成"><a href="#生成" class="headerlink" title="生成"></a>生成</h1><p>需要使用 crontab (cronie) 定时运行更新命令。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">sudo crontab -e # 创建 root 用户的定时任务</span><br><span class="line"># 每个 1 小时运行一次</span><br><span class="line">7 */1 * * * /usr/share/awstats/tools/awstats_updateall.pl now -awstatsprog=/usr/share/webapps/awstats/awstats/awstats.pl &gt; /home/awstatus.log</span><br><span class="line"># 因为配置文件在 etc 里面，所以上面没有指明路径。</span><br></pre></td></tr></table></figure><p>因为我是用的是nginx alias 方式，所以 -awstatsprog 路径就是安装默认路径。</p><h1 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h1><p>效果展示:</p><p><a href="http://mirrors.hust.edu.cn/visitor/" target="_blank" rel="noopener">http://mirrors.hust.edu.cn/visitor/</a></p><p><a href="http://rachpt.iok.la/awstats/awstats.pl?config=nginx" target="_blank" rel="noopener">http://rachpt.iok.la/awstats/awstats.pl?config=nginx</a></p><p><a href="http://rachpt.iok.la/awstats/awstats.pl?config=vsftp" target="_blank" rel="noopener">http://rachpt.iok.la/awstats/awstats.pl?config=vsftp</a></p>]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;使用awstata分析nginx以及vsftp日志。&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
      <category term="linux" scheme="https://rachpt.github.io/categories/linux/"/>
    
    
      <category term="awstats" scheme="https://rachpt.github.io/tags/awstats/"/>
    
  </entry>
  
  <entry>
    <title>amazing-sed-on-Linux</title>
    <link href="https://rachpt.github.io/2019/03/22/amazing-sed-on-Linux/"/>
    <id>https://rachpt.github.io/2019/03/22/amazing-sed-on-Linux/</id>
    <published>2019-03-22T01:26:57.000Z</published>
    <updated>2019-03-22T02:34:37.070Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>记录一些少有用到的sed使用技巧。</p></blockquote><a id="more"></a><h1 id="正则匹配"><a href="#正则匹配" class="headerlink" title="正则匹配"></a>正则匹配</h1><p>sed 默认情况使用基本正则表达式(BRE)，也就是有些元字符需要使用转义<code>\</code>，加上 <code>-E</code>或则<code>-r</code>参数后即可变成扩展正则表达a(ERE)式情况。</p><p>grep 可以使用 <code>-i</code> 参数忽略大小写，而 sed 的 <code>-i</code> 参数表示直接修改源文件而不是输出到标准输出 stdout，在替换模式下也是可以使用参数忽略大小写的，就是在 表示全部(g)的位置放置i。<code>sed &#39;s/旧的东西/新的东西/ig&#39; filename</code>。<code>g</code> 全部，<code>i</code>大小写不敏感。</p><p>sed 可以使用行号，范围或则正则表达式限定和面代码的作用范围，如<code>sed -n &#39;1,3 p&#39; filename</code> 只打印1到3行，如果有多个命令，则使用<code>;</code>分隔，<code>{}</code>裹起来。<code>sed -n &#39;1, /匹配这个/ {s/old/new/;s%ba/ba%la/la%}&#39; filename</code>，对于这个，使用正则表达式限定下界，普通情况我们使用两个<code>/</code>将正则表达式裹起来，可以看到后面替换模式中我们使用<code>%</code>而不是通常的<code>/</code>作为分隔符，这对于字段中包含<code>/</code>的情况会相当友好，不用使用<code>\</code>转义。所以前面正则表达式限定的地方有没有可能使用自定义符号而不是<code>/</code>？<strong>匹配网站链接、路径</strong>时需要注意，特别使用使用了变量的情况！！！有两种方式解决：</p><pre><code>1. 使用`\`对所有匹配内容中的`/`转义，2. 使用`\`转义你自己的第一个限定符。</code></pre><p><code>sed &#39;/abc\/def/ {do something}&#39; filename</code>，<code>sed &#39;\=abc/def= {do something}&#39; filename</code>。效果如下：</p><p><img src="https://ws1.sinaimg.cn/large/675bda05ly1g1bc70ycucj20cp04ywg2.jpg" alt="pic"></p><h1 id="追加多行"><a href="#追加多行" class="headerlink" title="追加多行"></a>追加多行</h1><p>通常我们使用 <code>a</code> 加上我们需要添加的内容 最佳到指定位置。但是我们找遇到了如下错误：</p><p><img src="https://ws1.sinaimg.cn/large/675bda05ly1g1bcdcspg0j20ar04wgly.jpg" alt="pic"></p><p>使用<code>\n</code>来表示换行如何，</p><p><img src="https://ws1.sinaimg.cn/large/675bda05ly1g1bcgcr7oij209p02nweg.jpg" alt="pic"></p><p>这次我们成功了。那么我们只需要将包含多行的一个变量将 不可见的换行辅 替换成字符<code>\n</code>即可追加这个多行变量到指定位置。那么如何将一个包含多行的变量变成一个使用符号<code>\n</code>分隔的单行变量？<br><code>mult_lines=&quot;$(echo &quot;$mult_lines&quot;|sed &#39;:a;N;s/\n/\\n/;ta;&#39;)&quot;</code>，注意双引号的使用。这里使用<code>a</code> 作为自定义标示符(label)用于跳转，<code>N</code>追加到模式空间，<code>s</code>就是我们熟悉的替换，注意<code>\\n</code>的使用。<code>t</code>仅当最后一个替换命令修改了模式空间时才跳转到标签。如果未指定label，则跳转到脚本的末尾，<a href="https://www.thegeekstuff.com/2009/12/unix-sed-tutorial-6-examples-for-sed-branching-operation/" target="_blank" rel="noopener">扩展阅读</a>。<br>还有一个细节需要提一下，就是<code>$()</code>中我们使用<code>\\n</code>，如果是使用<code>` `</code> ，那么需要使用<code>\\\n</code>，<a href="https://github.com/rachpt/AutoSeed/blob/208aa23b2155d0b98999bdb38341ac23e65e8d58/get_desc/generate.sh#L66" target="_blank" rel="noopener">一个应用例子</a>。</p><h1 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h1><p>还没有…</p>]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;记录一些少有用到的sed使用技巧。&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
      <category term="linux" scheme="https://rachpt.github.io/categories/linux/"/>
    
    
      <category term="sed" scheme="https://rachpt.github.io/tags/sed/"/>
    
  </entry>
  
  <entry>
    <title>Trouble-with-automatic-mouse-copy-function-under-linux</title>
    <link href="https://rachpt.github.io/2019/02/22/Trouble-with-automatic-mouse-copy-function-under-linux/"/>
    <id>https://rachpt.github.io/2019/02/22/Trouble-with-automatic-mouse-copy-function-under-linux/</id>
    <published>2019-02-22T03:37:03.000Z</published>
    <updated>2019-02-22T03:54:00.737Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>突然选中文本就自动复制到粘贴板了，怎么回事？</p></blockquote><a id="more"></a><p>这几天又安装了 goldendict，配合 translate-shell 直接使用 goolgle 翻译文献。不知道怎么回事一时间 <code>Ctrl + C + C</code> 无法使用，各种折腾之后终于能用了。这不是重点，重点是现在突然发现我选中任意地方的文本后，就自动被复制到张贴板了，这对于浏览器操作及其不便。</p><p>关闭词典以及其屏幕取词也无效。<br>网上搜索一下，发现 linux 竟然有 选中复制/鼠标中建粘贴，以及 ctrl + c /ctrl + v 两种粘贴板，默认情况下两种粘贴板互相独立。因为我的某种操作让两种内容混在一起了。</p><p>粘贴板学问详情可以看 <a href="http://forum.ubuntu.org.cn/viewtopic.php?f=48&amp;t=279535" target="_blank" rel="noopener">http://forum.ubuntu.org.cn/viewtopic.php?f=48&amp;t=279535</a> 。</p><p>具体的误操作在该出<br><img src="https://ws1.sinaimg.cn/large/675bda05ly1g0f243mk88j20hu0jrq4d.jpg" alt=""></p><p>应该关闭<strong>同步剪切粘贴板和选中内容</strong>。</p><p>第一次知道还有选中复制这种功能。</p>]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;突然选中文本就自动复制到粘贴板了，怎么回事？&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
    
      <category term="linux, clipboard" scheme="https://rachpt.github.io/tags/linux-clipboard/"/>
    
  </entry>
  
  <entry>
    <title>latex-beamer-note</title>
    <link href="https://rachpt.github.io/2019/01/16/latex-beamer-note/"/>
    <id>https://rachpt.github.io/2019/01/16/latex-beamer-note/</id>
    <published>2019-01-16T06:24:19.000Z</published>
    <updated>2019-03-20T00:46:40.537Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>记录一些使用 LaTeX beamer 的技巧。</p></blockquote><a id="more"></a><h1 id="图片显示编号以及不显示编号"><a href="#图片显示编号以及不显示编号" class="headerlink" title="图片显示编号以及不显示编号"></a>图片显示编号以及不显示编号</h1><p>大部分模板图片都不会编号，只需在导言区加上如下</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">\setbeamertemplate&#123;caption&#125;[numbered]</span><br></pre></td></tr></table></figure><p>即可显示图片编号。<br><a href="https://yihui.name/cn/2010/08/show-caption-numbers-in-beamer/" target="_blank" rel="noopener">参考文档</a>。</p><p>自定义编号，使用caption 宏包。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">\usepackage&#123;caption&#125;</span><br></pre></td></tr></table></figure><p>标签使用 <code>\caption*{}</code>。<br><a href="https://blog.csdn.net/ProgramChangesWorld/article/details/51553683" target="_blank" rel="noopener">参考文档</a>。</p>]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;记录一些使用 LaTeX beamer 的技巧。&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
      <category term="latex" scheme="https://rachpt.github.io/categories/latex/"/>
    
    
      <category term="beamer" scheme="https://rachpt.github.io/tags/beamer/"/>
    
  </entry>
  
  <entry>
    <title>install-matlab-on-archlinux</title>
    <link href="https://rachpt.github.io/2018/12/31/install-matlab-on-archlinux/"/>
    <id>https://rachpt.github.io/2018/12/31/install-matlab-on-archlinux/</id>
    <published>2018-12-31T09:50:22.000Z</published>
    <updated>2019-01-09T08:09:46.460Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>由于archlinux 并不在matlab 官方支持的系统之列，之前使用不完整的matlab(无法使用实时脚本，帮助页面显示不正常)，一直觉得理所当然，居然是有解决办法的。</p></blockquote><a id="more"></a><h1 id="linux-上安装-matlab"><a href="#linux-上安装-matlab" class="headerlink" title="linux 上安装 matlab"></a>linux 上安装 matlab</h1><p>不同于windows，在linux安装iso封装的软件可能需要使用命令(mount)挂载先，然后运行安装程序，后面就是熟悉的点点点了。大体步骤如下：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">mkdir /tmp/matlab</span><br><span class="line"></span><br><span class="line">sudo mount  -o loop /mnt/data/MATLAB_R2018b_Linux/R2018b_glnxa64_dvd1.iso  /tmp/matlab</span><br><span class="line"></span><br><span class="line"><span class="comment"># 新开一个 terminal</span></span><br><span class="line"><span class="comment"># 使用普通账户运行！</span></span><br><span class="line">sudo /tmp/matlab/install  <span class="comment"># 如果安装到自己的家目录，不需要使用 sudo。</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 后面会弹出一个安装界面，</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 若全部安装，50% 时提示弹出 dvd1 插入 dvd2</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 使用 df 查看挂在的所有设备</span></span><br><span class="line">sudo umount -f /dev/loop0  <span class="comment"># 如果提示设备忙，可以稍微等几分钟，再试。</span></span><br><span class="line"></span><br><span class="line">sudo mount  -o loop /mnt/data/MATLAB_R2018b_Linux/R2018b_glnxa64_dvd2.iso  /tmp/matlab</span><br><span class="line"></span><br><span class="line"><span class="comment"># 点击安装界面的继续</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 最后  umount ，以及 rmdir /tmp/matlab</span></span><br></pre></td></tr></table></figure><p> 和windows的安装一样(挂载相同的盘符)，dvd2 的挂载点(路径)应与dvd1 一致。理论上相当于将两dvd解压到一个文件夹(挂载相当于允许你分两次解压)。</p><h1 id="matlab-支持的系统"><a href="#matlab-支持的系统" class="headerlink" title="matlab 支持的系统"></a>matlab 支持的系统</h1><p>如下图：<br><img src="https://ws1.sinaimg.cn/large/675bda05ly1fyq3z9pj1fj20vo0qidje.jpg" alt=""></p><p><a href="https://ww2.mathworks.cn/support/sysreq.html" target="_blank" rel="noopener">https://ww2.mathworks.cn/support/sysreq.html</a></p><p>并没有 archlinux。archlinux wiki上如是说：<br><img src="https://ws1.sinaimg.cn/large/675bda05ly1fyq39xdg8yj20ii03z0sy.jpg" alt=""></p><p><a href="https://wiki.archlinux.org/index.php/MATLAB" target="_blank" rel="noopener">https://wiki.archlinux.org/index.php/MATLAB</a></p><p>所以但我安装后遇到 matlab 无法使用试试脚本以及帮助文档不正常时，以为这就是不支持的代价。</p><p>我甚至已经使用systemd-nspawn 构建 ubuntu容器运行 matlab，但是容器中的matlab仍然有如上问题。<br>同样的matlab 版本，我在 ubuntu 系的linux上安装所有功能均表现正常。这甚至逼迫我更换系统发行版。</p><p>无意中发现通过下面的办法是可以解决archlinux 中matlab 部分功能受限的问题。</p><h1 id="解决办法"><a href="#解决办法" class="headerlink" title="解决办法"></a>解决办法</h1><ol><li>通过 dvd 安装好matlab 2018b后，</li><li>使用<code>yaourt matlab-r2017b</code> (这个时候最高只有2017b)安装依赖。</li><li>构建肯定是会失败的，但是依赖会被安装。</li></ol><p>也可以自己安装 如下图片中所示的依赖，使用 yaourt 比较省事。</p><p><img src="https://ws1.sinaimg.cn/large/675bda05ly1fyq3lo8lu2j20sj0nq0xs.jpg" alt=""></p><p>下面是matlab安装依赖前的报错情况。</p><p><img src="https://ws1.sinaimg.cn/large/675bda05ly1fyq3mvwd53j218g0p0n4n.jpg" alt=""></p><p>实时脚本、帮助文档正常图。</p><p><img src="https://ws1.sinaimg.cn/large/675bda05ly1fyq3oxdhebj218g0p0jyf.jpg" alt=""></p><h1 id="最后"><a href="#最后" class="headerlink" title="最后"></a>最后</h1><p>通过最近频繁更换linux 发行版，得出的结论就是，home 和系统分开，大软件安装到 home下user 外面，比如 matlab comsol crossover pycharm anaconda 等。</p><p>.desktop 文件使用绝对路径，添加到 ~/.local/share/applications/ 里面。<br>下面是我的 matlab.desktop。</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">[Desktop Entry] </span><br><span class="line">Categories=Application;Development;</span><br><span class="line">Comment=Scientific computing environment</span><br><span class="line">Encoding=UTF-8</span><br><span class="line">Exec=/home/program/MATLAB/R2018b/bin/matlab -desktop</span><br><span class="line">Icon=/home/program/MATLAB/R2018b/toolbox/shared/dastudio/resources/MatlabIcon.png</span><br><span class="line">Name=MATLAB R2018b</span><br><span class="line">StartupNotify=<span class="literal">true</span> </span><br><span class="line">Terminal=<span class="literal">false</span></span><br><span class="line">Type=Application</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;由于archlinux 并不在matlab 官方支持的系统之列，之前使用不完整的matlab(无法使用实时脚本，帮助页面显示不正常)，一直觉得理所当然，居然是有解决办法的。&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
      <category term="linux" scheme="https://rachpt.github.io/categories/linux/"/>
    
    
      <category term="matlab" scheme="https://rachpt.github.io/tags/matlab/"/>
    
  </entry>
  
  <entry>
    <title>something-difference-from-manjaro-back-to-ubuntu</title>
    <link href="https://rachpt.github.io/2018/12/18/something-difference-from-manjaro-back-to-ubuntu/"/>
    <id>https://rachpt.github.io/2018/12/18/something-difference-from-manjaro-back-to-ubuntu/</id>
    <published>2018-12-18T07:03:54.000Z</published>
    <updated>2018-12-18T08:17:36.000Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>qprop无法在软件较新的manjaro上编译运行，matlab实时脚本、帮助文档在arch-linux上有问题，mj更新系统很大概率遇到装不上。这三点因素使我做出再次更换系统的决定。</p></blockquote><a id="more"></a><h1 id="适合自己的linux发行版"><a href="#适合自己的linux发行版" class="headerlink" title="适合自己的linux发行版"></a>适合自己的linux发行版</h1><p>到目前为止，我已经完全使用linux系统一年了，所谓完全就是作为主力机器，能不用Windows坚决不用Windows。在这之前自认为对Windows的使用有一些自己的见解，对于配置出适合自己的Windows工作环境非常熟悉。清晰的知道Windows所不能给我提供的功能(或者实现困难)，我尝试过使用 ubuntu 以及ubuntu麒麟(大概14年，那时候原生的ubuntu配置中文比较费劲)，当时啥都不会，没多久就回到Windows10预览版了(那时候Windows8的开始屏可恶心死我了)，后面有试过几次，都没能领会到linux的精髓。</p><p>去年的大约这个时候，由于当时有一台闲置的pc用于 web 服务器，刚开始用的 Windows10，由于Windows总是自己坏掉，于是试了 Windows server 2016，稳定运行15天后再次死机，再加上当时我们需要连接超级计算机提交计算任务，于是了解了部分linux的脚本命令等，有理由相信我已经可以驾驭(使用)linux了，于是安装了ubuntu 16.04lts 到那台闲置的机器上。经过各种配置后，相当稳定，连续正常运行 93 天(后来需要升级系统才关机的)，在了解到各种软件的linux情况后，果断将工作电脑安装上 linux。</p><p>使用过好几个桌面系统，debian 系的、redhat 系的，最后选择了 linux mint，因为界面很适合从Windows转过来的用户，ubuntu的核心让我能够在网上找到较多的教程。用的相当舒适。直到后来从 18.3 升级到 19，有道词典用不了了(看文献屏幕取词翻译)。</p><p>我也试过回到就得 18.3，但是当时因为 python 的几个库的依赖相互冲突解决不了(可能是 3.5太老了，加上用过新的界面就回不去了)，最后我强行升级系统python直接将系统弄死了。</p><p>rpm的包看着好不友好，还有个莫名其妙的 iptable，对于我来说往往全全就是阻碍，centos 难用到死的 gnome桌面我打死不会再试，suse 由于当时试的 kde 版本，各种快捷键都不一样，最后被定义为难用。</p><p>先在笔记本装了 manjaro 的 cinnamon版本，一直也没啥问题。体验几乎和 mint 一致。<br>最后将 开机 没有任何窗口的mint 18.3 替换成manjaro kde版，毕竟ked试manjaro官方维护的，可能会好一些。</p><p>经过短暂而痛苦的学习习惯kde桌面后，配置后喜爱的工作环境，还行。</p><p>不知道什么原因，TensorFlow本来一条命令轻轻松松搞定，然而费了吃奶的力气才装上，MATLAB的安装更是气，先后试了 2017a 2018a 2018b，中午乱码，无法创建实时脚本，帮助页面显示有问题。忍着用！还有最近好几次遇到升级时提示 python的xxx已经存在，无法升级系统，长久考虑，以后可能会出大问题。</p><p>加上最近导师想要使用 <a href="https://github.com/jam31118/rigged-qprop" target="_blank" rel="noopener">qprop</a> 计算东西，刚开始怎么都编译不了，后面编译好后运行有问题。但是在个导师新装的 ubuntu 上编译后可以运行。</p><p>在虚拟机中测试 kubuntu 可以编译运行。于是重装系统至 kubuntu。</p><h1 id="matlab"><a href="#matlab" class="headerlink" title="matlab"></a>matlab</h1><p>刚开始时 实时脚本帮助文档都没问题，但是更换为原来的 home 后，又有问题了。<br>删除 ~/.matlab 后一切正常！</p><h1 id="搜狗乱码"><a href="#搜狗乱码" class="headerlink" title="搜狗乱码"></a>搜狗乱码</h1><p>貌似不需要 archlinux 的在 .xinputrc 里面加东西，其他<a href="https://blog.csdn.net/oncealong/article/details/79328930" target="_blank" rel="noopener">参考这里</a>。</p><h1 id="使用原home"><a href="#使用原home" class="headerlink" title="使用原home"></a>使用原home</h1><p>使用 fstab 挂载原来的 home，体验很糟糕，文件管理器中文乱码，全新配置不会。</p><p>使用 cp -axv /old/home/xxconf /new/home/dir 还原 .mozilla 等软件数据。</p><p>待续…</p>]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;qprop无法在软件较新的manjaro上编译运行，matlab实时脚本、帮助文档在arch-linux上有问题，mj更新系统很大概率遇到装不上。这三点因素使我做出再次更换系统的决定。&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
      <category term="linux" scheme="https://rachpt.github.io/categories/linux/"/>
    
    
      <category term="linux, ubuntu" scheme="https://rachpt.github.io/tags/linux-ubuntu/"/>
    
  </entry>
  
  <entry>
    <title>dual-disk-install-dual-system</title>
    <link href="https://rachpt.github.io/2018/12/10/dual-disk-install-dual-system/"/>
    <id>https://rachpt.github.io/2018/12/10/dual-disk-install-dual-system/</id>
    <published>2018-12-10T06:46:25.000Z</published>
    <updated>2018-12-11T13:05:32.000Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>双 11 花了110元买了块 mstata 固态硬盘，完成多年的愿望。这里记录一下双硬盘独立安装 windows 和 Linux 系统。</p></blockquote><a id="more"></a><h1 id="现在的情况"><a href="#现在的情况" class="headerlink" title="现在的情况"></a>现在的情况</h1><p>一般网上都是单一硬盘安装双系统的，不管是 legacy 或是 uefi，双系统的引导文件都在一块硬盘里面，所以最多就是通过软件修复一下例外一个系统的引导即可。<br>现在的情况是两块固态硬盘，大小一样 120G，需要将 windows 安装到其中一块，而 Linux 安装到另外一块，并且希望在开机的时候提供一个友好的选择系统的界面。</p><p>比较容易实现的是，两块硬盘按照正常步骤分别安装到两硬盘，开机的时候 狂按 F12 (或者其他) 进入 boot manger 选择不同启动硬盘，就能进入不同的系统。但是操作很是不友好。</p><h1 id="背景知识"><a href="#背景知识" class="headerlink" title="背景知识"></a>背景知识</h1><p>win7 不支持 uefi + GPT 模式启动，只能使用传统的 legacy Bios + MBR 模式启动，缺点很明显，硬盘上线2.2T，启动速度也相对慢，多了 Bios 自检过程。<br><a href="https://zhuanlan.zhihu.com/p/36976698" target="_blank" rel="noopener">更多请看这里</a>，<a href="https://blog.csdn.net/u014712482/article/details/80686387" target="_blank" rel="noopener">或者这里</a>。</p><p>刚开始的时候，我的唯一的硬盘上面安装的是 manjaro Linux，加装硬盘后，我使用常规方法安装了 windows 10，然后我将 windows 盘作为默认启动硬盘，使用 easyBSD 创建 Linux 的引导，失败告终，windows 不能切换 Linux，只能改启动应到盘。</p><p>就在要绝望的时候，有人说 Fedora 可以双硬盘安装并解决双系统引导问题。于是开始准别全部重装。</p><h1 id="重装系统"><a href="#重装系统" class="headerlink" title="重装系统"></a>重装系统</h1><p>能用 uefi 的机器我当然不会使用 legacy 啦。</p><p>首先安装 windows 到 windows 认为的 disk 0，后来发现这个可有可无。<br>有几点需要注意，修改 windows 安装程序 默认的 efi 100m 的设置，因为我们想把 linux 的 efi 挂载到 windows 的 efi 分区。<br>时候证明，这一步可能不需要(在linux下看到 efi 使用量 35 m)。</p><p>系统版本选择界面后，按<code>Shift+F10</code>调出命令提示符，</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">diskpart</span><br><span class="line">list disk</span><br><span class="line">select disk 0</span><br><span class="line">clean</span><br><span class="line">convert gpt</span><br><span class="line">create partition efi size=800</span><br><span class="line">create partition primary size=102400</span><br></pre></td></tr></table></figure><p>自定义 efi 分区大小， 其实 500m 可能就够了，保险起见，设了 800m。</p><p><a href="https://www.ithome.com/html/win10/224908.htm" target="_blank" rel="noopener">具体情况这个参考文档</a>。</p><p><strong>第一次</strong>尝试安装 Fedora cinnamon 版本，一切照旧，我只是选择了 安装到另外空的硬盘，分区使用自动。<br>装好后，自动将 Linux 盘作为了默认引导硬盘，greb 页面出了 Fedora 外还有 windows 的启动项，一切如愿。当然选择 windows 所在硬盘为默认引导盘 自然无法进入 Linux。</p><p>本来就此结束，但是那个引导界面实在是太丑了，还有 Fedora 用不习惯。</p><p>于是开始<strong>第二次</strong>尝试。<br>Linux 版本是 manjaro KDE 版本，windows 还是之前的不变，只是格式化 Fedora 的盘。<br>安装的时候 自己设置分区以及挂载点。<br>windows 的(/dev/sda) efi 分区挂载到 /boot/efi，不格式化， /dev/sdb 上8 G linuxswap，其余全部ext4 挂载点 / 。</p><p>装完后 一切和 Fedora 一致，引导界面漂亮了很多，很现代，还能记住上一次使用的引导选项。</p><p>在 linux 下可以看到 efi 里面有 windows 的引导文件夹。</p><p>有可能在windows下使用 efi 引导修复工具可以将 Linux 引导选项加入到 windows 引导列表里面，这样每个硬盘都能引导双系统(未测试)。</p><p><img src="https://ws1.sinaimg.cn/large/675bda05ly1fy33x044fyj21400u0b2d.jpg" alt="">。</p>]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;双 11 花了110元买了块 mstata 固态硬盘，完成多年的愿望。这里记录一下双硬盘独立安装 windows 和 Linux 系统。&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
      <category term="linux" scheme="https://rachpt.github.io/categories/linux/"/>
    
    
      <category term="linux, windows" scheme="https://rachpt.github.io/tags/linux-windows/"/>
    
  </entry>
  
  <entry>
    <title>change-to-use-archlinux</title>
    <link href="https://rachpt.github.io/2018/12/01/change-to-use-archlinux/"/>
    <id>https://rachpt.github.io/2018/12/01/change-to-use-archlinux/</id>
    <published>2018-12-01T12:59:54.000Z</published>
    <updated>2018-12-01T13:30:09.000Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>因为python版本的原因，从linuxmint 19 换回mint18.3，最后尝试使用基于archlinux的manjaro。这里记录几个刚开始比较头疼的问题。</p></blockquote><a id="more"></a><h1 id="KED"><a href="#KED" class="headerlink" title="KED"></a>KED</h1><p>之前习惯了类windows的cinnamon，也想过直接使用manjaro的cinnamon版本，但是考虑到 mint19 上比较容易出现的xwindow卡死，于是决定尝试使用manjaro官方支持的kde版本，之前体验过一小段时间，当时感觉是初始设置反人类，设置麻烦。<br>经过一两周的使用，现在基本上能把kde配置成方便自己习惯了。</p><ol><li>文件双击打开，</li><li>桌面显示desktop文件夹内容，</li><li>任务栏调成类 windows，</li><li>开机自动启用小键盘，</li><li>安装 tim，kde connect配合安卓手机太棒了！<br>…</li></ol><h1 id="Tinyproxy"><a href="#Tinyproxy" class="headerlink" title="Tinyproxy"></a>Tinyproxy</h1><p>安装好后啥配置对没改，使用 systemctl 启动不了，提示啥 <code>/run/tinyproxy/tinyproxy.pid</code> 无法创建。</p><p>解决办法：<br><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># PidFile: Write the PID of the main tinyproxy thread to this file so it</span></span><br><span class="line"><span class="comment"># can be used for signalling purposes.</span></span><br><span class="line"><span class="comment"># If not specified, no pidfile will be written.</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment">#PidFile "/run/tinyproxy/tinyproxy.pid"</span></span><br></pre></td></tr></table></figure></p><p>取消 <code>/etc/tinyproxy/tinyproxy.conf</code> 如上的注释行。<br><a href="https://github.com/StreisandEffect/streisand/issues/1381" target="_blank" rel="noopener">参考文档</a>。</p><h1 id="vsftpd"><a href="#vsftpd" class="headerlink" title="vsftpd"></a>vsftpd</h1><p>vsftpd 的匿名模式路径一片空白，使用shell的ftp也连接不了。<br>解决办法：<br><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">vim /etc/vsftpd.conf</span><br><span class="line"><span class="comment"># 添加下面一行</span></span><br><span class="line">seccomp_sandbox=NO</span><br></pre></td></tr></table></figure></p><p><a href="https://wiki.archlinux.org/index.php/Very_Secure_FTP_Daemon" target="_blank" rel="noopener">参考文档</a>。</p><p>例外，vsftpd 不支持使用 ln -s 软连接，使用 mount –band /old /new 可解。<br><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 在 /etc/fstab 中添加如下行，以便开机自动bind。</span></span><br><span class="line">/mnt/data/pub                             /srv/ftp/pub       none  <span class="built_in">bind</span>    0 0</span><br></pre></td></tr></table></figure></p><h1 id="swapfie"><a href="#swapfie" class="headerlink" title="swapfie"></a>swapfie</h1><p>使用<code>sudo fallocate -l 20G /swapfile</code> 快速创建大体积swapfile 文件。<br><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">sudo fallocate -l 20G /swapfile</span><br><span class="line"><span class="comment"># 为了安全</span></span><br><span class="line">sudo chown root:root /swapfile</span><br><span class="line"></span><br><span class="line">sudo chmod 0600 /swapfile</span><br><span class="line"></span><br><span class="line">sudo mkswap /swapfile</span><br><span class="line"><span class="comment"># 开</span></span><br><span class="line">sudo swapon /swapfile</span><br><span class="line"><span class="comment"># 关</span></span><br><span class="line">sudo swapoff /swapfile</span><br><span class="line"></span><br><span class="line"><span class="comment"># 添加开机自动挂载</span></span><br><span class="line">vim /etc/fstab</span><br><span class="line"></span><br><span class="line">/swapfile      none       swap    sw 0 0</span><br></pre></td></tr></table></figure></p><p>/etc/fstab 会在启动的时候执行. 若文件有误那么会启动失败！！！</p>]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;因为python版本的原因，从linuxmint 19 换回mint18.3，最后尝试使用基于archlinux的manjaro。这里记录几个刚开始比较头疼的问题。&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
    
      <category term="linux" scheme="https://rachpt.github.io/tags/linux/"/>
    
  </entry>
  
  <entry>
    <title>an-error-in-mpv-player</title>
    <link href="https://rachpt.github.io/2018/10/28/an-error-in-mpv-player/"/>
    <id>https://rachpt.github.io/2018/10/28/an-error-in-mpv-player/</id>
    <published>2018-10-28T08:29:17.000Z</published>
    <updated>2018-10-28T08:37:38.000Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>最近 mpv 突然打不开，终端运行提示 libtalloc 版本有问题。</p></blockquote><a id="more"></a><p>使用终端运行错误提示如下，</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ mpv  </span><br><span class="line">mpv: relocation error: /usr/lib/x86_64-linux-gnu/libldb.so.1: symbol talloc_strdup_append_buffer version TALLOC_2.0.2 not defined <span class="keyword">in</span> file libtalloc.so.2 with link time reference</span><br></pre></td></tr></table></figure><p>百度一番，有类似的问题的解决记录。</p><p><a href="http://blog.chinaunix.net/uid-27057175-id-5747280.html" target="_blank" rel="noopener">文档1</a>，<a href="https://answers.launchpad.net/ubuntu/+question/291448" target="_blank" rel="noopener">文档2</a>.</p><p>经比较，应该是 libtalloc 有问题。</p><p>解决：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get install --reinstall libtevent0 libtalloc2</span><br><span class="line"></span><br><span class="line"><span class="comment"># 可能只要最后的 libtalloc2 即可</span></span><br></pre></td></tr></table></figure><p>小记。</p>]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;最近 mpv 突然打不开，终端运行提示 libtalloc 版本有问题。&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
    
      <category term="linux" scheme="https://rachpt.github.io/tags/linux/"/>
    
  </entry>
  
  <entry>
    <title>change-the-resolution-of-the-console</title>
    <link href="https://rachpt.github.io/2018/09/20/change-the-resolution-of-the-console/"/>
    <id>https://rachpt.github.io/2018/09/20/change-the-resolution-of-the-console/</id>
    <published>2018-09-20T12:52:51.000Z</published>
    <updated>2018-09-26T03:09:02.000Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>周末花了一个下午搞定了 Linux 字符界面分辨率与中文环境。</p></blockquote><a id="more"></a><h1 id="Console"><a href="#Console" class="headerlink" title="Console"></a>Console</h1><p>一般有图形界面的 Linux 发行版通过 <code>Ctrl + Alt + F[1-6]</code> 进入(切换)到字符界面(控制台 字符哑终端) console.<code>C + A + F7</code> 返回 x-window。</p><p>临时切换至字符界面能过在不影响后台计算进程的前提下处理轻量文本任务、查看系统状态等操作。</p><p>但是有两个问题，一是分辨率，二是中文支持。</p><h1 id="分辨率"><a href="#分辨率" class="headerlink" title="分辨率"></a>分辨率</h1><p>由于之前图方便，直接使用的 VGA 接口，字符界面分辨率特别难受，后来查看才得知 1080p 的显示器一直使用的 800x600 分辨率模式，各种模糊、显示不清，甚至让我怀疑 linux 版本的问题。Google 百度来来回回一个下午找到一些修改 vga 模式下分辨率的方法。</p><p>对于 ubuntu / Linux mint，修改 grub 配置文件 <code>/etc/default/grub</code>。</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 添加</span></span><br><span class="line">GRUB_GFXMODE=1600x1200x32</span><br><span class="line">GRUB_GFXPAYLOAD_LINUX=keep</span><br></pre></td></tr></table></figure><p>之前一直坑在这里面，就是自以为 分辨率以及 色深自己根据显示器随便写就是。<br>后面才发现需要在开机选择引导时，按 <code>c</code> 进入 grub 界面，使用 <code>vbeinfo</code> 查看系统支持的分辨率和色深。</p><p>写非法的分辨率以及色深会导致 console 进不去。</p><p>鉴于 vga 模式下的分辨率没有和显示器匹配的。于是不得不改用 DVI接口，渣渣显卡没有 HDMI 接口，否则就不存在这些问题。</p><p>dvi 可以粗略理解为 HDMI 接口的缩水版，dvi 和 HDMI 接口都是数字信号传输的，直接匹配显示器分辨率。</p><p><strong>所以最终的解决办法是 使用 DVI/HDMI 接口代替 VGA 接口</strong></p><h1 id="中文"><a href="#中文" class="headerlink" title="中文"></a>中文</h1><ol><li><p>使用英文作为系统语言，添加中文支持，这样欢迎等信息都是英文。</p></li><li><p>安装 <code>sudo apt install zhcon</code></p></li></ol><p>使用 <code>zhcon --utf8</code> 进入中文环境。</p><h1 id="鼠标"><a href="#鼠标" class="headerlink" title="鼠标"></a>鼠标</h1><p>使用 <code>GPM</code> 实现.<br>安装:</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">sudo apt install gpm</span><br><span class="line"></span><br><span class="line">sudo systemctl <span class="built_in">enable</span> gpm.service</span><br><span class="line"></span><br><span class="line">sudo systemctl start gpm.service</span><br><span class="line"></span><br><span class="line">sudo systemctl status gpm.service</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;周末花了一个下午搞定了 Linux 字符界面分辨率与中文环境。&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
      <category term="linux" scheme="https://rachpt.github.io/categories/linux/"/>
    
    
      <category term="console" scheme="https://rachpt.github.io/tags/console/"/>
    
  </entry>
  
  <entry>
    <title>vim-set-working-directory-to-the-current-file</title>
    <link href="https://rachpt.github.io/2018/08/22/vim-set-working-directory-to-the-current-file/"/>
    <id>https://rachpt.github.io/2018/08/22/vim-set-working-directory-to-the-current-file/</id>
    <published>2018-08-22T01:47:54.000Z</published>
    <updated>2018-08-22T02:12:38.000Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>vim自动进入打开文件所在目录,原谅我无耻地 copy。</p></blockquote><a id="more"></a><p>如果装了插件 NERDTree，使用 <code>:NERDTreeFind</code> 可以扩展到打开文件所在目录。不自动有点麻烦。</p><p>百度了一圈，找到的答案是使用</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&quot;在.vimrc 中加入</span><br><span class="line">execute &quot;cd&quot; expand(&quot;%:h&quot;)</span><br></pre></td></tr></table></figure><p>缺点是如果目录路径中有特殊字符可能报错。比如：<br><img src="https://ws1.sinaimg.cn/large/675bda05ly1fui8tvgh0ej20pp0avdhk.jpg" alt=""></p><p>使用 Google 查找关键词 <code>vimrc execute cd expand</code>，找到 vim 官方解决办法。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">set autochdir</span><br><span class="line"></span><br><span class="line">autocmd BufEnter * silent! lcd %:p:h</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">autocmd BufEnter * if expand(&quot;%:p:h&quot;) !~ &apos;^/tmp&apos; | silent! lcd %:p:h | endif</span><br></pre></td></tr></table></figure><p>第一种，可能和某些插件有冲突，本人测试刚才有特殊字符的文件正常。<br>后面两个兼容性更好，最后一个加了判断，<code>/tmp</code> 中的文件不切换到改路径去。此法最好。</p><p>参考<a href="https://www.douban.com/note/543140992/" target="_blank" rel="noopener">文档1</a>，<a href="http://vim.wikia.com/wiki/Set_working_directory_to_the_current_file" target="_blank" rel="noopener">文档2-wiki</a>.</p>]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;vim自动进入打开文件所在目录,原谅我无耻地 copy。&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
      <category term="linux" scheme="https://rachpt.github.io/categories/linux/"/>
    
    
      <category term="vim" scheme="https://rachpt.github.io/tags/vim/"/>
    
  </entry>
  
  <entry>
    <title>service-systemctl-and-daemon</title>
    <link href="https://rachpt.github.io/2018/07/28/service-systemctl-and-daemon/"/>
    <id>https://rachpt.github.io/2018/07/28/service-systemctl-and-daemon/</id>
    <published>2018-07-27T16:43:38.000Z</published>
    <updated>2019-03-20T06:12:02.287Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>前面说到了使用原码编译 <code>transmission-daemon</code> <code>qbittorrent-nox</code> <code>nginx</code> ，但是需要自己配置启动脚本。</p></blockquote><a id="more"></a><h1 id="transmission-daemon"><a href="#transmission-daemon" class="headerlink" title="transmission-daemon"></a>transmission-daemon</h1><p>之前使用 apt 安装的 tr-d ，虽然很容易可以使用 <code>sudo systemctl enable|start|stop|status transmission-daemon</code>，但是不得不忍受一个很长很傻的运行用户名，而且修改起来特别麻烦，文件权限也是乱的很。</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br></pre></td><td class="code"><pre><span class="line">sudo vim /etc/init.d/transmission-daemon</span><br><span class="line"></span><br><span class="line"><span class="comment"># 添加下面的脚本，并给执行权限</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#!/bin/sh -e</span></span><br><span class="line"></span><br><span class="line"><span class="comment">### BEGIN INIT INFO</span></span><br><span class="line"><span class="comment"># Provides:          transmission-daemon</span></span><br><span class="line"><span class="comment"># Required-Start:    $local_fs $remote_fs $network</span></span><br><span class="line"><span class="comment"># Required-Stop:     $local_fs $remote_fs $network</span></span><br><span class="line"><span class="comment"># Default-Start:     2 3 4 5</span></span><br><span class="line"><span class="comment"># Default-Stop:      0 1 6</span></span><br><span class="line"><span class="comment"># Short-Description: Start or stop the transmission-daemon.</span></span><br><span class="line"><span class="comment"># Description:       Enable service provided by transmission-daemon.</span></span><br><span class="line"><span class="comment">### END INIT INFO</span></span><br><span class="line"></span><br><span class="line">NAME=transmission-daemon</span><br><span class="line">DAEMON=/usr/bin/<span class="variable">$NAME</span></span><br><span class="line">USER=rachpt</span><br><span class="line">STOP_TIMEOUT=30</span><br><span class="line"></span><br><span class="line"><span class="built_in">export</span> PATH=<span class="string">"<span class="variable">$&#123;PATH:+$PATH:&#125;</span>/sbin"</span></span><br><span class="line"></span><br><span class="line">[ -x <span class="variable">$DAEMON</span> ] || <span class="built_in">exit</span> 0</span><br><span class="line"></span><br><span class="line">[ -e /etc/default/<span class="variable">$NAME</span> ] &amp;&amp; . /etc/default/<span class="variable">$NAME</span></span><br><span class="line"></span><br><span class="line">. /lib/lsb/init-functions</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">start_daemon</span></span> () &#123;</span><br><span class="line">    <span class="keyword">if</span> [ <span class="variable">$ENABLE_DAEMON</span> != 1 ]; <span class="keyword">then</span></span><br><span class="line">        log_progress_msg <span class="string">"(disabled)"</span></span><br><span class="line">    log_end_msg 255 || <span class="literal">true</span></span><br><span class="line">    <span class="keyword">else</span>    </span><br><span class="line">        start-stop-daemon --start \</span><br><span class="line">        --chuid <span class="variable">$USER</span> \</span><br><span class="line"><span class="variable">$START_STOP_OPTIONS</span> \</span><br><span class="line">        --<span class="built_in">exec</span> <span class="variable">$DAEMON</span> -- <span class="variable">$OPTIONS</span> || log_end_msg $?</span><br><span class="line">log_end_msg 0</span><br><span class="line">    <span class="keyword">fi</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">case</span> <span class="string">"<span class="variable">$1</span>"</span> <span class="keyword">in</span></span><br><span class="line">    start)</span><br><span class="line">        log_daemon_msg <span class="string">"Starting bittorrent daemon"</span> <span class="string">"<span class="variable">$NAME</span>"</span></span><br><span class="line">        start_daemon</span><br><span class="line">        ;;</span><br><span class="line">    stop)</span><br><span class="line">        log_daemon_msg <span class="string">"Stopping bittorrent daemon"</span> <span class="string">"<span class="variable">$NAME</span>"</span></span><br><span class="line">        start-stop-daemon --stop --quiet \</span><br><span class="line">            --<span class="built_in">exec</span> <span class="variable">$DAEMON</span> --retry <span class="variable">$STOP_TIMEOUT</span> \</span><br><span class="line">            --oknodo || log_end_msg $?</span><br><span class="line">        log_end_msg 0</span><br><span class="line">        ;;</span><br><span class="line">    reload)</span><br><span class="line">        log_daemon_msg <span class="string">"Reloading bittorrent daemon"</span> <span class="string">"<span class="variable">$NAME</span>"</span></span><br><span class="line">        start-stop-daemon --stop --quiet \</span><br><span class="line">            --<span class="built_in">exec</span> <span class="variable">$DAEMON</span> \</span><br><span class="line">            --oknodo --signal 1 || log_end_msg $?</span><br><span class="line">        log_end_msg 0</span><br><span class="line">        ;;</span><br><span class="line">    restart|force-reload)</span><br><span class="line">        log_daemon_msg <span class="string">"Restarting bittorrent daemon"</span> <span class="string">"<span class="variable">$NAME</span>"</span></span><br><span class="line">        start-stop-daemon --stop --quiet \</span><br><span class="line">            --<span class="built_in">exec</span> <span class="variable">$DAEMON</span> --retry <span class="variable">$STOP_TIMEOUT</span> \</span><br><span class="line">            --oknodo || log_end_msg $?</span><br><span class="line">        start_daemon</span><br><span class="line">        ;;</span><br><span class="line">    status)</span><br><span class="line">        status_of_proc <span class="string">"<span class="variable">$DAEMON</span>"</span> <span class="string">"<span class="variable">$NAME</span>"</span> &amp;&amp; <span class="built_in">exit</span> 0 || <span class="built_in">exit</span> $?</span><br><span class="line">        ;;</span><br><span class="line">    *)</span><br><span class="line">        log_action_msg <span class="string">"Usage: /etc/init.d/<span class="variable">$NAME</span> &#123;start|stop|reload|force-reload|restart|status&#125;"</span> || <span class="literal">true</span></span><br><span class="line">        <span class="built_in">exit</span> 2</span><br><span class="line">        ;;</span><br><span class="line"><span class="keyword">esac</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">exit</span> 0</span><br></pre></td></tr></table></figure><p>文件的开头 ### 部分为LSB tags，格式比较固定，可以参考其他的修改，如果没有会有如下类似报错：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">ssh.service is not a native service, redirecting to systemd-sysv-install</span><br><span class="line">Executing /lib/systemd/systemd-sysv-install <span class="built_in">enable</span> ssh</span><br><span class="line">insserv: warning: script <span class="string">'ssh'</span> missing LSB tags and overrides</span><br><span class="line">update-rc.d: error: ssh Default-Start contains no runlevels, aborting.</span><br></pre></td></tr></table></figure><p>[参考文档tps://my.oschina.net/apis/blog/1647729?p=1)。</p><p>使用命令：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">sudo update-rc.d transmission-daemon defaults</span><br></pre></td></tr></table></figure><p>更新 system 脚本。</p><p>至此不出意外就可以使用</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo service transmission-daemon stop|start|status</span><br></pre></td></tr></table></figure><h1 id="开机启动"><a href="#开机启动" class="headerlink" title="开机启动"></a>开机启动</h1><p>前面的 service 可以一系统服务的方式启动 daemon，而且可以指定运行的用户名，但会不能开机自启动。</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> /etc/systmd/system</span><br><span class="line"></span><br><span class="line">vim transmission-daemion.service</span><br><span class="line"></span><br><span class="line"><span class="comment"># 填入</span></span><br><span class="line"></span><br><span class="line">[Unit]</span><br><span class="line">Description=Transmission BitTorrent Daemon</span><br><span class="line">After=network.target</span><br><span class="line"></span><br><span class="line">[Service]</span><br><span class="line">User=rachpt</span><br><span class="line">Type=simple</span><br><span class="line">ExecStart=/usr/bin/transmission-daemon -f --<span class="built_in">log</span>-error --logfile /var/<span class="built_in">log</span>/transmission-daemon.log</span><br><span class="line">ExecReload=/bin/<span class="built_in">kill</span> -s HUP <span class="variable">$MAINPID</span></span><br><span class="line"></span><br><span class="line">[Install]</span><br><span class="line">WantedBy=multi-user.target</span><br></pre></td></tr></table></figure><p>在这里卡了半天，无法成功，<code>-f</code> 好像很重要，删除后无法运行，无法设置开机运行。</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">sudo systemctl daemon-reload</span><br><span class="line"></span><br><span class="line">sudo systemctl <span class="built_in">enable</span> transmission-daemon</span><br></pre></td></tr></table></figure><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 查考所有服务</span></span><br><span class="line">sudo systemctl list-unit-files</span><br></pre></td></tr></table></figure><p><strong>记得备份所有 <code>transmission-daemon</code> 目录下的 resume 和 torrent 等文件目录。</strong> 血的教训。</p><h1 id="nginx"><a href="#nginx" class="headerlink" title="nginx"></a>nginx</h1><p>service 脚本参考 <a href="http://rachpt.github.io/2018/07/25/compile-nginx-1-14/">此文</a> 。</p><p>开机启动</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 直接复制官方的</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">vim /etc/systemd/system/nginx.service</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># Stop dance for nginx</span></span><br><span class="line"><span class="comment"># =======================</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># ExecStop sends SIGSTOP (graceful stop) to the nginx process.</span></span><br><span class="line"><span class="comment"># If, after 5s (--retry QUIT/5) nginx is still running, systemd takes control</span></span><br><span class="line"><span class="comment"># and sends SIGTERM (fast shutdown) to the main process.</span></span><br><span class="line"><span class="comment"># After another 5s (TimeoutStopSec=5), and if nginx is alive, systemd sends</span></span><br><span class="line"><span class="comment"># SIGKILL to all the remaining processes in the process group (KillMode=mixed).</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># nginx signals reference doc:</span></span><br><span class="line"><span class="comment"># http://nginx.org/en/docs/control.html</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line">[Unit]</span><br><span class="line">Description=A high performance web server and a reverse proxy server</span><br><span class="line">Documentation=man:nginx(8)</span><br><span class="line">After=network.target</span><br><span class="line"></span><br><span class="line">[Service]</span><br><span class="line">Type=forking</span><br><span class="line">PIDFile=/run/nginx.pid</span><br><span class="line">ExecStartPre=/usr/sbin/nginx -t -q -g <span class="string">'daemon on; master_process on;'</span></span><br><span class="line">ExecStart=/usr/sbin/nginx -g <span class="string">'daemon on; master_process on;'</span></span><br><span class="line">ExecReload=/usr/sbin/nginx -g <span class="string">'daemon on; master_process on;'</span> -s reload</span><br><span class="line">ExecStop=-/sbin/start-stop-daemon --quiet --stop --retry QUIT/5 --pidfile /run/nginx.pid</span><br><span class="line">TimeoutStopSec=5</span><br><span class="line">KillMode=mixed</span><br><span class="line"></span><br><span class="line">[Install]</span><br><span class="line">WantedBy=multi-user.target</span><br></pre></td></tr></table></figure><p>注意路径，其他和 transmission-daemon 一样。</p><h1 id="qbittorrent"><a href="#qbittorrent" class="headerlink" title="qbittorrent"></a>qbittorrent</h1><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">vim /etc/systemd/system/qbittorrent.service</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">[Unit]</span><br><span class="line">Description=qBittorrent Daemon Service</span><br><span class="line">After=network.target</span><br><span class="line"></span><br><span class="line">[Service]</span><br><span class="line">User=rachpt</span><br><span class="line">ExecStart=/usr/bin/qbittorrent-nox</span><br><span class="line">ExecStop=/usr/bin/killall -w qbittorrent-nox</span><br><span class="line"></span><br><span class="line">[Install]</span><br><span class="line">WantedBy=multi-user.target</span><br></pre></td></tr></table></figure><p>好像不用 <code>init.d</code>  里面运行脚本。</p><h1 id="flexget"><a href="#flexget" class="headerlink" title="flexget"></a>flexget</h1><p>这东西也可以 开机自动已 daemon 运行。</p><p><a href="https://flexget.com/InstallWizard/Linux/AutoStart" target="_blank" rel="noopener">参考文档</a></p><p>在此 copy 过来。</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 新建一个配置文件</span></span><br><span class="line"></span><br><span class="line">sudo vim /etc/default/flexget</span><br><span class="line"></span><br><span class="line"><span class="comment"># Configuration for /etc/init.d/flexget</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># User to run flexget as.</span></span><br><span class="line"><span class="comment"># Daemon will not start if left empty.</span></span><br><span class="line">FGUSER=<span class="string">"rachpt"</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Full path to the flexget config.yml file to use.</span></span><br><span class="line"><span class="comment"># Defaults to FGUSER $HOME/.flexget/config.yml</span></span><br><span class="line">CONFIG=<span class="string">"/home/rachpt/.config/flexget/config.yml"</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Path to the directory where flexget should log. Do not add trailing slash.</span></span><br><span class="line"><span class="comment"># Defaults to the FGUSER $HOME/.flexget directory</span></span><br><span class="line">LOG=<span class="string">"/home/rachpt/.config/flexget"</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Log verbosity </span></span><br><span class="line"><span class="comment"># Available options : none critical error warning info verbose debug trace</span></span><br><span class="line"><span class="comment"># Defaults to info</span></span><br><span class="line">LEVEL=<span class="string">"info"</span></span><br></pre></td></tr></table></figure><p>建运行脚本 <code>/etc/init.d/flexget</code></p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"></span><br><span class="line"><span class="comment">### BEGIN INIT INFO</span></span><br><span class="line"><span class="comment"># Provides:          flexget</span></span><br><span class="line"><span class="comment"># Required-Start:    $network $remote_fs</span></span><br><span class="line"><span class="comment"># Required-Stop:     $network $remote_fs</span></span><br><span class="line"><span class="comment"># Should-Start:      </span></span><br><span class="line"><span class="comment"># Should-Stop:       </span></span><br><span class="line"><span class="comment"># Default-Start:     2 3 4 5</span></span><br><span class="line"><span class="comment"># Default-Stop:      0 1 6</span></span><br><span class="line"><span class="comment"># Short-Description: Flexget</span></span><br><span class="line"><span class="comment"># Description:       FlexGet is a multipurpose automation tool </span></span><br><span class="line"><span class="comment">#                    for content like torrents, nzbs, podcasts,</span></span><br><span class="line"><span class="comment">#                    comics, series, movies, etc.</span></span><br><span class="line"><span class="comment">### END INIT INFO</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Author: Antoine Joubert, 19/01/2014</span></span><br><span class="line"></span><br><span class="line">NAME=<span class="string">"flexget"</span></span><br><span class="line">DAEMON=<span class="string">"/usr/local/bin/flexget"</span></span><br><span class="line">SETTINGS=<span class="string">"/etc/default/<span class="variable">$NAME</span>"</span></span><br><span class="line"></span><br><span class="line">DESC=<span class="string">"Flexget"</span></span><br><span class="line">PIDFILE=<span class="string">"/var/run/<span class="variable">$NAME</span>.pid"</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">set</span> -e</span><br><span class="line"></span><br><span class="line">. /lib/lsb/init-functions</span><br><span class="line"></span><br><span class="line"><span class="built_in">unset</span> FGUSER CONFIG LOG LEVEL</span><br><span class="line"></span><br><span class="line"><span class="comment"># Exit if flexget not installed</span></span><br><span class="line"><span class="keyword">if</span> [ ! -x <span class="string">"<span class="variable">$DAEMON</span>"</span> ]; <span class="keyword">then</span></span><br><span class="line">        log_action_msg <span class="string">"<span class="variable">$DESC</span>: Could not find flexget executable. Exiting."</span></span><br><span class="line">        <span class="built_in">exit</span> 2</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Read configuration variables</span></span><br><span class="line"><span class="keyword">if</span> [ -r /etc/default/<span class="variable">$NAME</span> ]; <span class="keyword">then</span></span><br><span class="line">        . /etc/default/<span class="variable">$NAME</span></span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">        log_action_msg <span class="string">"<span class="variable">$DESC</span>: /etc/default/<span class="variable">$NAME</span> not found. Exiting."</span></span><br><span class="line">        <span class="built_in">exit</span> 2</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Exit if FGUSER has not been set in /etc/default/flexget</span></span><br><span class="line"><span class="keyword">if</span> [ -z <span class="variable">$FGUSER</span> ]; <span class="keyword">then</span></span><br><span class="line">        log_action_msg <span class="string">"<span class="variable">$DESC</span>: FGUSER not set in /etc/default/<span class="variable">$NAME</span>. Exiting."</span></span><br><span class="line">        <span class="built_in">exit</span> 2</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Function to verify if flexget is already running</span></span><br><span class="line"><span class="function"><span class="title">run_check</span></span>() &#123;</span><br><span class="line">        <span class="keyword">if</span> [ -e <span class="variable">$PIDFILE</span> ]; <span class="keyword">then</span></span><br><span class="line">               status_of_proc -p <span class="variable">$PIDFILE</span> <span class="variable">$DAEMON</span> <span class="variable">$NAME</span> &gt; /dev/null &amp;&amp; RETVAL=0 || RETVAL=<span class="string">"$?"</span></span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">                RETVAL=<span class="string">"2"</span></span><br><span class="line">        <span class="keyword">fi</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">end_log</span></span>() &#123;</span><br><span class="line">        <span class="keyword">if</span> [ <span class="variable">$RETVAL</span> -eq 0 ]; <span class="keyword">then</span></span><br><span class="line">                log_end_msg 0</span><br><span class="line">                <span class="built_in">return</span> 0</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">                log_end_msg 1</span><br><span class="line">                <span class="built_in">exit</span> 1</span><br><span class="line">        <span class="keyword">fi</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"># Function to define config file, log file and log level</span></span><br><span class="line"><span class="function"><span class="title">conf_check</span></span>() &#123;</span><br><span class="line">        <span class="keyword">if</span> [ -z <span class="string">"<span class="variable">$CONFIG</span>"</span> ]; <span class="keyword">then</span></span><br><span class="line">                OPTIONS=<span class="string">"<span class="variable">$OPTIONS</span>"</span></span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">                OPTIONS=<span class="string">"-c <span class="variable">$CONFIG</span>"</span></span><br><span class="line">        <span class="keyword">fi</span></span><br><span class="line">        <span class="keyword">if</span> [ -z <span class="string">"<span class="variable">$LOG</span>"</span> ]; <span class="keyword">then</span></span><br><span class="line">                OPTIONS=<span class="string">"<span class="variable">$OPTIONS</span>"</span></span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">                OPTIONS=<span class="string">"<span class="variable">$OPTIONS</span> -l <span class="variable">$LOG</span>/flexget.log"</span></span><br><span class="line">                <span class="keyword">if</span> [ ! -d <span class="string">"<span class="variable">$LOG</span>"</span> ]; <span class="keyword">then</span> </span><br><span class="line">                        mkdir -p -m 750 <span class="variable">$LOG</span></span><br><span class="line">                        chown <span class="variable">$FGUSER</span> <span class="variable">$LOG</span></span><br><span class="line">                <span class="keyword">fi</span></span><br><span class="line">        <span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> [ -z <span class="variable">$LEVEL</span> ]; <span class="keyword">then</span></span><br><span class="line">                OPTIONS=<span class="string">"<span class="variable">$OPTIONS</span>"</span></span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">                OPTIONS=<span class="string">"<span class="variable">$OPTIONS</span> -L <span class="variable">$LEVEL</span>"</span></span><br><span class="line">        <span class="keyword">fi</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">start_flexget</span></span>() &#123;</span><br><span class="line">        run_check</span><br><span class="line">        <span class="keyword">if</span> [ <span class="variable">$RETVAL</span> = 0 ]; <span class="keyword">then</span></span><br><span class="line">                log_action_msg <span class="string">"<span class="variable">$DESC</span>: Already running with PID <span class="variable">$(cat $PIDFILE)</span>. Aborting."</span></span><br><span class="line">                <span class="built_in">exit</span> 2</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">                conf_check</span><br><span class="line">                log_daemon_msg <span class="string">"<span class="variable">$DESC</span>: Starting the daemon."</span></span><br><span class="line">                start-stop-daemon --start --background --quiet --pidfile <span class="variable">$PIDFILE</span> --make-pidfile --chuid <span class="variable">$FGUSER</span> \</span><br><span class="line">                --user <span class="variable">$FGUSER</span> --<span class="built_in">exec</span> <span class="variable">$DAEMON</span> -- <span class="variable">$OPTIONS</span> daemon start</span><br><span class="line">                RETVAL=$?</span><br><span class="line">                end_log</span><br><span class="line">        <span class="keyword">fi</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">stop_flexget</span></span>() &#123;</span><br><span class="line">        run_check</span><br><span class="line">        <span class="keyword">if</span> [ <span class="variable">$RETVAL</span> = 0 ]; <span class="keyword">then</span></span><br><span class="line">                log_daemon_msg <span class="string">"<span class="variable">$DESC</span>: Stopping the daemon."</span></span><br><span class="line">                start-stop-daemon --stop --quiet --chuid <span class="string">"<span class="variable">$FGUSER</span>"</span> --pidfile <span class="string">"<span class="variable">$PIDFILE</span>"</span> --retry 30</span><br><span class="line">                RETVAL=$?</span><br><span class="line">                [ -e <span class="string">"<span class="variable">$PIDFILE</span>"</span> ] &amp;&amp; rm -f <span class="string">"<span class="variable">$PIDFILE</span>"</span></span><br><span class="line">                end_log</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">                log_action_msg <span class="string">"<span class="variable">$DESC</span>: Not currently running. Aborting."</span></span><br><span class="line">                <span class="built_in">exit</span> 2</span><br><span class="line">        <span class="keyword">fi</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">status_flexget</span></span>() &#123;</span><br><span class="line">        run_check</span><br><span class="line">        <span class="keyword">if</span> [ <span class="variable">$RETVAL</span> = 0 ]; <span class="keyword">then</span></span><br><span class="line">                log_action_msg <span class="string">"<span class="variable">$DESC</span>: Currently running with PID <span class="variable">$(cat $PIDFILE)</span>."</span></span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">                log_action_msg <span class="string">"<span class="variable">$DESC</span>: Not currently running."</span></span><br><span class="line">        <span class="keyword">fi</span></span><br><span class="line">        <span class="built_in">exit</span> <span class="variable">$RETVAL</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">case</span> <span class="string">"<span class="variable">$1</span>"</span> <span class="keyword">in</span></span><br><span class="line">        start)</span><br><span class="line">                start_flexget</span><br><span class="line">        ;;</span><br><span class="line">        stop)</span><br><span class="line">                stop_flexget</span><br><span class="line">        ;;</span><br><span class="line">        restart)</span><br><span class="line">                stop_flexget &amp;&amp; sleep 2 &amp;&amp; start_flexget</span><br><span class="line">        ;;</span><br><span class="line">        status)</span><br><span class="line">                status_flexget</span><br><span class="line">        ;;</span><br><span class="line">        *)</span><br><span class="line">                <span class="built_in">echo</span> <span class="string">"Usage: <span class="variable">$0</span> &#123;start|stop|restart|status&#125;"</span></span><br><span class="line"><span class="keyword">esac</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">exit</span> 0</span><br></pre></td></tr></table></figure><p>记得加执行权限。</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo update-rc.d flexget defaults</span><br></pre></td></tr></table></figure><p>建立 <code>flexget.service</code> 文件。</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">sudo vim /etc/systemd/system/flexget.service </span><br><span class="line"></span><br><span class="line">[Unit]</span><br><span class="line">Description=Flexget Daemon</span><br><span class="line">After=network.target</span><br><span class="line"></span><br><span class="line">[Service]</span><br><span class="line">User=rachpt</span><br><span class="line">Type=simple</span><br><span class="line">WorkingDirectory=/home/rachpt/.config/flexget</span><br><span class="line">ExecStart=/usr/<span class="built_in">local</span>/bin/flexget daemon start</span><br><span class="line">ExecStop=/usr/<span class="built_in">local</span>/bin/flexget daemon stop</span><br><span class="line">ExecReload=/usr/<span class="built_in">local</span>/bin/flexget daemon reload</span><br><span class="line"></span><br><span class="line">[Install]</span><br><span class="line">WantedBy=multi-user.target</span><br></pre></td></tr></table></figure><p>其他和前面一样，不再重复。</p><p>使用 <code>pidtree</code> 可以看到所有进程的父进程。</p>]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;前面说到了使用原码编译 &lt;code&gt;transmission-daemon&lt;/code&gt; &lt;code&gt;qbittorrent-nox&lt;/code&gt; &lt;code&gt;nginx&lt;/code&gt; ，但是需要自己配置启动脚本。&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
      <category term="linux" scheme="https://rachpt.github.io/categories/linux/"/>
    
    
      <category term="daemon" scheme="https://rachpt.github.io/tags/daemon/"/>
    
  </entry>
  
  <entry>
    <title>use-expect-to-ssh-and-solve-a-problem</title>
    <link href="https://rachpt.github.io/2018/07/26/use-expect-to-ssh-and-solve-a-problem/"/>
    <id>https://rachpt.github.io/2018/07/26/use-expect-to-ssh-and-solve-a-problem/</id>
    <published>2018-07-26T08:24:18.000Z</published>
    <updated>2018-07-26T09:26:57.000Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>使用 expect 实现一个简单命来使用 ssh 连上远程主机，并解决一个恼火的问题。</p></blockquote><a id="more"></a><p>正常的远程连接主机的方法是<code>ssh user@ip -p port</code>，根据提示输入密码，很是繁琐。<br>expect 能过实现交互式的脚本命令。</p><h1 id="脚本"><a href="#脚本" class="headerlink" title="脚本"></a>脚本</h1><p>expect 一般需要自己额外安装，ubuntu为例：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get install expect</span><br><span class="line"></span><br><span class="line"><span class="comment"># 创建脚本</span></span><br><span class="line">vim auto_ssh.sh</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#!/usr/bin/expect -f</span></span><br><span class="line"><span class="built_in">set</span> timeout 10 <span class="comment"># 脚本超时时间</span></span><br><span class="line">spawn ssh rachpt@115.156.156.156</span><br><span class="line">expect <span class="string">"rachpt@115.156.156.156's password: "</span></span><br><span class="line">send <span class="string">"mypassword\r"</span> <span class="comment"># 密码</span></span><br><span class="line"></span><br><span class="line">expect <span class="string">"rachpt@pc:*"</span> <span class="comment"># 远程主机名 pc</span></span><br><span class="line"></span><br><span class="line">send <span class="string">"clear\r"</span> <span class="comment"># 清屏</span></span><br><span class="line"></span><br><span class="line">interact <span class="comment"># 退出脚本，控制交给用户</span></span><br></pre></td></tr></table></figure><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">vim ~/.bashrc</span><br><span class="line"></span><br><span class="line"><span class="comment"># 添加一个别名</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">alias</span> as=<span class="string">'/path/auto_ssh.sh'</span></span><br></pre></td></tr></table></figure><p>之前一直用这个脚本，开始时很是爽，只需 as 一下，就自动连接。</p><p>但是我不得不忍受下面的情形：<br><img src="https://ws1.sinaimg.cn/large/675bda05gy1ftncuwrxyaj20md0katbx.jpg" alt=""></p><p>连上后如果改变 terminal 大小，远程的大小不会随着变。</p><p>后来发现不是我一个人遇到这问题。</p><h1 id="解决"><a href="#解决" class="headerlink" title="解决"></a>解决</h1><p>使用下面的脚本代替：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/expect -f</span></span><br><span class="line"><span class="comment">#trap sigwinch spawned</span></span><br><span class="line"><span class="built_in">trap</span> &#123;</span><br><span class="line"> <span class="built_in">set</span> rows [stty rows]</span><br><span class="line"> <span class="built_in">set</span> cols [stty columns]</span><br><span class="line"> stty rows <span class="variable">$rows</span> columns <span class="variable">$cols</span> &lt; <span class="variable">$spawn_out</span>(slave,name)</span><br><span class="line">&#125; WINCH</span><br><span class="line"></span><br><span class="line"><span class="built_in">set</span> timeout 10</span><br><span class="line">spawn ssh rachpt@115.156.156.156</span><br><span class="line">expect <span class="string">"rachpt@115.156.156.156's password: "</span></span><br><span class="line">send <span class="string">"mypassword\r"</span></span><br><span class="line"></span><br><span class="line">expect <span class="string">"rachpt@pc:*"</span></span><br><span class="line"></span><br><span class="line">send <span class="string">"clear\r"</span></span><br><span class="line"></span><br><span class="line">interact</span><br></pre></td></tr></table></figure><p>原因是没有传输窗口改变信号，加一个 trap在前面即可。</p><p><a href="https://blog.csdn.net/ownfire/article/details/8364039" target="_blank" rel="noopener">参考文档1</a>，<a href="https://blog.csdn.net/achejq/article/details/77882741" target="_blank" rel="noopener">文档2</a>，<a href="https://ubuntuforums.org/showthread.php?t=865420" target="_blank" rel="noopener">文档3</a>。</p>]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;使用 expect 实现一个简单命来使用 ssh 连上远程主机，并解决一个恼火的问题。&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
      <category term="linux" scheme="https://rachpt.github.io/categories/linux/"/>
    
    
      <category term="ssh" scheme="https://rachpt.github.io/tags/ssh/"/>
    
      <category term="expect" scheme="https://rachpt.github.io/tags/expect/"/>
    
  </entry>
  
  <entry>
    <title>compile-nginx-1.14</title>
    <link href="https://rachpt.github.io/2018/07/25/compile-nginx-1-14/"/>
    <id>https://rachpt.github.io/2018/07/25/compile-nginx-1-14/</id>
    <published>2018-07-25T14:58:31.000Z</published>
    <updated>2018-07-27T11:28:56.000Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>魔改编译安装 nginx。</p></blockquote><a id="more"></a><h1 id="要做啥"><a href="#要做啥" class="headerlink" title="要做啥"></a>要做啥</h1><p>如图所示：<br><img src="https://ws1.sinaimg.cn/large/675bda05ly1ftmi6tdbu4j20bu06n746.jpg" alt=""></p><p>希望将 nginx 默认的 错误页面自定义加入一个 返回的超链接。</p><h1 id="改源码"><a href="#改源码" class="headerlink" title="改源码"></a>改源码</h1><ol><li><p>下载源码，<br><a href="http://nginx.org/en/download.html" target="_blank" rel="noopener">http://nginx.org/en/download.html</a><br>选择 Stable version，    nginx-1.14.0。</p></li><li><p>修改源码：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line">vim nginx-1.14.0/src/http/ngx_http_special_response.c</span><br><span class="line"></span><br><span class="line"><span class="comment"># 大约 109 行开始</span></span><br><span class="line"></span><br><span class="line">static char ngx_http_error_401_page[] =</span><br><span class="line"><span class="string">"&lt;html&gt;"</span> CRLF</span><br><span class="line"><span class="string">"&lt;head&gt;&lt;meta http-equiv=\"Content-Type\" content=\"text/html; charset=utf-8\"&gt;&lt;title&gt;401 Authorization Required&lt;/title&gt;&lt;/head&gt;"</span> CRLF</span><br><span class="line"><span class="string">"&lt;body bgcolor=\"white\"&gt;"</span> CRLF</span><br><span class="line"><span class="string">"&lt;center&gt;&lt;h1&gt;401 Authorization Required&lt;/h1&gt;&lt;/center&gt;"</span> CRLF</span><br><span class="line"><span class="string">"&lt;center&gt;&lt;h2&gt;&lt;a href=\"/index.html\"&gt;返回首页&lt;/a&gt;&lt;/h2&gt;&lt;/center&gt;"</span> CRLF</span><br><span class="line">;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">static char ngx_http_error_402_page[] =</span><br><span class="line"><span class="string">"&lt;html&gt;"</span> CRLF</span><br><span class="line"><span class="string">"&lt;head&gt;&lt;meta http-equiv=\"Content-Type\" content=\"text/html; charset=utf-8\"&gt;&lt;title&gt;402 Payment Required&lt;/title&gt;&lt;/head&gt;"</span> CRLF</span><br><span class="line"><span class="string">"&lt;body bgcolor=\"white\"&gt;"</span> CRLF</span><br><span class="line"><span class="string">"&lt;center&gt;&lt;h1&gt;402 Payment Required&lt;/h1&gt;&lt;/center&gt;"</span> CRLF</span><br><span class="line"><span class="string">"&lt;center&gt;&lt;h2&gt;&lt;a href=\"/index.html\"&gt;返回首页&lt;/a&gt;&lt;/h2&gt;&lt;/center&gt;"</span> CRLF</span><br><span class="line">;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">static char ngx_http_error_403_page[] =</span><br><span class="line"><span class="string">"&lt;html&gt;"</span> CRLF</span><br><span class="line"><span class="string">"&lt;head&gt;&lt;meta http-equiv=\"Content-Type\" content=\"text/html; charset=utf-8\"&gt;&lt;title&gt;403 Forbidden&lt;/title&gt;&lt;/head&gt;"</span> CRLF</span><br><span class="line"><span class="string">"&lt;body bgcolor=\"white\"&gt;"</span> CRLF</span><br><span class="line"><span class="string">"&lt;center&gt;&lt;h1&gt;403 Forbidden&lt;/h1&gt;&lt;/center&gt;"</span> CRLF</span><br><span class="line"><span class="string">"&lt;center&gt;&lt;h2&gt;&lt;a href=\"/index.html\"&gt;返回首页&lt;/a&gt;&lt;/h2&gt;&lt;/center&gt;"</span> CRLF</span><br><span class="line">.</span><br><span class="line">.</span><br><span class="line">.</span><br></pre></td></tr></table></figure></li></ol><p>按自己需求修改，其中，包含中文不要指定 utf-8 编码。</p><h1 id="编译"><a href="#编译" class="headerlink" title="编译"></a>编译</h1><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> nginx-1.14.0</span><br><span class="line"></span><br><span class="line">./configure --with-select_module --with-poll_module \</span><br><span class="line">--with-threads --with-file-aio --with-http_ssl_module \</span><br><span class="line">--with-http_v2_module --with-http_realip_module \</span><br><span class="line">--with-http_addition_module --with-http_xslt_module \</span><br><span class="line">--with-http_xslt_module --with-http_image_filter_module \</span><br><span class="line">--with-http_image_filter_module --with-http_geoip_module \</span><br><span class="line">--with-http_geoip_module --with-http_sub_module \</span><br><span class="line">--with-http_dav_module --with-http_flv_module \</span><br><span class="line">--with-http_mp4_module --with-http_gunzip_module \</span><br><span class="line">--with-http_gzip_static_module --with-http_auth_request_module \</span><br><span class="line">--with-http_random_index_module --with-http_secure_link_module \</span><br><span class="line">--with-http_degradation_module --with-http_slice_module \</span><br><span class="line">--with-http_stub_status_module --with-http_perl_module \</span><br><span class="line">--with-mail --with-mail_ssl_module --with-stream --with-stream \</span><br><span class="line">--with-stream_ssl_module --with-google_perftools_module \</span><br><span class="line">--with-cpp_test_module --with-pcre --with-libatomic \</span><br><span class="line">--prefix=/usr/<span class="built_in">local</span>/nginx --sbin-path=/usr/sbin/nginx \</span><br><span class="line">--conf-path=/etc/nginx/nginx.conf --error-log-path=/var/<span class="built_in">log</span>/nginx/error.log \</span><br><span class="line">--http-log-path=/var/<span class="built_in">log</span>/nginx/access.log \</span><br><span class="line">--pid-path=/var/run/nginx/nginx.pid --lock-path=/var/lock/nginx.lock</span><br><span class="line"></span><br><span class="line">make &amp;&amp; sudo make install</span><br></pre></td></tr></table></figure><p>各个模块具体用处，请参看以下文章。</p><p><a href="https://www.cnblogs.com/dtiove/p/5924385.html" target="_blank" rel="noopener">参考文档1</a>，<a href="https://blog.csdn.net/likelxl/article/details/789167050" target="_blank" rel="noopener">参考文档2</a>。</p><h1 id="添加-service"><a href="#添加-service" class="headerlink" title="添加 service"></a>添加 service</h1><p>系统 mint, 对 ubuntu 应该都有效.</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br></pre></td><td class="code"><pre><span class="line">vim /etc/init.d/nginx</span><br><span class="line"></span><br><span class="line"><span class="comment"># 写入脚本</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#! /bin/sh</span></span><br><span class="line"></span><br><span class="line"><span class="comment">### BEGIN INIT INFO</span></span><br><span class="line"><span class="comment"># Provides:          nginx</span></span><br><span class="line"><span class="comment"># Required-Start:    $remote_fs $syslog</span></span><br><span class="line"><span class="comment"># Required-Stop:     $remote_fs $syslog</span></span><br><span class="line"><span class="comment"># Default-Start:     2 3 4 5</span></span><br><span class="line"><span class="comment"># Default-Stop:      0 1 6</span></span><br><span class="line"><span class="comment"># Short-Description: starts the nginx web server</span></span><br><span class="line"><span class="comment"># Description:       starts nginx using start-stop-daemon</span></span><br><span class="line"><span class="comment">### END INIT INFO</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment">#------------------------------------------------------------------------------</span></span><br><span class="line"><span class="comment">#                               Functions</span></span><br><span class="line"><span class="comment">#------------------------------------------------------------------------------</span></span><br><span class="line">. /lib/lsb/init-functions</span><br><span class="line"><span class="comment">#------------------------------------------------------------------------------</span></span><br><span class="line"><span class="comment">#                               Consts</span></span><br><span class="line"><span class="comment">#------------------------------------------------------------------------------</span></span><br><span class="line">PATH=/usr/<span class="built_in">local</span>/sbin:/usr/<span class="built_in">local</span>/bin:/sbin:/bin:/usr/sbin:/usr/bin</span><br><span class="line">DAEMON=/usr/sbin/nginx</span><br><span class="line"></span><br><span class="line">PS=<span class="string">"nginx"</span></span><br><span class="line">PIDNAME=<span class="string">"nginx"</span>                         <span class="comment">#lets you do $PS-slave</span></span><br><span class="line">PIDFILE=<span class="variable">$PIDNAME</span>.pid                    <span class="comment">#pid file</span></span><br><span class="line">PIDSPATH=/run                           <span class="comment">#pid path</span></span><br><span class="line"></span><br><span class="line">DESCRIPTION=<span class="string">"Nginx Server..."</span></span><br><span class="line"></span><br><span class="line">RUNAS=root                              <span class="comment">#user to run as</span></span><br><span class="line"></span><br><span class="line">SCRIPT_OK=0                             <span class="comment">#ala error codes</span></span><br><span class="line">SCRIPT_ERROR=1                          <span class="comment">#ala error codes</span></span><br><span class="line">TRUE=1                                  <span class="comment">#boolean</span></span><br><span class="line">FALSE=0                                 <span class="comment">#boolean</span></span><br><span class="line"></span><br><span class="line">lockfile=/var/lock/subsys/nginx</span><br><span class="line">NGINX_CONF_FILE=<span class="string">"/etc/nginx/nginx.conf"</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#------------------------------------------------------------------------------</span></span><br><span class="line"><span class="comment">#                               Simple Tests</span></span><br><span class="line"><span class="comment">#------------------------------------------------------------------------------</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#test if nginx is a file and executable</span></span><br><span class="line"><span class="built_in">test</span> -x <span class="variable">$DAEMON</span> || <span class="built_in">exit</span> 0</span><br><span class="line"></span><br><span class="line"><span class="comment"># Include nginx defaults if available</span></span><br><span class="line"><span class="keyword">if</span> [ -f /etc/default/nginx ] ; <span class="keyword">then</span></span><br><span class="line">        . /etc/default/nginx</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#------------------------------------------------------------------------------</span></span><br><span class="line"><span class="comment">#                               Functions</span></span><br><span class="line"><span class="comment">#------------------------------------------------------------------------------</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">setFilePerms</span></span>()&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> [ -f <span class="variable">$PIDSPATH</span>/<span class="variable">$PIDFILE</span> ]; <span class="keyword">then</span></span><br><span class="line">        chmod 400 <span class="variable">$PIDSPATH</span>/<span class="variable">$PIDFILE</span></span><br><span class="line">    <span class="keyword">fi</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">configtest</span></span>() &#123;</span><br><span class="line">    <span class="variable">$DAEMON</span> -t -c <span class="variable">$NGINX_CONF_FILE</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">getPSCount</span></span>() &#123;</span><br><span class="line">    <span class="built_in">return</span> `pgrep -f <span class="variable">$PS</span> | wc -l`</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">isRunning</span></span>() &#123;</span><br><span class="line">    <span class="keyword">if</span> [ <span class="variable">$1</span> ]; <span class="keyword">then</span></span><br><span class="line">        pidof_daemon <span class="variable">$1</span></span><br><span class="line">        PID=$?</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> [ <span class="variable">$PID</span> -gt 0 ]; <span class="keyword">then</span></span><br><span class="line">                <span class="built_in">return</span> 1</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">                <span class="built_in">return</span> 0</span><br><span class="line">        <span class="keyword">fi</span></span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">        pidof_daemon</span><br><span class="line">        PID=$?</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> [ <span class="variable">$PID</span> -gt 0 ]; <span class="keyword">then</span></span><br><span class="line">                <span class="built_in">return</span> 1</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">                <span class="built_in">return</span> 0</span><br><span class="line">        <span class="keyword">fi</span></span><br><span class="line">    <span class="keyword">fi</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">#courtesy of php-fpm</span></span><br><span class="line"><span class="function"><span class="title">wait_for_pid</span></span> () &#123;</span><br><span class="line">    try=0</span><br><span class="line"></span><br><span class="line">    <span class="keyword">while</span> <span class="built_in">test</span> <span class="variable">$try</span> -lt 35 ; <span class="keyword">do</span></span><br><span class="line">        <span class="keyword">case</span> <span class="string">"<span class="variable">$1</span>"</span> <span class="keyword">in</span></span><br><span class="line">            <span class="string">'created'</span>)</span><br><span class="line">            <span class="keyword">if</span> [ -f <span class="string">"<span class="variable">$2</span>"</span> ] ; <span class="keyword">then</span></span><br><span class="line">                try=<span class="string">''</span></span><br><span class="line">                <span class="built_in">break</span></span><br><span class="line">            <span class="keyword">fi</span></span><br><span class="line">            ;;</span><br><span class="line"></span><br><span class="line">            <span class="string">'removed'</span>)</span><br><span class="line">            <span class="keyword">if</span> [ ! -f <span class="string">"<span class="variable">$2</span>"</span> ] ; <span class="keyword">then</span></span><br><span class="line">                try=<span class="string">''</span></span><br><span class="line">                <span class="built_in">break</span></span><br><span class="line">            <span class="keyword">fi</span></span><br><span class="line">            ;;</span><br><span class="line">        <span class="keyword">esac</span></span><br><span class="line"></span><br><span class="line">        try=`expr <span class="variable">$try</span> + 1`</span><br><span class="line">        sleep 1</span><br><span class="line">    <span class="keyword">done</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">status</span></span>()&#123;</span><br><span class="line">    isRunning</span><br><span class="line">    isAlive=$?</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> [ <span class="string">"<span class="variable">$&#123;isAlive&#125;</span>"</span> -eq <span class="variable">$TRUE</span> ]; <span class="keyword">then</span></span><br><span class="line">            <span class="built_in">echo</span> <span class="string">"<span class="variable">$PIDNAME</span> found running with processes:  `pidof <span class="variable">$PS</span>`"</span></span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            <span class="built_in">echo</span> <span class="string">"<span class="variable">$PIDNAME</span> is NOT running."</span></span><br><span class="line">        <span class="keyword">fi</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">removePIDFile</span></span>()&#123;</span><br><span class="line">    <span class="keyword">if</span> [ <span class="variable">$1</span> ]; <span class="keyword">then</span></span><br><span class="line">            <span class="keyword">if</span> [ -f <span class="variable">$1</span> ]; <span class="keyword">then</span></span><br><span class="line">                 rm -f <span class="variable">$1</span></span><br><span class="line">            <span class="keyword">fi</span></span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">        <span class="comment">#Do default removal</span></span><br><span class="line">        <span class="keyword">if</span> [ -f <span class="variable">$PIDSPATH</span>/<span class="variable">$PIDFILE</span> ]; <span class="keyword">then</span></span><br><span class="line">                 rm -f <span class="variable">$PIDSPATH</span>/<span class="variable">$PIDFILE</span></span><br><span class="line">            <span class="keyword">fi</span></span><br><span class="line">        <span class="keyword">fi</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">start</span></span>() &#123;</span><br><span class="line">    log_daemon_msg <span class="string">"Starting <span class="variable">$DESCRIPTION</span>"</span></span><br><span class="line">    isRunning</span><br><span class="line">    isAlive=$?</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> [ <span class="string">"<span class="variable">$&#123;isAlive&#125;</span>"</span> -eq <span class="variable">$TRUE</span> ]; <span class="keyword">then</span></span><br><span class="line">        log_end_msg <span class="variable">$SCRIPT_ERROR</span></span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">        start-stop-daemon --start --quiet --chuid <span class="variable">$RUNAS</span> --pidfile <span class="variable">$PIDSPATH</span>/<span class="variable">$PIDFILE</span> --<span class="built_in">exec</span> <span class="variable">$DAEMON</span> \</span><br><span class="line">        -- -c <span class="variable">$NGINX_CONF_FILE</span></span><br><span class="line">        setFilePerms</span><br><span class="line">        log_end_msg <span class="variable">$SCRIPT_OK</span></span><br><span class="line">    <span class="keyword">fi</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">stop</span></span>() &#123;</span><br><span class="line">    log_daemon_msg <span class="string">"Stopping <span class="variable">$DESCRIPTION</span>"</span></span><br><span class="line"></span><br><span class="line">    isRunning</span><br><span class="line">    isAlive=$?</span><br><span class="line">    <span class="keyword">if</span> [ <span class="string">"<span class="variable">$&#123;isAlive&#125;</span>"</span> -eq <span class="variable">$TRUE</span> ]; <span class="keyword">then</span></span><br><span class="line">         start-stop-daemon --stop --quiet --pidfile <span class="variable">$PIDSPATH</span>/<span class="variable">$PIDFILE</span></span><br><span class="line">         wait_for_pid <span class="string">'removed'</span> <span class="variable">$PIDSPATH</span>/<span class="variable">$PIDFILE</span></span><br><span class="line">         <span class="keyword">if</span> [ -n <span class="string">"<span class="variable">$try</span>"</span> ] ; <span class="keyword">then</span></span><br><span class="line">             log_end_msg <span class="variable">$SCRIPT_ERROR</span></span><br><span class="line">         <span class="keyword">else</span></span><br><span class="line">             removePIDFile</span><br><span class="line">             log_end_msg <span class="variable">$SCRIPT_OK</span></span><br><span class="line">         <span class="keyword">fi</span></span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">         log_end_msg <span class="variable">$SCRIPT_ERROR</span></span><br><span class="line">    <span class="keyword">fi</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">reload</span></span>() &#123;</span><br><span class="line">    configtest || <span class="built_in">return</span> $?</span><br><span class="line">    log_daemon_msg <span class="string">"Reloading (via HUP) <span class="variable">$DESCRIPTION</span>"</span></span><br><span class="line">    isRunning</span><br><span class="line">    <span class="keyword">if</span> [ $? -eq <span class="variable">$TRUE</span> ]; <span class="keyword">then</span></span><br><span class="line">        `killall -HUP <span class="variable">$PS</span>` <span class="comment">#to be safe</span></span><br><span class="line">        log_end_msg <span class="variable">$SCRIPT_OK</span></span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">        log_end_msg <span class="variable">$SCRIPT_ERROR</span></span><br><span class="line">    <span class="keyword">fi</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">terminate</span></span>() &#123;</span><br><span class="line">    log_daemon_msg <span class="string">"Force terminating (via KILL) <span class="variable">$DESCRIPTION</span>"</span></span><br><span class="line"></span><br><span class="line">    PIDS=`pidof <span class="variable">$PS</span>` || <span class="literal">true</span></span><br><span class="line"></span><br><span class="line">    [ -e <span class="variable">$PIDSPATH</span>/<span class="variable">$PIDFILE</span> ] &amp;&amp; PIDS2=`cat <span class="variable">$PIDSPATH</span>/<span class="variable">$PIDFILE</span>`</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="variable">$PIDS</span>; <span class="keyword">do</span></span><br><span class="line">        <span class="keyword">if</span> [ <span class="string">"<span class="variable">$i</span>"</span> = <span class="string">"<span class="variable">$PIDS2</span>"</span> ]; <span class="keyword">then</span></span><br><span class="line">            <span class="built_in">kill</span> <span class="variable">$i</span></span><br><span class="line">            wait_for_pid <span class="string">'removed'</span> <span class="variable">$PIDSPATH</span>/<span class="variable">$PIDFILE</span></span><br><span class="line">            removePIDFile</span><br><span class="line">        <span class="keyword">fi</span></span><br><span class="line">    <span class="keyword">done</span></span><br><span class="line">    log_end_msg <span class="variable">$SCRIPT_OK</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">destroy</span></span>() &#123;</span><br><span class="line">    log_daemon_msg <span class="string">"Force terminating and may include self (via KILLALL) <span class="variable">$DESCRIPTION</span>"</span></span><br><span class="line">    killall <span class="variable">$PS</span> -q &gt;&gt; /dev/null 2&gt;&amp;1</span><br><span class="line">    log_end_msg <span class="variable">$SCRIPT_OK</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">pidof_daemon</span></span>() &#123;</span><br><span class="line">    PIDS=`pidof <span class="variable">$PS</span>` || <span class="literal">true</span></span><br><span class="line"></span><br><span class="line">    [ -e <span class="variable">$PIDSPATH</span>/<span class="variable">$PIDFILE</span> ] &amp;&amp; PIDS2=`cat <span class="variable">$PIDSPATH</span>/<span class="variable">$PIDFILE</span>`</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="variable">$PIDS</span>; <span class="keyword">do</span></span><br><span class="line">        <span class="keyword">if</span> [ <span class="string">"<span class="variable">$i</span>"</span> = <span class="string">"<span class="variable">$PIDS2</span>"</span> ]; <span class="keyword">then</span></span><br><span class="line">            <span class="built_in">return</span> 1</span><br><span class="line">        <span class="keyword">fi</span></span><br><span class="line">    <span class="keyword">done</span></span><br><span class="line">    <span class="built_in">return</span> 0</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">case</span> <span class="string">"<span class="variable">$1</span>"</span> <span class="keyword">in</span></span><br><span class="line">    start)</span><br><span class="line">        start</span><br><span class="line">        ;;</span><br><span class="line">    stop)</span><br><span class="line">        stop</span><br><span class="line">        ;;</span><br><span class="line">    restart|force-reload)</span><br><span class="line">        stop</span><br><span class="line">        sleep 3</span><br><span class="line">        start</span><br><span class="line">        ;;</span><br><span class="line">    reload)</span><br><span class="line">        <span class="variable">$1</span></span><br><span class="line">        ;;</span><br><span class="line">    status)</span><br><span class="line">        status</span><br><span class="line">        ;;</span><br><span class="line">    configtest)</span><br><span class="line">        <span class="variable">$1</span></span><br><span class="line">        ;;</span><br><span class="line">    terminate)</span><br><span class="line">        <span class="variable">$1</span></span><br><span class="line">        ;;</span><br><span class="line">    destroy)</span><br><span class="line">        <span class="variable">$1</span></span><br><span class="line">        ;;</span><br><span class="line">    *)</span><br><span class="line">        FULLPATH=/etc/init.d/<span class="variable">$PS</span></span><br><span class="line">        <span class="built_in">echo</span> <span class="string">"Usage: <span class="variable">$FULLPATH</span> &#123;start|stop|restart|force-reload|status|configtest|terminate|destroy&#125;"</span></span><br><span class="line">        <span class="built_in">echo</span> <span class="string">"       The 'destroy' command should only be used as a last resort."</span></span><br><span class="line">        <span class="built_in">exit</span> 1</span><br><span class="line">        ;;</span><br><span class="line"><span class="keyword">esac</span></span><br><span class="line"><span class="built_in">exit</span> 0</span><br></pre></td></tr></table></figure><p>记得改权限.<br>上面的 nginx 路径需要改成自己编译时候写的,或者 <code>which nginx</code>.</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">sudo update-rc.d nginx defaults</span><br><span class="line"></span><br><span class="line">sudo systemctl daemon-reload</span><br><span class="line"></span><br><span class="line">sudo systemctl <span class="built_in">enable</span> nginx</span><br></pre></td></tr></table></figure><p><img src="https://ws1.sinaimg.cn/large/675bda05ly1fton0r8ilyj20sc0sdjyg.jpg" alt=""></p><p><a href="https://segmentfault.com/q/1010000005987075" target="_blank" rel="noopener">参考文档</a>.</p>]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;魔改编译安装 nginx。&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
      <category term="linux" scheme="https://rachpt.github.io/categories/linux/"/>
    
    
      <category term="nginx" scheme="https://rachpt.github.io/tags/nginx/"/>
    
  </entry>
  
  <entry>
    <title>run-matlab-in-a-terminal</title>
    <link href="https://rachpt.github.io/2018/07/25/run-matlab-in-a-terminal/"/>
    <id>https://rachpt.github.io/2018/07/25/run-matlab-in-a-terminal/</id>
    <published>2018-07-25T12:39:59.000Z</published>
    <updated>2018-07-25T13:19:07.000Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>直接在 termianl 中运行 matlab，输入命令，执行脚本。</p></blockquote><a id="more"></a><p>matlab 绝对是一个超级强大的 脚本工具，当然不仅仅是。对于使用 linux 日常来说，程序提供 cli，就意味着可以集成并协同工作。在一个 shell  脚本种一个程序(命令)只做一件事，程序的输出作为另一个程序的输入，配合 Linux 的管道机制，一切皆有可能。<br><img src="https://ws1.sinaimg.cn/large/675bda05ly1ftmeutjlz7j20em0ixwgk.jpg" alt="Keep calm and open a terminal."><br><blockquote class="blockquote-center"><p>Keep calm and open a terminal.</p></blockquote></p><h1 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h1><p>使用 mount 先挂载 dvd1,图形界面直接双击挂载。<br><strong>一定要在挂载路径之外 使用 <code>sudo install</code></strong><br>后面按提示弹出 dvd1,挂载 dvd2.<br> 安装路径 建议软件默认位置，选择创建 <code>/usr/local/bin/matlab</code>。</p><h1 id="激活"><a href="#激活" class="headerlink" title="激活"></a>激活</h1><p>hust 买了正版授权，注意一个学号只能授权一台设备一个版本，可以取消已经授权了的设备。</p><h1 id="终端运行"><a href="#终端运行" class="headerlink" title="终端运行"></a>终端运行</h1><p>打开 terminal， <code>matlab -help</code></p><p>可以看到帮助文档。</p><p>使用 <code>matlab -nodesktop</code> 在 terminal 中运行 matlab，但是会闪过 matlab 的版权信息UI。</p><p>使用 <code>matlab -nojvm</code> 关闭 matlab 的 java 虚拟机，所有与 GUI 相关的都用不了，不会有图形界面。</p><p>使用 <code>matlab -nosplash</code> 关闭版权信息页面。</p><p>使用 <code>matlab -nodesktop -nosplash -r script/PATH</code> 运行 m 脚本，(不要 .m 后缀)。</p><p>使用 alias:</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">vim ~/.bashrc</span><br><span class="line"></span><br><span class="line"><span class="built_in">alias</span> matlab=<span class="string">'matlab -nojvm -nodesktop -nosplash'</span></span><br></pre></td></tr></table></figure><p>退出 使用 <code>quit</code> 或者 <code>exit</code>。</p>]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;直接在 termianl 中运行 matlab，输入命令，执行脚本。&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
      <category term="linux" scheme="https://rachpt.github.io/categories/linux/"/>
    
    
      <category term="matlab" scheme="https://rachpt.github.io/tags/matlab/"/>
    
  </entry>
  
  <entry>
    <title>make-transmission2.94-from-source-code</title>
    <link href="https://rachpt.github.io/2018/07/24/make-transmission2-94-from-source-code/"/>
    <id>https://rachpt.github.io/2018/07/24/make-transmission2-94-from-source-code/</id>
    <published>2018-07-24T02:47:46.000Z</published>
    <updated>2019-02-15T13:49:16.133Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>从源代码编译安装 transmission， 以支持跳过校验以及自定义部分 webUI 特性。环境 ubuntu 系。</p></blockquote><a id="more"></a><h1 id="编译环境"><a href="#编译环境" class="headerlink" title="编译环境"></a>编译环境</h1><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get install build-essential automake \</span><br><span class="line">     autoconf libtool pkg-config intltool \</span><br><span class="line">     libcurl4-openssl-dev libglib2.0-dev \</span><br><span class="line">     libevent-dev libminiupnpc-dev libgtk-3-dev libappindicator3-dev</span><br></pre></td></tr></table></figure><p><a href="https://github.com/transmission/transmission/wiki/Building-Transmission#on-unix" target="_blank" rel="noopener">官方参考文档</a> 。</p><h1 id="魔改"><a href="#魔改" class="headerlink" title="魔改"></a>魔改</h1><ol><li><p>跳过校验</p><p><a href="https://github.com/superlukia/transmission-2.92_skiphashcheck/commit/56e327d1dacb5b3453954b76a6d0edd30edb7a34" target="_blank" rel="noopener">请参考这里</a>。</p><p><a href="https://tieba.baidu.com/p/4839039900" target="_blank" rel="noopener">以及这里</a>。</p></li><li><p>自定义 webUI 界面。</p><p>效果如下图：<br><img src="https://ws1.sinaimg.cn/large/675bda05ly1ftks3hh5bpj20im076js1.jpg" alt=""></p><p>在工具栏上添加一个跳转到自定义路径的按钮。</p></li></ol><ul><li>修改1：</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">vim web/index.html</span><br><span class="line"></span><br><span class="line"># 第 50 行附近添加</span><br><span class="line"></span><br><span class="line">&lt;div id=&quot;toolbar-pause-all&quot; title=&quot;Pause All Torrents&quot;&gt;&lt;/div&gt;</span><br><span class="line">+&lt;div id=&quot;toolbar-separator&quot;&gt;&lt;/div&gt;</span><br><span class="line">+&lt;a href=&quot;/index.html&quot; title=&quot;返回首页&quot;&gt;&lt;div style=&quot;margin-right: 10px; margin-top: 6px&quot;&gt;&lt;img src=&quot;./images/home.png&quot; /&gt;&lt;/div&gt;&lt;/a&gt;</span><br><span class="line">+&lt;div id=&quot;toolbar-separator&quot;&gt;&lt;/div&gt;</span><br><span class="line">&lt;div id=&quot;toolbar-inspector&quot; title=&quot;Toggle Inspector&quot;&gt;&lt;/div&gt;</span><br></pre></td></tr></table></figure><p>  为此需要添加一枚 home.png 图标 到 <code>web/images/home.png</code>.<br>  同时修改 该文件夹 的 <code>Makefile.am</code> 和 <code>Makefile.in</code>，如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">vim web/images/Makefile.am</span><br><span class="line"></span><br><span class="line"># 改成如下</span><br><span class="line"></span><br><span class="line">datadir = $&#123;datarootdir&#125;/$&#123;PACKAGE_NAME&#125;/$&#123;subdir&#125;</span><br><span class="line">dist_data_DATA = \</span><br><span class="line">  favicon.ico \</span><br><span class="line">  favicon.png \</span><br><span class="line">  webclip-icon.png \</span><br><span class="line">  home.png</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">vim web/images/Makefile.in</span><br><span class="line"></span><br><span class="line"># 大约在 365 行附近，如下修改</span><br><span class="line"></span><br><span class="line">disti\_data\_DATA = \</span><br><span class="line">  favicon.ico \</span><br><span class="line">  favicon.png \</span><br><span class="line">+  webclip-icon.png \</span><br><span class="line">+  home.png</span><br><span class="line"></span><br><span class="line">all: all-am</span><br></pre></td></tr></table></figure><p>  自此 自定义的 webUI 就算是好啦。</p><ul><li><p>修改2：</p><p>魔改 401 界面，效果如下：<br><img src="https://ws1.sinaimg.cn/large/675bda05ly1ftksonthx2j20b805k0sn.jpg" alt=""></p><p>首先使用了命令 <code>cd transmission-2.94 &amp;&amp; find . | xargs grep &#39;&lt;h1&gt;&#39;</code> 查找包含 <code>&lt;h1&gt;</code> 的源代码位置。<br>结果为 <code>./libtransmission/rpc-server.c:  evbuffer_add_printf (body, &quot;&lt;h1&gt;%d: %s&lt;/h1&gt;&quot;, code, code_text);</code></p></li></ul><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">vim ./libtransmission/rpc-server.c</span><br><span class="line"></span><br><span class="line"><span class="comment"># 大约在 128 行</span></span><br><span class="line"></span><br><span class="line">  evbuffer_add_printf (body, <span class="string">"&lt;h1&gt;%d: %s&lt;/h1&gt;"</span>, code, code_text);</span><br><span class="line">  <span class="keyword">if</span> (text)</span><br><span class="line">+    evbuffer_add_printf (body, <span class="string">"%s&lt;br /&gt;&lt;br /&gt;&lt;a href=\"/index.html\"&gt;Click to Homepage&lt;/a&gt;"</span>, text);</span><br><span class="line">  evhttp_send_reply (req, code, code_text, body);</span><br></pre></td></tr></table></figure><p>  修改如上，在 <code>%s</code> 后面加上了一个 a 标签。</p><h1 id="编译"><a href="#编译" class="headerlink" title="编译"></a>编译</h1><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">./configure -q &amp;&amp; make -s</span><br><span class="line"></span><br><span class="line">sudo make install</span><br></pre></td></tr></table></figure><p>  安装会自动覆盖掉以前的版本。</p><p>  详见：<br><a href="https://github.com/rachpt/transmission-skiphashcheck-mod-webUI" target="_blank" rel="noopener">https://github.com/rachpt/transmission-skiphashcheck-mod-webUI</a></p>]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;从源代码编译安装 transmission， 以支持跳过校验以及自定义部分 webUI 特性。环境 ubuntu 系。&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
      <category term="linux" scheme="https://rachpt.github.io/categories/linux/"/>
    
    
      <category term="transmission" scheme="https://rachpt.github.io/tags/transmission/"/>
    
  </entry>
  
  <entry>
    <title>make-qbittorrent-from-source-code</title>
    <link href="https://rachpt.github.io/2018/07/21/make-qbittorrent-from-source-code/"/>
    <id>https://rachpt.github.io/2018/07/21/make-qbittorrent-from-source-code/</id>
    <published>2018-07-21T13:21:34.000Z</published>
    <updated>2018-07-27T05:43:50.000Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>从源码编译安装旧版本 qbittorrent，别问我为什么要安装旧版。<br><a id="more"></a><br><div class="note default">            <p>以下内容转载至:<br><a href="https://www.cnblogs.com/shuochen/p/8533712.html" target="_blank" rel="noopener">https://www.cnblogs.com/shuochen/p/8533712.html</a> （仅作为备份）。<br>英文原版:<br><a href="https://github.com/qbittorrent/qBittorrent/wiki/Compiling-qBittorrent-on-Debian-and-Ubuntu" target="_blank" rel="noopener">https://github.com/qbittorrent/qBittorrent/wiki/Compiling-qBittorrent-on-Debian-and-Ubuntu</a> 。</p>          </div></p></blockquote><h1 id="一、安装依赖环境"><a href="#一、安装依赖环境" class="headerlink" title="一、安装依赖环境"></a>一、安装依赖环境</h1><h2 id="①安装一般依赖包"><a href="#①安装一般依赖包" class="headerlink" title="①安装一般依赖包"></a>①安装一般依赖包</h2><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get install libboost-dev libboost-system-dev build-essential \</span><br><span class="line">     libboost-chrono-dev libboost-random-dev libssl-dev libgeoip-dev \</span><br><span class="line">     git pkg-config automake libtool</span><br></pre></td></tr></table></figure><h2 id="②安装Qt5库"><a href="#②安装Qt5库" class="headerlink" title="②安装Qt5库"></a>②安装Qt5库</h2><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get install qtbase5-dev qttools5-dev-tools</span><br></pre></td></tr></table></figure><h2 id="③安装python和GeoIP数据库"><a href="#③安装python和GeoIP数据库" class="headerlink" title="③安装python和GeoIP数据库"></a>③安装python和GeoIP数据库</h2><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get install python geoip-database</span><br></pre></td></tr></table></figure><h1 id="二、安装Libtorrent"><a href="#二、安装Libtorrent" class="headerlink" title="二、安装Libtorrent"></a>二、安装Libtorrent</h1><h2 id="①下载Libtorrent包并打开"><a href="#①下载Libtorrent包并打开" class="headerlink" title="①下载Libtorrent包并打开"></a>①下载Libtorrent包并打开</h2><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo git <span class="built_in">clone</span> https://github.com/arvidn/libtorrent.git</span><br><span class="line"><span class="built_in">cd</span> libtorrent</span><br></pre></td></tr></table></figure><h2 id="②选择1-0-分支编译安装"><a href="#②选择1-0-分支编译安装" class="headerlink" title="②选择1.0.*分支编译安装"></a>②选择1.0.*分支编译安装</h2><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">git checkout RC_1_0</span><br><span class="line">./autotool.sh</span><br><span class="line">./configure --<span class="built_in">disable</span>-debug --<span class="built_in">enable</span>-encryption --prefix=/usr --with-libgeoip=system</span><br><span class="line">make clean &amp;&amp; make</span><br><span class="line">sudo make install</span><br></pre></td></tr></table></figure><h1 id="三、编辑安装qBittorrent"><a href="#三、编辑安装qBittorrent" class="headerlink" title="三、编辑安装qBittorrent"></a>三、编辑安装qBittorrent</h1><h2 id="①从github下载对应版本的QB安装包"><a href="#①从github下载对应版本的QB安装包" class="headerlink" title="①从github下载对应版本的QB安装包"></a>①从github下载对应版本的QB安装包</h2><p>QB历史版本下载：<a href="https://github.com/qbittorrent/qBittorrent/releases" target="_blank" rel="noopener">https://github.com/qbittorrent/qBittorrent/releases</a></p><p>如编译安装3.3.11版本的QB</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">wget https://github.com/qbittorrent/qBittorrent/archive/release-3.3.11.tar.gz</span><br><span class="line">tar -xzvf release-3.3.11.tar.gz</span><br><span class="line"><span class="built_in">cd</span> qBittorrent-release-3.3.11</span><br></pre></td></tr></table></figure><h2 id="②编译qBittorrent"><a href="#②编译qBittorrent" class="headerlink" title="②编译qBittorrent"></a>②编译qBittorrent</h2><p>需要GUI则可以取消后面的disable参数。</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">./configure --prefix=/usr --<span class="built_in">disable</span>-gui</span><br><span class="line">make &amp;&amp; sudo make install</span><br></pre></td></tr></table></figure><p>这里编译的时候如果提示错误 缺少 zlib 运行以下命令即可</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get install zlib1g-dev</span><br></pre></td></tr></table></figure><h1 id="四、运行qBittorrent"><a href="#四、运行qBittorrent" class="headerlink" title="四、运行qBittorrent"></a>四、运行qBittorrent</h1><h2 id="①初始化QB-设置中文"><a href="#①初始化QB-设置中文" class="headerlink" title="①初始化QB(设置中文)"></a>①初始化QB(设置中文)</h2><p>运行以下命令</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">qbittorrent-nox  <span class="comment"># 无 GUI</span></span><br><span class="line">qbittorrent      <span class="comment"># 有 GUI</span></span><br></pre></td></tr></table></figure><p>运行后会提示输入,输入y，然后回车即可，这时打开第③步中的地址，进入后打开设置，在WEBUI里将语言改成中文，然后Ctrl+C 结束，再次输入命令运行QB，这是刷新网页就是中文了，意思就是设置完需要重启下客户端才能使语言修改生效，其它设置类似。</p><h2 id="②在后台运行qBittorrent"><a href="#②在后台运行qBittorrent" class="headerlink" title="②在后台运行qBittorrent"></a>②在后台运行qBittorrent</h2><p>因为直接运行QB，退出shell窗口的话就会关闭，所以我们可以用nohup的方式运行QB</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nohup qbittorrent-nox &amp;</span><br></pre></td></tr></table></figure><p>这样QB就已经稳定在后台运行了，即使你关闭shell也不会结束的。</p><h2 id="③访问qBittorrent的Web-UI"><a href="#③访问qBittorrent的Web-UI" class="headerlink" title="③访问qBittorrent的Web-UI"></a>③访问qBittorrent的Web-UI</h2><p>默认地址: <a href="http://IP地址:8080" target="_blank" rel="noopener">http://IP地址:8080</a><br>默认用户名: admin<br>默认密码: adminadmin</p><hr><h1 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h1><h2 id="魔改"><a href="#魔改" class="headerlink" title="魔改"></a>魔改</h2><p>效果如下:<br><img src="https://ws1.sinaimg.cn/large/675bda05ly1ftocq1d522j20bi02gq2z.jpg" alt=""></p><ol><li>在 web UI 上添加一个返回的超链接 “首页”.</li></ol><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">vim qBittorrent-release-3.3.9/src/webui/www/private/index.html</span><br><span class="line"></span><br><span class="line"><span class="comment"># 搜索 help-about ,大约在 79 行</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">                            &lt;li&gt;&lt;a id=<span class="string">"aboutLink"</span>&gt;&lt;img class=<span class="string">"MyMenuIcon"</span> src=<span class="string">"theme/help-about"</span> alt=<span class="string">"QBT_TR(&amp;About)QBT_TR"</span> width=<span class="string">"16"</span> height=<span class="string">"16"</span> onload=<span class="string">"fixPNG(this)"</span>/&gt;QBT_TR(&amp;About)QBT_TR&lt;/a&gt;&lt;/li&gt;</span><br><span class="line">                        &lt;/ul&gt;</span><br><span class="line">                    &lt;/li&gt;</span><br><span class="line">                  + &lt;li&gt;</span><br><span class="line">                  +     &lt;a href=<span class="string">"/index.html"</span>&gt;首页&lt;/a&gt;</span><br><span class="line">                  + &lt;/li&gt;</span><br><span class="line">                &lt;/ul&gt;</span><br></pre></td></tr></table></figure><p>如上 添加 li 和一个 a 标签即可.</p><p><img src="https://ws1.sinaimg.cn/large/675bda05ly1ftocwg57h9j20t00el0uy.jpg" alt=""></p><ol><li>登录界面</li></ol><p>1<a href="https://ws1.sinaimg.cn/large/675bda05ly1ftocxybpz6j20ec09x0u9.jpg" target="_blank" rel="noopener"></a><br>加一个 返回按钮,同时添加一行移动端适配代码.</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">vim qBittorrent-release-3.3.9/src/webui/www/private/login.html</span><br><span class="line"></span><br><span class="line"><span class="comment"># 添加 移动端适配代码,</span></span><br><span class="line"><span class="comment"># 在 head 中添加</span></span><br><span class="line">    &lt;meta http-equiv=<span class="string">"Content-Type"</span> content=<span class="string">"text/html; charset=UTF-8"</span> /&gt;</span><br><span class="line">+   &lt;meta name=<span class="string">"viewport"</span> content=<span class="string">"width=device-width,minimum-scale=1.0,maximum-scale=1.0,user-scalable=no"</span> /&gt;</span><br><span class="line">    &lt;meta http-equiv=<span class="string">"X-UA-Compatible"</span> content=<span class="string">"IE=8"</span> /&gt;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 修改末尾 submit 按钮</span></span><br><span class="line"></span><br><span class="line">&lt;div class=<span class="string">"row"</span>&gt;&lt;label <span class="keyword">for</span>=<span class="string">"password"</span>&gt;QBT_TR(Password)QBT_TR&lt;/label&gt;&lt;br /&gt;&lt;input <span class="built_in">type</span>=<span class="string">"password"</span> id=<span class="string">"password"</span> name=<span class="string">"password"</span> /&gt;&lt;/div&gt;</span><br><span class="line">+&lt;div class=<span class="string">"row"</span>&gt;&lt;input <span class="built_in">type</span>=<span class="string">"submit"</span> id=<span class="string">"login"</span> value=<span class="string">"QBT_TR(Login)QBT_TR"</span> /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;input <span class="built_in">type</span>=<span class="string">"submit"</span> value=<span class="string">"返回首页"</span> onclick=<span class="string">"javascript:location.href='/index.html'"</span> /&gt;&lt;/div&gt;</span><br><span class="line">&lt;/form&gt;</span><br></pre></td></tr></table></figure><h2 id="编译"><a href="#编译" class="headerlink" title="编译"></a>编译</h2><p>推荐使用 –disable-gui 不要 GUI, 使用 daemon 运行.</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">sudo vim /etc/systemd/system/qbittorrent.service</span><br><span class="line"></span><br><span class="line"><span class="comment"># 写入一下内容</span></span><br><span class="line"></span><br><span class="line">[Unit]</span><br><span class="line">Description=qBittorrent Daemon Service</span><br><span class="line">After=network.target</span><br><span class="line"></span><br><span class="line">[Service]</span><br><span class="line">User=rachpt</span><br><span class="line">ExecStart=/usr/bin/qbittorrent-nox</span><br><span class="line">ExecStop=/usr/bin/killall -w qbittorrent-nox</span><br><span class="line"></span><br><span class="line">[Install]</span><br><span class="line">WantedBy=multi-user.target</span><br></pre></td></tr></table></figure><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 重载 daemon</span></span><br><span class="line">sudo systemctl daemon-reload</span><br><span class="line"><span class="comment"># 启动</span></span><br><span class="line">sudo systemctl start qbittorrent</span><br><span class="line"><span class="comment"># 状态</span></span><br><span class="line">sudo systemctl status qbittorrent</span><br><span class="line"></span><br><span class="line"><span class="comment"># 运行开机自启动</span></span><br><span class="line">sudo systemctl <span class="built_in">enable</span> qbittorrent</span><br></pre></td></tr></table></figure><p><a href="https://github.com/qbittorrent/qBittorrent/wiki/Setting-up-qBittorrent-on-Ubuntu-server-as-daemon-with-Web-interface-%2815.04-and-newer%29" target="_blank" rel="noopener">参考文档</a>.</p>]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;从源码编译安装旧版本 qbittorrent，别问我为什么要安装旧版。&lt;br&gt;
    
    </summary>
    
      <category term="linux" scheme="https://rachpt.github.io/categories/linux/"/>
    
    
      <category term="linux" scheme="https://rachpt.github.io/tags/linux/"/>
    
  </entry>
  
  <entry>
    <title>compile-vim-with-clipboard-supported</title>
    <link href="https://rachpt.github.io/2018/07/20/compile-vim-with-clipboard-supported/"/>
    <id>https://rachpt.github.io/2018/07/20/compile-vim-with-clipboard-supported/</id>
    <published>2018-07-20T08:11:00.000Z</published>
    <updated>2018-07-30T09:13:56.000Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>从源码编译 vim，以支持使用系统粘贴板。</p></blockquote><a id="more"></a><h1 id="why"><a href="#why" class="headerlink" title="why"></a>why</h1><p><code>&quot; + Y</code> <code>&quot; + P</code> 这两组组合键可以实现 vim 与系统粘贴板之间的共享数据。重要性可想而知，至少有时还是需要和外部交换粘贴板的。</p><p>如果不自己编译源码，唯一的办法就是额外安装GUI版本的 vim。很蠢，不是吗?</p><h1 id="编译"><a href="#编译" class="headerlink" title="编译"></a>编译</h1><ol><li><p>下载源代码,<br><a href="https://github.com/vim/vim" target="_blank" rel="noopener">https://github.com/vim/vim</a><br> 使用 git <code>git clone https://github.com/vim/vim.git</code></p></li><li><p>安装依赖<br><code>sudo apt-get install xorg-dev</code>  # <a href="https://blog.csdn.net/atomicfox/article/details/7525398" target="_blank" rel="noopener">参考文档</a><br><code>sudo apt-get install libncurses5-dev</code>  # <a href="https://blog.csdn.net/jdsjlzx/article/details/12883359" target="_blank" rel="noopener">参考文档</a></p></li><li><p>编译<br><code>cd vim</code><br><code>./configure --with-features=huge</code>  # <a href="https://blog.csdn.net/atomicfox/article/details/7525398" target="_blank" rel="noopener">参考文档</a><br><code>cd src/</code><br><code>make &amp;&amp; sudo make install</code></p></li></ol><h1 id="验证"><a href="#验证" class="headerlink" title="验证"></a>验证</h1><p><code>vim --version | grep &quot;clipboard&quot;</code><br>看到 +clipboard  即是成功了。</p><h1 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h1><p>安装 YouCompleteMe 直接参考官方文档，先安装依赖。<br><a href="http://valloric.github.io/YouCompleteMe/#ubuntu-linux-x64" target="_blank" rel="noopener">http://valloric.github.io/YouCompleteMe/#ubuntu-linux-x64</a></p><p>如果出现下面错误(一定会)：<br><code>YouCompleteMe unavailable: requires Vim compiled with Python (2.7.1 or 3.4 )</code><br>需要在编译 vim 时加入支持 python 的参数。<br><code>--enable-pythoninterp=yes --enable-python3interp=yes</code> # 前面的时 python2 的后面是3的。<br><a href="https://blog.csdn.net/northeastsqure/article/details/72847259" target="_blank" rel="noopener">参考文档1</a> ，<a href="https://blog.csdn.net/u012675539/article/details/51489957" target="_blank" rel="noopener">参考文档2</a>。<br>使用 <code>checkinstall</code> 构建 deb 包。<br><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">sudo apt install checkinstall</span><br><span class="line"><span class="built_in">cd</span> ~/vim</span><br><span class="line">sudo checkinstall</span><br></pre></td></tr></table></figure></p><p><a href="https://github.com/Valloric/YouCompleteMe/wiki/Building-Vim-from-source" target="_blank" rel="noopener">参考文档</a>。</p><h1 id="图标"><a href="#图标" class="headerlink" title="图标"></a>图标</h1><p>创建图标添加到右键列表。<br><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">vim ~/.<span class="built_in">local</span>/share/applications/vim.desktop </span><br><span class="line"></span><br><span class="line">[Desktop Entry]</span><br><span class="line">Encoding=UTF-8</span><br><span class="line">Name=Vim Text Editor (Console)</span><br><span class="line">Comment=Edit text files <span class="keyword">in</span> a console using Vim</span><br><span class="line">Exec=vim %u</span><br><span class="line">Terminal=<span class="literal">true</span></span><br><span class="line">Type=Application</span><br><span class="line">Icon=/usr/share/pixmaps/vim.png <span class="comment"># 此处设置图标路径 </span></span><br><span class="line"><span class="comment"># 可以下载这个 http://pixelwhip.github.io/svg-flavors/img/logos/vim.png</span></span><br><span class="line">Categories=Application;Utility;TextEditor;</span><br><span class="line">StartupNotify=<span class="literal">true</span></span><br><span class="line">MimeType=text/plain;</span><br><span class="line">NoDisplay=<span class="literal">true</span></span><br></pre></td></tr></table></figure></p><p><a href="https://askubuntu.com/questions/72535/creating-desktop-files-to-use-on-the-open-with-other-application-tab" target="_blank" rel="noopener">参考文档</a>.<br>Set vim as your default editor with <code>update-alternatives</code>.<br><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">sudo update-alternatives --install /usr/bin/editor editor /usr/<span class="built_in">local</span>/bin/vim 1</span><br><span class="line">sudo update-alternatives --<span class="built_in">set</span> editor /usr/<span class="built_in">local</span>/bin/vim</span><br><span class="line">sudo update-alternatives --install /usr/bin/vi vi /usr/<span class="built_in">local</span>/bin/vim 1</span><br><span class="line">sudo update-alternatives --<span class="built_in">set</span> vi /usr/<span class="built_in">local</span>/bin/vim</span><br></pre></td></tr></table></figure></p><h1 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h1><p>vim 编译主要命令：</p><ol><li><code>./configure --with-features=hug --enable-pythoninterp=yes --enable-python3interp=yes --enable-rubyinterp --enable-luainterp --enable-perlinterp --enable-multibyte=true --enable-cscope=true --prefix=/usr</code>,<br><code>--enable-gui=no</code> GUI相关 <code>--enable-gui=gtk2</code>;</li><li><code>cd src</code>;</li><li><code>make &amp;&amp; sudo make install</code>.</li></ol><p>最后关于卸载以及 清理，(在源代码路径下)<br>使用 <code>make clean</code> 清理之间编译完成的；<br>使用 <code>sudo make uninstall</code> 卸载使用 make 安装的软件。<br>实在不行，先 <code>whereis vim</code>，使用 rm -rf 删掉文件即可。</p>]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;从源码编译 vim，以支持使用系统粘贴板。&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
      <category term="linux" scheme="https://rachpt.github.io/categories/linux/"/>
    
    
      <category term="linux" scheme="https://rachpt.github.io/tags/linux/"/>
    
  </entry>
  
  <entry>
    <title>adb-linux-and-mi8</title>
    <link href="https://rachpt.github.io/2018/07/06/adb-linux-and-mi8/"/>
    <id>https://rachpt.github.io/2018/07/06/adb-linux-and-mi8/</id>
    <published>2018-07-06T03:37:15.000Z</published>
    <updated>2018-09-07T12:28:50.000Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>记录几个在 Linux 上通过 adb 工具控制 MI8 的操作。以及无电脑卡刷 TWRP。</p></blockquote><a id="more"></a><h1 id="ADB"><a href="#ADB" class="headerlink" title="ADB"></a>ADB</h1><p>安装命令（ubuntu系列）：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">sudo add-apt-repository ppa:nilarimogard/webupd8</span><br><span class="line">sudo apt-get update</span><br><span class="line"><span class="comment"># 直接试下面的，不行在加 ppa</span></span><br><span class="line">sudo apt-get install android-tools-adb</span><br><span class="line"></span><br><span class="line">adb --version <span class="comment"># 检查是否安装</span></span><br></pre></td></tr></table></figure><h1 id="fastboot"><a href="#fastboot" class="headerlink" title="fastboot"></a>fastboot</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"># 安装</span><br><span class="line">sudo apt-get install android-tools-fastboot</span><br></pre></td></tr></table></figure><p>fastboot 授权： <a href="https://developer.android.com/studio/run/device" target="_blank" rel="noopener">https://developer.android.com/studio/run/device</a></p><h1 id="授权"><a href="#授权" class="headerlink" title="授权"></a>授权</h1><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 打开usb 调试，连上 linux，列出所有 usb 设备。</span></span><br><span class="line">lsusb</span><br><span class="line"></span><br><span class="line">rachpt@pc ~ $ lsusb</span><br><span class="line">Bus 002 Device 001: ID 1d6b:0003 Linux Foundation 3.0 root hub</span><br><span class="line">Bus 001 Device 004: ID 0b95:1790 ASIX Electronics Corp. AX88179 Gigabit Ethernet</span><br><span class="line">Bus 001 Device 002: ID 2109:2812 VIA Labs, Inc. VL812 Hub</span><br><span class="line">Bus 001 Device 071: ID 046d:c534 Logitech, Inc. Unifying Receiver</span><br><span class="line">Bus 001 Device 088: ID 2717:ff48  </span><br><span class="line">Bus 001 Device 001: ID 1d6b:0002 Linux Foundation 2.0 root hub</span><br></pre></td></tr></table></figure><p>可以通过对比连接前后变化得知哪个是手机的 ID 和idProduct 。</p><p><code>Bus 001 Device 088: ID 2717:ff48</code> 这条即是。新手机有可能带有 Google 字样。</p><p>其中ID号：2717，idProduct号：ff48。</p><p>参考网上教程，需要建两个文件用于授权。</p><ol><li>第一个文件：</li></ol><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 先切换目录</span></span><br><span class="line"><span class="built_in">cd</span> /etc/udev/rules.d/ &amp;&amp; ls</span><br><span class="line"><span class="comment"># 新建一个叫 imx-android.rules 的文件。</span></span><br><span class="line"><span class="comment"># 也有说是叫 51-android.rules，等等</span></span><br><span class="line">sudo vim imx-android.rules</span><br><span class="line"><span class="comment"># 填入一下内容</span></span><br><span class="line">SUBSYSTEM==<span class="string">"usb"</span>, ATTRS&#123;idVendor&#125;==<span class="string">"填ID号"</span>, ATTRS&#123;idProduct&#125;==<span class="string">"填idProduct号"</span>,MODE=<span class="string">"0777"</span></span><br><span class="line"><span class="comment"># 后面的 0777 是因为我需要可执行权限。</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 最后加可执行权限</span></span><br><span class="line">sudo chmod +x imx-android.rules</span><br></pre></td></tr></table></figure><ol><li>第二个文件：</li></ol><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">mkdir ~/.android</span><br><span class="line">vim ~/.android/adb_usb.ini</span><br><span class="line"><span class="comment"># 添加ID号，16进制，0x+ID号</span></span><br><span class="line">0x2717</span><br></pre></td></tr></table></figure><p>重启adb。</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">adb <span class="built_in">kill</span>-server</span><br><span class="line"><span class="comment"># 可能需要 重新插拔一下 usb 线。</span></span><br><span class="line">adb start-server</span><br></pre></td></tr></table></figure><h1 id="黑域"><a href="#黑域" class="headerlink" title="黑域"></a>黑域</h1><p>开启黑域服务：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">adb -d shell sh /data/data/me.piebridge.brevent/brevent.sh</span><br></pre></td></tr></table></figure><h1 id="MIUI-广告"><a href="#MIUI-广告" class="headerlink" title="MIUI 广告"></a>MIUI 广告</h1><p>通过 adb 冻结 msa：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">adb shell pm <span class="built_in">disable</span>-user --user 0 com.miui.systemAdSolution <span class="comment"># 国内版</span></span><br><span class="line"></span><br><span class="line">adb shell pm <span class="built_in">disable</span>-user --user 0 com.miui.msa.global <span class="comment"># 国际版</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># disable 换成 enable 可解除冻结，当然也可以直接在手机上解除。</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 其他命令参考</span></span><br><span class="line">adb shell pm</span><br></pre></td></tr></table></figure><p><a href="http://www.miui.com/thread-15991867-1-1.html" target="_blank" rel="noopener">其他常见广告关闭方法</a> 。</p><h1 id="刷-TWRP"><a href="#刷-TWRP" class="headerlink" title="刷 TWRP"></a>刷 TWRP</h1><p>由于没有使用 windows，手边没有数据线，已经解锁的米8如何刷第三方 rec TWRP呢？</p><p>刷开发版，使用自带的 root，授权 本地终端，替换 recovery，然后卡刷 zip，搞定。</p><p>下载 <a href="https://www.miui.com/thread-15306132-1-1.html" target="_blank" rel="noopener">原贴链接</a>.</p><p>下载地址：<br>链接: <a href="https://pan.baidu.com/s/1cD_ya9pwDIFqrBuglHhNnw" target="_blank" rel="noopener">https://pan.baidu.com/s/1cD_ya9pwDIFqrBuglHhNnw</a> 密码: qc1s</p><p>这里记录一下。</p><ol><li><p>需要一个终端模拟器。<br>有个比较老的 超级终端，网上有汉化版，但是不能使用 方向键，各种不爽。</p><p>推荐使用 <a href="https://juicessh.com/" target="_blank" rel="noopener">juicessh</a>，免费版就够用了，这个可以使用本地终端模拟，记得给 root 权限，首次使用输入 <code>su</code> 获取。</p></li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">su</span><br><span class="line"></span><br><span class="line">cd /dev/block/platform/soc/</span><br><span class="line"></span><br><span class="line">ls</span><br><span class="line"></span><br><span class="line"># 找一下类似的文件夹，可能不是下面这个。</span><br><span class="line">cd 1d84000.ufshc/by-name</span><br><span class="line"></span><br><span class="line">ls</span><br><span class="line"># 可以看到 recovery这个链接文件。</span><br><span class="line"></span><br><span class="line"># 自己下载第三方 rec 的 img 文件到sd卡根目录</span><br><span class="line"></span><br><span class="line">dd if=/sdcard/recovery.img of=recovery</span><br><span class="line"></span><br><span class="line"># 成功后，使用 reboot 重启</span><br><span class="line"></span><br><span class="line">reboot recovery</span><br></pre></td></tr></table></figure><ol><li>卡刷 zip<br>由于上面改的只是临时rec文件，以后重启失效，需要从上面进入的 rec 卡刷 zip 包。<br>重点就是 那个 <code>dd</code> 命令。</li></ol><p><a href="http://www.miui.com/thread-11619860-1-1.html" target="_blank" rel="noopener">参考文档1</a>，<a href="https://www.cnblogs.com/shangdawei/p/4457607.html" target="_blank" rel="noopener">文档2</a>。</p>]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;记录几个在 Linux 上通过 adb 工具控制 MI8 的操作。以及无电脑卡刷 TWRP。&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
      <category term="linux" scheme="https://rachpt.github.io/categories/linux/"/>
    
    
      <category term="mi8" scheme="https://rachpt.github.io/tags/mi8/"/>
    
  </entry>
  
</feed>

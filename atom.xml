<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>rachpt</title>
  
  <subtitle>时间总是追不上</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://rachpt.github.io/"/>
  <updated>2017-11-02T14:52:27.000Z</updated>
  <id>https://rachpt.github.io/</id>
  
  <author>
    <name>rachpt</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title></title>
    <link href="https://rachpt.github.io/2018/03/01/%E7%85%A7%E7%89%87PDF%E4%BC%98%E5%8C%96/"/>
    <id>https://rachpt.github.io/2018/03/01/照片PDF优化/</id>
    <published>2018-03-01T01:52:54.130Z</published>
    <updated>2017-11-02T14:52:27.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="照片PDF优化成矢量版"><a href="#照片PDF优化成矢量版" class="headerlink" title="照片PDF优化成矢量版"></a>照片PDF优化成矢量版</h1><p>手抄好慢好累，身边又没有扫面仪，嘿嘿，我手机像素好，拍照–&gt;打印–&gt;OK。可是……</p><p>​    乌漆ma黑的，还有不相干的背景图，此处不放图。</p><blockquote><p>平日里，我们看到的PDF文件一般有两种类型，一种是矢量版的，也就是无论放大多少倍，字体都是清晰的（某些图片也是清晰的），另外的一种就是体积很大的扫描版文件，放大后字体就会模糊。由于PDF文件一般不易被修改，因此里面的内容相对的更有保障，同时阅读容易（只需浏览器即可），因而大多数人都喜欢使用这种格式。</p></blockquote><p>我想把用手机照片合成的PDF变成矢量打印清晰版，可以吗？</p><p>当然可以，就是有点折腾。需要的软件有：<code>Acrobat pro DC</code> <code>Photoshop</code> <code>ComicEnhancer Pro</code> ，啥你不会PS，没事就很简单的几个步骤，<code>ComicEnhancer Pro</code> 可是重点条件，生产力工具，百度即可得到绿色版。</p><ul><li>首先，将照片版PDF里面的照片提出出来（右键–&gt;另存 即可），导入PS，对照片的周围进行修改。使用<code>画笔工具</code> [快捷键 B]，<code>Alt 键</code> 吸取边缘部分白色，将差别很大的背景涂成接近一致的颜色，<code>[</code> <code>]</code> 可用于放大缩小画笔工具。</li></ul><p><img src="assets\pdf-ps2.png" alt="pdf-ps2"></p><p><img src="assets\pdf-ps1.png" alt="pdf-ps1"></p><ul><li>改完后大致如上图。接着，使用<code>ComicEnhancer Pro</code> 将所有的修改后的图片导入进行批处理优化。导入后如下所示。</li></ul><p><img src="assets\pdf-CE1.png" alt="pdf-CE1"></p><ul><li>接着调节一下<code>对比度</code> 到60% 左右，<code>亮度</code> 调到最大，接着在<code>其他</code> –&gt;<code>色彩</code> 里面设置颜色，<strong>色彩数 –&gt; <code>纯黑白</code>  阈值算法–&gt; <code>Wolf</code></strong> ，其他默认即可。效果如下。</li></ul><p><img src="assets\pdf-CE2.png" alt="pdf-CE2"></p><p><img src="assets\pdf-CE3.png" alt="pdf-CE3"></p><ul><li>至此优化基本完成。每一张图都保存一下，下面使用<code>Acrobat pro DC</code>  生成PDF文件，并进行增强优化。如下图所示。</li></ul><p><img src="assets\pdf-acrobat-1.png" alt="pdf-acrobat-1"></p><p><img src="assets\pdf-acrobat-2.png" alt="pdf-acrobat-2"></p><p><img src="assets\pdf-acrobat-03.png" alt="pdf-acrobat-03"></p><hr><p>至此已经全部完成。如果你的照片大小不完全一致，得到PDF各页之间可能有大小差异，可以选择打印，通过下面的设置，得到一份每页大小一致的PDF文件。</p><p><img src="assets\pdf-acrobat-3.png" alt="pdf-acrobat-3"></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;照片PDF优化成矢量版&quot;&gt;&lt;a href=&quot;#照片PDF优化成矢量版&quot; class=&quot;headerlink&quot; title=&quot;照片PDF优化成矢量版&quot;&gt;&lt;/a&gt;照片PDF优化成矢量版&lt;/h1&gt;&lt;p&gt;手抄好慢好累，身边又没有扫面仪，嘿嘿，我手机像素好，拍照–&amp;gt;打
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title></title>
    <link href="https://rachpt.github.io/2018/03/01/%E8%87%AA%E7%84%B6%E8%BE%A9%E8%AF%81%E6%B3%95%E6%A6%82%E8%AE%BA/"/>
    <id>https://rachpt.github.io/2018/03/01/自然辩证法概论/</id>
    <published>2018-03-01T01:52:38.035Z</published>
    <updated>2018-03-01T01:52:38.035Z</updated>
    
    <content type="html"><![CDATA[<p>老师一：欧亚昆<br><a href="mailto:outakun@126.com" target="_blank" rel="noopener">outakun@126.com</a><br>马克思主义学院</p><p>考核方法：</p><p>平时50%+考试50%</p><h1 id="换教室"><a href="#换教室" class="headerlink" title="换教室"></a>换教室</h1><p><a href="mailto:694876091@qq.com" target="_blank" rel="noopener">694876091@qq.com</a> 老师联系方式</p><p>9^5^~6~ <!--ggffg--></p><p>自然辩证法概论考试:<br>2018年1月17日 第20周周三晚 </p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;老师一：欧亚昆&lt;br&gt;&lt;a href=&quot;mailto:outakun@126.com&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;outakun@126.com&lt;/a&gt;&lt;br&gt;马克思主义学院&lt;/p&gt;
&lt;p&gt;考核方法：&lt;/p&gt;
&lt;p&gt;平时50%+考试50%
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title></title>
    <link href="https://rachpt.github.io/2018/02/28/%E8%87%AA%E7%84%B6%E8%BE%A9%E8%AF%81%E6%B3%95/"/>
    <id>https://rachpt.github.io/2018/02/28/自然辩证法/</id>
    <published>2018-02-28T03:12:39.745Z</published>
    <updated>2018-01-10T16:18:34.000Z</updated>
    
    <content type="html"><![CDATA[<p>摘要:证实与证伪作为科学的两种划界标准可以归结为科学命题的经验检验, 这种检验的实质在于用待检验命题或理论解释用于检验的可观察经验, 如此理解检验能避免不对称并不表明证伪更可行。单凭证实或证伪都不足以为科学划界。 </p><p>可错性与可死性</p><p>无错推论原则与无罪推论原则</p><p>数学真理 被称为条件真理</p><p>凡天鹅皆白<br>答:<br>天鹅概念没有包含羽毛颜色。</p><p>分析问题，  综合问题。</p><p>1 +2=3</p><p>如果看作分析问题，将3定义成1+2，那么就没有可错性，如果看作综合问题，则有可能错</p><p>如果将3定义成1+2，那么就是分析问题，如果从其他方面来看，比如1就是1，2就是2，加就是加，则有可能是综合问题。</p><p>先天综合问题</p><p>归纳法</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;摘要:证实与证伪作为科学的两种划界标准可以归结为科学命题的经验检验, 这种检验的实质在于用待检验命题或理论解释用于检验的可观察经验, 如此理解检验能避免不对称并不表明证伪更可行。单凭证实或证伪都不足以为科学划界。 &lt;/p&gt;
&lt;p&gt;可错性与可死性&lt;/p&gt;
&lt;p&gt;无错推论原则与
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title></title>
    <link href="https://rachpt.github.io/2018/02/28/%E5%BB%BA%E4%B8%80%E4%B8%AA%E4%B8%AA%E4%BA%BA%E7%BD%91%E5%9D%80%E9%9C%80%E8%A6%81%E8%8A%B1%E5%A4%9A%E5%B0%91%E6%97%B6%E9%97%B4%E4%BA%8Emoney%EF%BC%9F/"/>
    <id>https://rachpt.github.io/2018/02/28/建一个个人网址需要花多少时间于money？/</id>
    <published>2018-02-28T03:12:39.741Z</published>
    <updated>2018-02-07T11:23:49.000Z</updated>
    
    <content type="html"><![CDATA[<p>几年前，当我还是个电脑盲，在探索各种自定义界面的过程中了解到了博客这种东西</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;几年前，当我还是个电脑盲，在探索各种自定义界面的过程中了解到了博客这种东西&lt;/p&gt;

      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title></title>
    <link href="https://rachpt.github.io/2018/02/28/%E8%A7%A3%E5%86%B3WAMP%E6%90%AD%E5%BB%BAPHP%E7%8E%AF%E5%A2%83%E5%90%8E%E5%90%8E%E5%B1%80%E5%9F%9F%E7%BD%91%E5%85%B6%E4%BB%96%E6%9C%BA%E5%99%A8%E6%97%A0%E6%B3%95%E8%AE%BF%E9%97%AE%E7%9A%84%E9%97%AE%E9%A2%98/"/>
    <id>https://rachpt.github.io/2018/02/28/解决WAMP搭建PHP环境后后局域网其他机器无法访问的问题/</id>
    <published>2018-02-28T03:12:39.741Z</published>
    <updated>2017-11-01T11:52:01.000Z</updated>
    
    <content type="html"><![CDATA[<p>解决WAMP搭建PHP环境后后局域网其他机器无法访问的问题<br>刚安装wamp以后本地访问localhost或者127.0.0.1可以访问，但是如果局域网内其他电脑访问则出现403错误。从网上找了很多，各种说法都有了，却没几个好用的。解决问题方法如下：</p><p>1，首先确定关闭了防火墙并且80端口没有被占用</p><p>2，修改apache的httpd.conf文件，一共两处：</p><p>第一处</p><p>Options FollowSymLinks<br>AllowOverride None<br>Order deny,allow<br>Deny from all<br>Satisfy all</p><p>修改为：</p><p>Options FollowSymLinks<br>AllowOverride None<br>Order deny,allow</p><h2 id="Deny-from-all"><a href="#Deny-from-all" class="headerlink" title="Deny from all"></a>Deny from all</h2><p>Allow from all</p><p>##允许所有访问</p><p>Satisfy all</p><p>第二处</p><h2 id="onlineoffline-tag-don’t-remove"><a href="#onlineoffline-tag-don’t-remove" class="headerlink" title="onlineoffline tag - don’t remove"></a>onlineoffline tag - don’t remove</h2><p>Order Deny,Allow<br>Deny from all<br>Allow from 127.0.0.1</p><p>修改成：</p><h2 id="onlineoffline-tag-don’t-remove-1"><a href="#onlineoffline-tag-don’t-remove-1" class="headerlink" title="onlineoffline tag - don’t remove"></a>onlineoffline tag - don’t remove</h2><p>Order Deny,Allow</p><h1 id="Deny-from-all-1"><a href="#Deny-from-all-1" class="headerlink" title="Deny from all"></a>Deny from all</h1><h2 id="Allow-from-127-0-0-1"><a href="#Allow-from-127-0-0-1" class="headerlink" title="Allow from 127.0.0.1"></a>Allow from 127.0.0.1</h2><p>Allow from all</p><p>另外，如果使用DVWA的时候以上设置不起作用，因为htaccess限制了访问。解压DVWA以后放到主目录，将htaccess内规则修改如下：</p><p>order deny,allow<br>deny from none<br>allow from all<br>修改后重启apache，局域网内其他机器即可访问本机搭建的DVWA平台。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;解决WAMP搭建PHP环境后后局域网其他机器无法访问的问题&lt;br&gt;刚安装wamp以后本地访问localhost或者127.0.0.1可以访问，但是如果局域网内其他电脑访问则出现403错误。从网上找了很多，各种说法都有了，却没几个好用的。解决问题方法如下：&lt;/p&gt;
&lt;p&gt;1，
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title></title>
    <link href="https://rachpt.github.io/2018/02/28/%E6%9D%90%E6%96%99%E7%89%A9%E7%90%86%E7%AD%94%E6%A1%88/"/>
    <id>https://rachpt.github.io/2018/02/28/材料物理答案/</id>
    <published>2018-02-28T03:12:39.737Z</published>
    <updated>2018-01-02T02:49:38.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="自整理答案"><a href="#自整理答案" class="headerlink" title="自整理答案"></a>自整理答案</h1><h2 id="第一大题"><a href="#第一大题" class="headerlink" title="第一大题"></a>第一大题</h2><ul><li>第一题</li></ul><blockquote><p>所谓结构,是指材料系统内各组成单元之间的相互联系和相互作用方式。<br>从尺度上讲，分为宏观结构、显微结构、亚微观结构、微观结构等不同的层次。</p><p>宏观结构：人眼（借助放大镜）可分辨的结构范围，结构组成单元是相、颗粒、组成材料（孔隙、裂纹不同材料的组合与复合方式等）。<br>显微结构：光学显微镜分辨的结构范围，结构组成单元是相（相的种类、数量、形貌、相互关系等）。<br>亚微观结构：普通电子显微镜分辨的结构范围，结构组成单元是微晶粒、胶粒等粒子（单个粒子的形状、大小和分布）。<br>微观结构：高分辨电子显微镜分辨的结构范围，结构组成单元是原子、分子、离子或离子团等质点（质点在相互作用力下的聚集状态、排列形式）。</p><p>人们对结构层次的划分、理解、认识并不统一，有三层次论：宏观结构、亚微观结构、微观结构；</p></blockquote><ul><li>第二题</li></ul><blockquote><ul><li>金刚石</li></ul><p>金刚石晶体属立方晶系，是典型的原子晶体，每个碳原子都以sp3杂化轨道与另外四个碳原子形成共价键，构成正四面体。这是金刚石的面心立方晶胞的结构。<br>由于金刚石晶体中C─C键很强，所有价电子都参与了共价键的形成，晶体中没有自由电子，所以金刚石不仅硬度大，熔点高，而且不导电。</p><ul><li>石墨</li></ul><p>在石墨晶体中，碳原子以sp2杂化轨道和邻近的三个碳原子形成共价单键，构成六角平面的网状结构，这些网状结构又连成片层结构。层中每个碳原子均剩余一个未参加sp2杂化的p轨道，其中有一个未成对的p电子，同一层中这种碳原子中的m电子形成一个m中心m电子的大∏键(键)。这些离域电子可以在整个儿碳原子平面层中活动，所以石墨具有层向的良好导电导热性质。<br>石墨的层与层之间是以分子间力结合起来的，因此石墨容易沿着与层平行的方向滑动、裂开。石墨质软具有润滑性。<br>由于石墨层中有自由的电子存在，石墨的化学性质比金刚石稍显活泼。</p><ul><li>碳六十</li></ul><p>在C60分子中，每个碳原子以sp2杂化轨道与相邻的三个碳原子相连，剩余的未参加杂化的一个p轨道在C60球壳的外围和内腔形成球面大∏键，从而具有芳香性。</p><p>在球面上每个碳原子以杂化轨道与三个近邻碳原子形成共价键，每个碳原子还有一个2p电子未参与杂化，它不属于某一个共价键，具有金属键的性质</p><p>和石墨一样，<br>C60晶体是共价键、金属键和范德瓦尔斯键三键共存的结构</p><ul><li>碳纳米管</li></ul><p>碳纳米管壁上每个碳原子以杂化轨道与三个近邻碳原子形成共价键，每个碳原子还有一个2p电子未参与杂化，它不属于某一个共价键，具有金属键的性质，因此，碳纳米管中含有共价键和金属键二种键</p><ul><li>石墨烯</li></ul><p>可以理解为单层石墨</p><p>石墨烯中的每一个碳原子的四个价电子中只有三个价电子同其它原子形成共价键，而剩下的一个价电子在层上具有“自由电子”的行为，因此，石墨烯是电和热的良导体。</p></blockquote><ul><li>第三题</li></ul><blockquote><p><img src="https://ituku.tk/di/P5T9R/3801213fb80e7becf3bbe464292eb9389a506bd6.png" alt="来自百度"></p><p>如图所示，一个n重轴n经过点O并且和纸面垂直。晶体点阵中必然存在一个经过O的直线AA’ ，并且A与A’ 关于O对称。设向量OA的模为a。将向量OA绕n顺时针旋转2π/n得到向量OB，将向量OA’ 绕n逆时针旋转2π/n得到向量OB’ 。依据n重轴的定义，BB’肯定平行于AA’。设：BB’的模为k·a，则：k.a = 2a·Cos（2π/n），有 k = 2Cos（2π/n），其中Cos（2π/n）的绝对值小于1，所以k的绝对值小于2。根据平移对称性的定义，k必须是整数，所以k只能是-2,-1,0,1,2。</p><p>当k=-2时，Cos（2π/n）= -1，2π/n=180°，n=2。</p><p>当k=-1时，Cos（2π/n）= -1/2，2π/n=120°，n=3。</p><p>当k=-0时，Cos（2π/n）= 0，2π/n=90°，n=4。</p><p>当k=1时，Cos（2π/n）= 1/2，2π/n=60°，n=6。</p><p>当k=2时，Cos（2π/n）= 1，2π/n=360°，n=1。</p><p>所以晶体中只存在1,2,3,4,6重轴。</p><p>如果存在五次轴所形成的正五边形网孔以及围绕高于六次轴所形成的正多边形网孔（如正七边形、正八边形等），都不能毫无间隙地分布满整个平面，从能量上看是不稳定的；而且这些多边形网孔大多数不符合面网上结点所围成的网孔。所以在晶体中不可能存在五次及高于六次的对称轴</p></blockquote><h2 id="第二大题"><a href="#第二大题" class="headerlink" title="第二大题"></a>第二大题</h2><ul><li>第一问</li></ul><p>原子最外层电子由于原子核对其束缚很弱，当大量原子结合成晶体时，这些电子易摆脱原子核的束缚而成为共有化电子，而原子内层电子（芯电子）有较高的结合能，一般脱离不了原子核对其束缚，这些芯电子同原子核一起构成离子实，因此原子又可分为带正电的离子实和带负电的价电子两部分；</p><p>当N个原子彼此相距很远时，每个原子如同孤立的原子，当N个原子相互靠近形成固体时，相邻原子电子壳层间就有了一定程度的交叠，由于电子壳层的交叠，电子不再局限于某一个原子上，可以由一个原子转移到相邻的原子上去，因而，电子将可以在整个固体中运动，这种运动称为电子的公有化运动。</p><p>四 1。</p><blockquote><p>顺磁要符合CURIE-WEISS定律，所以顺磁磁化率的倒数对于温度应该是呈现线性关系。<br>抗磁性的磁化率与应该为负值，并且对于温度没有依赖关系<br>反铁磁在低温会出现一个尖峰。<br>而铁磁性的磁化率在转变温度以下会出现磁化率迅速的增长的趋势。<br>这些都是简单的判断方式，但是并不十分的准确。<br>还要搭配其他的测试方法进行研究。</p></blockquote>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;自整理答案&quot;&gt;&lt;a href=&quot;#自整理答案&quot; class=&quot;headerlink&quot; title=&quot;自整理答案&quot;&gt;&lt;/a&gt;自整理答案&lt;/h1&gt;&lt;h2 id=&quot;第一大题&quot;&gt;&lt;a href=&quot;#第一大题&quot; class=&quot;headerlink&quot; title=&quot;第一大题&quot;
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title></title>
    <link href="https://rachpt.github.io/2018/02/28/%E6%9D%90%E6%96%99%E5%8C%96%E5%AD%A6/"/>
    <id>https://rachpt.github.io/2018/02/28/材料化学/</id>
    <published>2018-02-28T03:12:39.737Z</published>
    <updated>2017-12-26T03:08:36.000Z</updated>
    
    <content type="html"><![CDATA[<p>19周讲ppt<br>5 - 6分钟</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;19周讲ppt&lt;br&gt;5 - 6分钟&lt;/p&gt;

      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title></title>
    <link href="https://rachpt.github.io/2018/02/28/linux%20%E5%88%9B%E5%BB%BA%E5%90%AF%E5%8A%A8%E5%9B%BE%E6%A0%87/"/>
    <id>https://rachpt.github.io/2018/02/28/linux 创建启动图标/</id>
    <published>2018-02-28T03:12:39.733Z</published>
    <updated>2017-12-31T15:26:43.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Linux-免安装程序配置"><a href="#Linux-免安装程序配置" class="headerlink" title="Linux 免安装程序配置"></a>Linux 免安装程序配置</h1><p>适用于基于debian 的 ubuntu ，以及 linux mint（强烈推荐）。</p><h2 id="Linux-创建程序图标"><a href="#Linux-创建程序图标" class="headerlink" title="Linux 创建程序图标"></a>Linux 创建程序图标</h2><p>这类linux的软件包是 <code>deb</code> 后缀，这是一种类似 windows 下的 exe 安装包文件，除此之外，还有一种一文件夹形式存在的软件包，其中的 <code>xxx.sh</code> 就是软件的可执行文件，类似与 windows 软件安装完成后其目录中的 exe 文件（软件快捷方式就是链接到这类文件的），这就如同 windows 平台的绿色免安装软件。</p><p>linux 用户软件一般放到 <code>/opt/</code> 目录，下面以<code>pycharm-edu</code> 为例：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">sudo mv -f pycharm-edu /opt/ <span class="comment"># 使用命令移动文件</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 然后到 /usr/share/applications/ 目录下创建 .desktop 文件</span></span><br><span class="line">sudo touch /usr/share/applications/pycharm.desktop <span class="comment">#创建空文件，当然也可以不创建，下马一步保存时可以创建。</span></span><br><span class="line">sudo gedit /usr/share/applications/pycharm.desktop <span class="comment"># 在其中写如如下内容</span></span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">[Desktop Entry]</span><br><span class="line">Version=1.0</span><br><span class="line">Name=pycharm  #显示的名字</span><br><span class="line">Exec=/opt/pycharm-edu/bin/pycharm.sh  # 软件路径</span><br><span class="line">Terminal=false</span><br><span class="line">Icon=/opt/pycharm-edu/bin/pycharm.png  # 软件图标</span><br><span class="line">Type=Application</span><br><span class="line">Categories=Development  # 软件分类</span><br></pre></td></tr></table></figure><p>保存即可，如果需要加入环境变量（直接在terminal中输入软件名字，即可打开软件），需要进行如下操作。</p><h2 id="加入环境变量"><a href="#加入环境变量" class="headerlink" title="加入环境变量"></a>加入环境变量</h2><p>方法一：用户主目录下的<code>.profile</code>或<code>.bashrc</code>文件（推荐） </p><p>登录到你的用户（非root），在终端输入：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo gedit ~/.profile   <span class="comment">#(or .bashrc)</span></span><br></pre></td></tr></table></figure><p>可以在此文件末尾加入PATH的设置如下：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">export</span> PATH=”<span class="variable">$PATH</span>:your path1:your path2 ...”</span><br></pre></td></tr></table></figure><p>保存文件，注销再登录，变量生效。<br>该方式添加的变量只对当前用户有效。 </p><p>方法二：在系统目录，进行类似操作。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">/etc/profile</span><br><span class="line"></span><br><span class="line">/etc /environment</span><br></pre></td></tr></table></figure><p> 在登录时,操作系统定制用户环境时使用的第一个文件 ,此文件为系统的每个用户设置环境信息,当用户第一次登录时,该文件被执行。第二个文件, 系统在读取你自己的profile前,设置环境文件的环境变量。 </p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;Linux-免安装程序配置&quot;&gt;&lt;a href=&quot;#Linux-免安装程序配置&quot; class=&quot;headerlink&quot; title=&quot;Linux 免安装程序配置&quot;&gt;&lt;/a&gt;Linux 免安装程序配置&lt;/h1&gt;&lt;p&gt;适用于基于debian 的 ubuntu ，以及 l
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title></title>
    <link href="https://rachpt.github.io/2018/02/28/linux%E7%AC%94%E8%AE%B0/"/>
    <id>https://rachpt.github.io/2018/02/28/linux笔记/</id>
    <published>2018-02-28T03:12:39.733Z</published>
    <updated>2017-11-25T08:53:21.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="linux-笔记"><a href="#linux-笔记" class="headerlink" title="linux 笔记"></a>linux 笔记</h1><ul><li>如何计算文件哈希<br><code>md5sum filename</code> 即可,更多:</li></ul><p>命令格式<br>md5sum [OPTION]… [FILE]… </p><p>命令选项<br>-b 或 –binary :把输入文件作为二进制文件看待。<br>-t 或 –text :把输入的文件作为文本文件看待（默认）。<br>-c 或 –check :用来从文件中读取md5信息检查文件的一致性。(不细说了参见info)<br>–status :这个选项和check一起使用,在check的时候，不输出，而是根据返回值表示检查结果。<br>-w 或 –warn :在check的时候，检查输入的md5信息又没有非法的行，如果有则输出相应信息。</p><p>例子<br>生产一个文件的md5值，md5sum filename &gt; filename.md5</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;linux-笔记&quot;&gt;&lt;a href=&quot;#linux-笔记&quot; class=&quot;headerlink&quot; title=&quot;linux 笔记&quot;&gt;&lt;/a&gt;linux 笔记&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;如何计算文件哈希&lt;br&gt;&lt;code&gt;md5sum filename&lt;/code&gt;
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>newPost</title>
    <link href="https://rachpt.github.io/2018/02/28/newPost/"/>
    <id>https://rachpt.github.io/2018/02/28/newPost/</id>
    <published>2018-02-28T02:41:04.000Z</published>
    <updated>2018-02-28T03:07:22.519Z</updated>
    
    <content type="html"><![CDATA[<p>测试文章</p><p>1</p><p>2</p><p>3</p><p>4</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;测试文章&lt;/p&gt;
&lt;p&gt;1&lt;/p&gt;
&lt;p&gt;2&lt;/p&gt;
&lt;p&gt;3&lt;/p&gt;
&lt;p&gt;4&lt;/p&gt;

      
    
    </summary>
    
    
      <category term="1" scheme="https://rachpt.github.io/tags/1/"/>
    
  </entry>
  
  <entry>
    <title>Olex2 使用笔记</title>
    <link href="https://rachpt.github.io/2017/12/21/Olex2%E4%BD%BF%E7%94%A8%E7%AC%94%E8%AE%B0/"/>
    <id>https://rachpt.github.io/2017/12/21/Olex2使用笔记/</id>
    <published>2017-12-21T12:00:00.000Z</published>
    <updated>2018-02-28T16:10:16.992Z</updated>
    
    <content type="html"><![CDATA[<h1 id="打开文件"><a href="#打开文件" class="headerlink" title="打开文件"></a>打开文件</h1><ul><li><code>File</code> –&gt; <code>Open</code>  , 找到     <code>~.ins</code> 文件，打开。</li></ul><h1 id="解结构"><a href="#解结构" class="headerlink" title="解结构"></a>解结构</h1><a id="more"></a><ul><li><code>Work</code> 中直接单击 <code>Solve</code> 即可自动解；</li><li>单击<code>Work</code> 右侧展开详情，选择<code>Solution Program</code> –&gt; <code>ShelXS</code> or <code>ShelXT</code> ,区别；</li><li>手动精修，单击<code>Refine</code> ,并展开详情；</li><li>左边窗口，鼠标<code>右键</code> 前后移动可以放大与缩小所有原子，<code>左键</code>单击不放左右可以旋转所有原子；</li><li>右键原子，第一项显示原子的相对质量，单击选中，重复取消选中，多选直接单击需要的原子即可，直接滚动鼠标滚轮，实现轻原子隐藏；</li><li>由重原子开始，选中其后，右侧<code>Tool Work</code> 标记名称，其中<code>...</code>可以 打开元素周期表；</li><li>每次标定等操作后点击<code>Refine</code> 精修一下，直到最上面的八个参量的值全变成绿色即可（d I R 等），R1小于10%为好；</li><li>最后如果有些多余的衍射点，需要使用最上面第一个<code>Edit</code>(图标铅笔)，在其中加上<code>OMIT -2 75</code> (此为[测试中心]给的参考值)，其它需要自己试，勾上<code>Refine</code> 里面的<code>Auto-update ..</code> ,然后再多次精修即可</li></ul><h1 id="保存数据"><a href="#保存数据" class="headerlink" title="保存数据"></a>保存数据</h1><p>暂无</p><h1 id="olex2-下载地址："><a href="#olex2-下载地址：" class="headerlink" title="olex2 下载地址："></a>olex2 下载地址：</h1><p><a href="http://www.olex2.org/olex2-distro/1.2/" target="_blank" rel="noopener">http://www.olex2.org/olex2-distro/1.2/</a> </p><p><a href="http://jupiter.plymouth.edu/~jsduncan/software/olex2.php" target="_blank" rel="noopener">http://jupiter.plymouth.edu/~jsduncan/software/olex2.php</a></p><p>shelx 插件下载网址：<a href="http://muchong.com/bbs/url.php?s=aHR0cDovL3NoZWx4LnVuaS1hYy5nd2RnLmRlL35nc2hlbGRyL2Jpbi8%3D&amp;_s=11cbe58c52112191#opennewwindow" target="_blank" rel="noopener">http://shelx.uni-ac.gwdg.de/~gsheldr/bin/</a>    </p><p><code>用户名：shelx 密码：I43212</code> 感谢木蚂蚁账号分享，密码中第一个是字母 i 。</p><p>linux 安装方法，将可执行文件移动到olex2中，给可执行权限。</p>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;打开文件&quot;&gt;&lt;a href=&quot;#打开文件&quot; class=&quot;headerlink&quot; title=&quot;打开文件&quot;&gt;&lt;/a&gt;打开文件&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;&lt;code&gt;File&lt;/code&gt; –&amp;gt; &lt;code&gt;Open&lt;/code&gt;  , 找到     &lt;code&gt;~.ins&lt;/code&gt; 文件，打开。&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&quot;解结构&quot;&gt;&lt;a href=&quot;#解结构&quot; class=&quot;headerlink&quot; title=&quot;解结构&quot;&gt;&lt;/a&gt;解结构&lt;/h1&gt;
    
    </summary>
    
      <category term="教程" scheme="https://rachpt.github.io/categories/%E6%95%99%E7%A8%8B/"/>
    
      <category term="软件" scheme="https://rachpt.github.io/categories/%E6%95%99%E7%A8%8B/%E8%BD%AF%E4%BB%B6/"/>
    
    
      <category term="olex2" scheme="https://rachpt.github.io/tags/olex2/"/>
    
  </entry>
  
  <entry>
    <title>ubuntu 学习笔记</title>
    <link href="https://rachpt.github.io/2017/12/18/ubuntu%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    <id>https://rachpt.github.io/2017/12/18/ubuntu学习笔记/</id>
    <published>2017-12-18T02:41:04.000Z</published>
    <updated>2018-02-28T02:20:43.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="查看系统版本命令"><a href="#查看系统版本命令" class="headerlink" title="查看系统版本命令"></a>查看系统版本命令</h1><ul><li><code>getconf LONG_BIT</code> 查看系统位数；</li><li><code>uname -a</code> 更详细的方法；</li><li><code>lsb_release -a</code> 系统详细版本情况。</li><li><code>w</code> 当前谁在登录。</li><li><code>last</code> 查看登录记录。登录信息记录在二进制 <code>/var/log/wtmp</code>文件中。</li><li><code>~/.bash_history</code> 中记录所有输入的命令。<a id="more"></a></li></ul><hr><h1 id="python-配置"><a href="#python-配置" class="headerlink" title="python 配置"></a>python 配置</h1><ul><li><code>python3 --version</code> 查看安装python版本，如果是3的；</li><li><code>sudo apt-get install python3-pip</code> 安装 pip ;</li><li><code>pip -V</code> 检查pip；</li><li>机遇用户的 默认版本切换</li></ul><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">ls /usr/bin/python*  <span class="comment">#显示所有 python</span></span><br><span class="line"></span><br><span class="line">vim ~/.bashrc <span class="comment">#编辑配置文件</span></span><br><span class="line"><span class="comment">#添加如下行 ，alias，别名。路径以上面显示的为准。</span></span><br><span class="line"><span class="built_in">alias</span> python=<span class="string">'/usr/bin/python3.5'</span></span><br></pre></td></tr></table></figure><h1 id="python-计算环境"><a href="#python-计算环境" class="headerlink" title="python 计算环境"></a>python 计算环境</h1><ul><li>​</li><li>​</li></ul><hr><h1 id="apt-get-使用ipv4"><a href="#apt-get-使用ipv4" class="headerlink" title="apt-get 使用ipv4"></a>apt-get 使用ipv4</h1><p>有时，您需要在APT包中禁用IPv6，只有在需要时，其他程序可以继续使用IPv6。 要在APT中禁用IPv6，请运行以下命令为APT创建一个配置文件。</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo nano /etc/apt/apt.conf.d/99force-ipv4</span><br></pre></td></tr></table></figure><p>将以下行复制并粘贴到文件中。</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Acquire::ForceIPv4 <span class="string">"true"</span>;</span><br></pre></td></tr></table></figure><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">apt-cache search package 搜索软件包</span><br><span class="line">apt-cache show package  获取包的相关信息，如说明、大小、版本等</span><br><span class="line">sudo apt-get install package 安装包</span><br><span class="line">sudo apt-get install package --reinstall   重新安装包</span><br><span class="line">sudo apt-get -f install   修复安装</span><br><span class="line">sudo apt-get remove package 删除包</span><br><span class="line">sudo apt-get remove package --purge 删除包，包括配置文件等</span><br><span class="line">sudo apt-get update  更新源</span><br><span class="line">sudo apt-get upgrade 更新已安装的包</span><br><span class="line">sudo apt-get dist-upgrade 升级系统</span><br><span class="line">apt-cache depends package 了解使用该包依赖那些包</span><br><span class="line">apt-cache rdepends package 查看该包被哪些包依赖</span><br><span class="line">sudo apt-get build-dep package 安装相关的编译环境</span><br><span class="line">apt-get <span class="built_in">source</span> package  下载该包的源代码</span><br><span class="line">sudo apt-get clean &amp;&amp; sudo apt-get autoclean 清理无用的包</span><br><span class="line">sudo apt-get check 检查是否有损坏的依赖</span><br></pre></td></tr></table></figure><h1 id="linux-常用编辑器"><a href="#linux-常用编辑器" class="headerlink" title="linux 常用编辑器"></a>linux 常用编辑器</h1><p>​    vi 属于基本编辑器，除此之外，有些发行版还会预装nano，vim等编辑器。<br><strong>vi命令</strong><br>​    <code>ESC</code> 切换到命令模式<br>​    <code>a A  i I</code> 这是个键在命令模式下却换到编辑模式<br>​    区别在于插入位置，常用 i 。<br>​    常用命令(同样适用于 vim )<br>​    <code>x</code> 删除一个字符，<br>​    <code>dd</code> 删除光标所在行，<br>​    <code>ZZ</code> 保持并退出，<br>​    <code>ZQ</code> 不保持退出。</p><p>​    底行命令使用 : 键进入，<br>​    <code>:wq</code>  保持并退出，<br>​    <code>:w</code>    只保存，不退出，<br>​    <code>:!q</code>  退出不保存，<br>​    <code>:set nu</code>   显示行号，<br>​    <code>:set</code>      语法高亮</p><p>​    <code>u</code>可以撤销一次操作。</p><p>​    <code>行号 + G</code> 跳转到相应行。 </p><p><strong>vim</strong></p><p><code>u</code>   撤销上一步的操作<br><code>Ctrl+r</code> 恢复上一步被撤销的操作</p><p>​    注意vi 下编辑模式不能使用delete backspace 键，<br>​    而vim 可以使用上面两键。</p><p>​    替换</p><p>语法为 :[addr]s/源字符串/目的字符串/[option]</p><blockquote><p>:s/vivian/sky/       替换当前行第一个 vivian 为 sky</p><p>:s/vivian/sky/g     替换当前行所有 vivian 为 sky</p></blockquote><p>全局替换命令为：:%s/源字符串/目的字符串/g</p><blockquote><p><strong>[addr] 表示检索范围，省略时表示当前行。</strong></p><p>如：“1，20” ：表示从第1行到20行；</p><p>“%” ：表示整个文件，同“1,$”；</p><p>“. ,$” ：从当前行到文件尾；</p><p><strong>s : 表示替换操作</strong></p><p><strong>[option] : 表示操作类型</strong></p><p>如：g 表示全局替换; </p><p>c 表示进行确认</p><p>p 表示替代结果逐行显示（Ctrl + L恢复屏幕）；</p><p>省略option时仅对每行第一个匹配串进行替换；</p><p>如果在源字符串和目的字符串中出现特殊字符，需要用”\”转义</p></blockquote><p><strong>下面是一些例子：</strong></p><p>#将That or this 换成 This or that<br>:%s/(That) or (this)/\u\2 or \l\1/</p><p> <strong>nano命令</strong></p><p>​    翻页</p><p>​    <code>Ctrl+Y</code>到上一页<br>​    <code>Ctrl+V</code>到下一页</p><p>帮助中的 <code>^</code> 表示<code>ctrl</code> 键（也可以连续按两次<code>esc</code> 键代替）， <code>M</code> 表示 <code>alt</code> 键。</p><p>​    显示行号 </p><p>打开 <code>/etc/nanorc</code> 将 <code># set constantshow</code> 前面的注释<code>#</code>号去掉即可。</p><p>​    保存</p><p>使用<code>Ctrl+O</code>来保存所做的修改</p><p>​    退出</p><p>按<code>Ctrl + X</code>   or  <code>q</code> </p><p> 部分来自: <a href="http://man.linuxde.net/nano" target="_blank" rel="noopener">http://man.linuxde.net/nano</a></p><hr><h1 id="PDF阅读软件-zathura"><a href="#PDF阅读软件-zathura" class="headerlink" title="PDF阅读软件 zathura"></a>PDF阅读软件 zathura</h1><p><code>~/.config/zathura/zathurarc</code> 用户配置文件与路径；</p><p><code>/etc/zathurarc</code>  全局配置文件与路径；</p><p>使用 <code>gedit ~/.config/zathura/zathurarc</code> 添加下面的配置命令，#号以及后面为注释。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">set adjust-open &quot;width&quot; #以宽度自适应打开</span><br><span class="line">set font &quot;Noto Sans CJK SC Regular 10&quot; #字体与字号</span><br><span class="line">set guioptions &quot;&quot; #GUI相关，留空可隐藏底部statusbar</span><br><span class="line">set window-title-basename true #只显示文件名，否则显示完整路径</span><br><span class="line">set incremental-search true #增强搜索，实时搜索</span><br><span class="line">set show-v-scrollbar true  #显示右侧进度条</span><br><span class="line">set selection-clipboard clipboard #粘贴版</span><br><span class="line">set window-height 760 #默认高度，像素</span><br><span class="line">set window-width 1300 #默认宽度</span><br><span class="line"></span><br><span class="line"># 更多请参考：https://github.com/lervag/dotfiles/blob/master/config/zathura/zathurarc</span><br></pre></td></tr></table></figure><h2 id="mint-18-3-的路径"><a href="#mint-18-3-的路径" class="headerlink" title="mint 18.3 的路径"></a>mint 18.3 的路径</h2><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">/etc/gnome/defaults.list <span class="comment">#保存全局打开方式路径</span></span><br><span class="line">/usr/share/applications <span class="comment">#保存 ，这两个是一样的</span></span><br><span class="line"></span><br><span class="line">～/.config/mimeapps.list  <span class="comment">#用户</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 添加</span></span><br><span class="line">application/pdf=xpdf.desktop</span><br></pre></td></tr></table></figure><h2 id="快捷键"><a href="#快捷键" class="headerlink" title="快捷键"></a>快捷键</h2><blockquote><p>f     高亮链接，按 相应数字 打开链接；<br>q    退出；<br># ^ 是 ctrl 键<br>^f     Scroll page down<br>^b     Scroll page up<br>^d    Scroll half a page down<br>^u    Scroll half a page up<br>r    Rotate the page<br>R    Reload the document<br>^n    Toggle statusbar visibility<br>^m    Toggle inputbar visibility<br>^r    inverted color /反色<br>space     半页<br>数字 + G        跳转页码<br>gg    最前<br>GG    最后</p></blockquote><h2 id="命令"><a href="#命令" class="headerlink" title="命令"></a>命令</h2><blockquote><p>:bmark xxx    创建书签xxx （长书签）<br>:blist xxx    打开bookmark<br>:bdelete xxx    删除书签<br>:q 退出<br><code>/word</code>         搜索word，使用 <code>n / N</code>  跳到下一个(上一个)结果，<br>/   ？    搜索 向前（向后）<br>:info    显示文档信息</p></blockquote><p>短命令书签 使用 <code>a letter or number</code>  ，先按 m 键，然后按短书签名，创建；</p><p>跳转先前的短书签，先按 <code>&#39;</code>  键，然后先前的字母或数字；</p><p>##关于复制问题</p><blockquote><p>I discovered that zathura is using the x11 primary selection as default instead of the actual clipboard. This can be changed by creating a <code>~/.config/zathura/zathurarc</code> file with the following content:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&gt; set selection-clipboard clipboard</span><br><span class="line">&gt;</span><br></pre></td></tr></table></figure></blockquote><blockquote><p> <a href="https://github.com/zegervdv/homebrew-zathura/issues/5" target="_blank" rel="noopener">https://github.com/zegervdv/homebrew-zathura/issues/5</a> </p></blockquote><p><a href="http://80x86.io/post/pdf-viewer-for-linuxer" target="_blank" rel="noopener">http://80x86.io/post/pdf-viewer-for-linuxer</a></p><hr><h1 id="mpv-播放就差笔记"><a href="#mpv-播放就差笔记" class="headerlink" title="mpv 播放就差笔记"></a>mpv 播放就差笔记</h1><h2 id="部分快捷键"><a href="#部分快捷键" class="headerlink" title="部分快捷键"></a>部分快捷键</h2><p><code>[</code> <code>]</code>  <code>{</code> <code>}</code>         播放速度相关，</p><p><code>backspace</code>         恢复播放速度，</p><p><code>f</code>                 全屏，</p><p><code>q</code>             退出，</p><p><code>Q</code>            保存播放位置退出，</p><p><code>9</code>  <code>0</code>         音量减小与增大，</p><p><code>space</code>        播放暂停，</p><p><code>T</code>             总在最前面切换，</p><p><code>s</code>            视频截图，包含字幕，</p><p><code>S</code>            视频截图，不带字幕，</p><p><code>alt + s</code>     自动逐帧视频截图，开关，</p><p><code>alt + 1</code>    100%视频大小，</p><p><code>alt + 2</code>     两倍视频大小，</p><p><code>alt + 0</code>      恢复默认大小，</p><p><code>up</code>              快进60s，</p><p><code>down</code>          快退60s，</p><p><code>right</code>          快进5秒，</p><p><code>left</code>           快退5秒，</p><h2 id="用户自定义"><a href="#用户自定义" class="headerlink" title="用户自定义"></a>用户自定义</h2><p><code>~/.config/mpv/input.conf</code>     快捷键文件路径，</p><p><a href="https://github.com/mpv-player/mpv/blob/master/etc/input.conf" target="_blank" rel="noopener">https://github.com/mpv-player/mpv/blob/master/etc/input.conf</a></p><hr><h1 id="常用小技巧"><a href="#常用小技巧" class="headerlink" title="常用小技巧"></a>常用小技巧</h1><p>长按<code>Alt</code> 键拖动看不到head bar的窗口。</p><p><code>cd ~</code>   返回home目录，注意root用户的目录与普通用户目录的区别。<br><code>sudo</code>  只能暂时切提权，5分钟。使用 <code>sudo -i</code> 可以切换到root账户。<br><code>pwd</code>     显示当前目录。<br><code>clear</code> 清屏。<br><code>cat name</code> 浏览<code>name</code>文件。</p><p><code>man xxx</code> 查看 xxx 程序的详细说明文档。</p><p><code>sudo apt-cache search apache | less</code> 用于搜索与 apache 相关的 包名（package name）。less 显示文件内容.</p><p>修改软件源 <code>sudo gedit /etc/apt/sources.list</code> ，<code>sudo apt-get update</code> 更显后使用此更新。</p><p><code>sudo chmod -R 777 *</code>   #对当前目录的所有文件以及文件夹授权 777，<code>-R</code>。</p><p>任务管理器打开命令：  <code>gnome-system-monitor</code> 。</p><p><code>sudo gsettings set.com.canonical.Uniyt always-show-menus true</code> 让 Unity 全局菜单始终可见，其中true改为 <code>false</code> 恢复。</p><p><code>sudo gnome-session-properties</code>  管理开机启动。</p><p><code>/usr/share/applications</code>  查看所有应用。</p><p><code>sudo apt-get install -y ubuntu-desktop</code>  修复桌面。</p><p>sudo 卸载应用</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get remove --purge 软件名称  </span><br><span class="line">sudo apt-get autoremove --purge 软件名称  </span><br><span class="line">sudo apt-get autoremove -purge xxxxx <span class="comment">#推荐</span></span><br><span class="line">sudo apt-get autoclean</span><br></pre></td></tr></table></figure><hr><p>16.04开始，用户可以实现改变启动器的位置，可以将启动器移到屏幕底部，但是无法移到右边或顶部。打开终端，然后输入下面这个命令，即可将启动器移到屏幕底部：<br><code>gsettings set com.canonical.Unity.Launcher launcher-position Bottom</code><br>如果你使用后，觉得不喜欢，还可以恢复到屏幕左边，只要运行：<br><code>gsettings set com.canonical.Unity.Launcher launcher-position Left</code></p><p><code>nohup COMMAND &amp;</code> 后台永久执行 COMMAND 命令。</p><p>添加到 <code>/etc/init.d/rc.local</code> ，实现开机执行sudo命令。</p><hr><h1 id="使用-ftp，以及-tar-打包与解压"><a href="#使用-ftp，以及-tar-打包与解压" class="headerlink" title="使用 ftp，以及 tar 打包与解压"></a>使用 ftp，以及 tar 打包与解压</h1><h2 id="连接"><a href="#连接" class="headerlink" title="连接"></a>连接</h2><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">ssh 2001:da8:8019:235::30</span><br><span class="line"><span class="comment"># enter username</span></span><br><span class="line"><span class="comment"># enter password</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 出现</span></span><br><span class="line">ftp&gt; ls <span class="comment">#查看目录，or ll</span></span><br><span class="line"><span class="built_in">cd</span> path <span class="comment"># 切换路径</span></span><br><span class="line"><span class="built_in">pwd</span><span class="comment"># 显示当前路径</span></span><br><span class="line"></span><br><span class="line">rm path <span class="comment"># 删除文件</span></span><br><span class="line">rm -r path <span class="comment">#删除文件夹</span></span><br></pre></td></tr></table></figure><h2 id="客户端常用命令"><a href="#客户端常用命令" class="headerlink" title="客户端常用命令"></a>客户端常用命令</h2><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">get test.md <span class="comment">#下载远程文件到本地</span></span><br><span class="line"></span><br><span class="line">put test.txt <span class="comment">#上传单个本地文件到远程服务</span></span><br><span class="line">mput file  <span class="comment">#上传多个文件</span></span><br></pre></td></tr></table></figure><h2 id="打包与解包"><a href="#打包与解包" class="headerlink" title="打包与解包"></a>打包与解包</h2><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#.tar</span></span><br><span class="line">tar xvf FileName.tar <span class="comment">#解包</span></span><br><span class="line">tar cvf FileName.tar DirName <span class="comment"># 打包</span></span><br><span class="line"></span><br><span class="line">tar czvf my.tar file1  <span class="comment">#单个文件压缩打包 </span></span><br><span class="line">tar czvf my.tar file1 file2 ... <span class="comment">#多个文件压缩打包 </span></span><br><span class="line">tar czvf my.tar dir1  <span class="comment">#单个目录压缩打包 </span></span><br><span class="line">tar czvf my.tar dir1 dir2 <span class="comment">#多个目录压缩打包 </span></span><br><span class="line">tar xzvf my.tar <span class="comment">#解包至当前目录</span></span><br><span class="line"></span><br><span class="line">tar -cvf get.tar PEA_I_* PMA_I_* --exclude *.check <span class="comment">#排除特定后缀文件</span></span><br></pre></td></tr></table></figure><hr><h1 id="PASH环境变量的设置"><a href="#PASH环境变量的设置" class="headerlink" title="PASH环境变量的设置"></a>PASH环境变量的设置</h1><p>方法一：用户主目录下的<code>.profile</code>或<code>.bashrc</code>文件（推荐） </p><p>登录到你的用户（非root），在终端输入：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo gedit ~/.profile   <span class="comment">#(or .bashrc)</span></span><br></pre></td></tr></table></figure><p>可以在此文件末尾加入PATH的设置如下：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">export</span> PATH=”<span class="variable">$PATH</span>:your path1:your path2 ...”</span><br></pre></td></tr></table></figure><p>保存文件，注销再登录，变量生效。<br>该方式添加的变量只对当前用户有效。 </p><p>方法二：在系统目录，进行类似操作。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">/etc/profile</span><br><span class="line"></span><br><span class="line">/etc /environment</span><br></pre></td></tr></table></figure><p> 在登录时,操作系统定制用户环境时使用的第一个文件 ,此文件为系统的每个用户设置环境信息,当用户第一次登录时,该文件被执行。第二个文件, 系统在读取你自己的profile前,设置环境文件的环境变量。 </p><p> 设置系统变量 PATH 方法：</p><p><code>/etc/environmet</code> 中PATH 后面引号中添加，使用<code>:</code> 分隔不同的路径。</p><p>关于环境变量</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">1. $HOME是一个环境变量，它代表当前登录的用户的主文件夹（就是家目录的那个）</span><br><span class="line">2. $HOME/bin当然就是主文件夹下的bin子目录（注意不是根目录的那个）</span><br><span class="line">3. PATH=$PATH:$HOME/bin这句是设置PATH环境变量（设置环境变量用等号），首先:冒号是分割符（记得Windows上面也有PATH环境变量，Windows的路径之间的分隔符是;分号），$PATH:$HOME/bin表示在保留原来的$PATH环境变量的基础上，再增加$HOME/bin这个路径作为新的$PATH环境变量。</span><br></pre></td></tr></table></figure><hr><h1 id="GIMP-相关"><a href="#GIMP-相关" class="headerlink" title="GIMP 相关"></a>GIMP 相关</h1><p><strong>使用中文界面</strong>， 全称 (The GNU Image Manipulation Program)</p><p><code>用 LANGUAGE=zh_CN gimp 启动，或者LANG=zh_CN gimp</code> ，然后在选择中文（不行就是阿里的源，<code>sudo apt-get gimp</code>重装一下）。</p><p>gimp裁剪图片，使用快捷键 <code>shift + c</code>。<br>单窗口模式，在顶部 窗口 菜单下 启用单窗口模式。</p><h2 id="GIMP-使用教程"><a href="#GIMP-使用教程" class="headerlink" title="GIMP 使用教程"></a><strong>GIMP</strong> 使用教程</h2><ol><li>拖到最左边的<code>工具列上</code>，打开一张新的图片；</li><li><code>ctrl + shift a</code> </li><li><code>矩形选择</code> 和 <code>椭圆选择</code>，使用ctrl减选，shift加选；</li><li><code>自由选择</code> 工具将ps的 套索工具 和 多边形套索 工具结合，左键直接画是套索，而单击是多边形套索；</li><li><code>模糊选择</code> 工具和 <code>按颜色选择</code> 工具则是把ps 魔棒 工具给分拆；</li><li>​</li></ol><hr><h1 id="安装Arc-GTK主题-还是不要装的好"><a href="#安装Arc-GTK主题-还是不要装的好" class="headerlink" title="安装Arc GTK主题 还是不要装的好"></a>安装Arc GTK主题 <del>还是不要装的好</del></h1><ol><li>先添加 Arc GTK theme 源</li></ol><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo sh -c <span class="string">"echo 'deb http://download.opensuse.org/repositories/home:/Horst3180/xUbuntu_16.04/ /' &gt;&gt; /etc/apt/sources.list.d/arc-theme.list"</span></span><br></pre></td></tr></table></figure><ol><li>安装软件源的密钥，否者无法正常使用</li></ol><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">wget http://download.opensuse.org/repositories/home:Horst3180/xUbuntu_16.04/Release.key</span><br><span class="line">sudo apt-key add - &lt; Release.key</span><br></pre></td></tr></table></figure><ol><li>安装 Arc GTK 主题</li></ol><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo apt update</span><br><span class="line">sudo apt install arc-theme</span><br></pre></td></tr></table></figure><ol><li>安装 Unity Tweak Tool</li></ol><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt install unity-tweak-tool</span><br></pre></td></tr></table></figure><hr><h1 id="ssh-使用"><a href="#ssh-使用" class="headerlink" title="ssh 使用"></a>ssh 使用</h1><p>在终端远程连接其他ubuntu系统</p><p>两台设备先安装ssh server和 clicent</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get install openssh-client </span><br><span class="line">sudo apt-get install openssh-server</span><br></pre></td></tr></table></figure><p>启动于停止service</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">sudo /etc/init.d/ssh start </span><br><span class="line"><span class="comment">#或者 </span></span><br><span class="line">sudo service ssh start  </span><br><span class="line">sudo /etc/init.d/ssh stop </span><br><span class="line">sudo /etc/init.d/ssh restart</span><br></pre></td></tr></table></figure><p>client 使用下面的命令连接 sever</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">ssh 用户名@ip </span><br><span class="line">ssh -l 用户名 ip</span><br><span class="line"></span><br><span class="line"><span class="comment"># 文件交换</span></span><br><span class="line"><span class="comment">#1.上传[如果目录 使用 scp -r ]</span></span><br><span class="line">scp <span class="string">'/home/rachpt/desktop/1.png'</span> rc@10.42.0.1:/var/www/new/images/news</span><br><span class="line"><span class="comment">#2.下载</span></span><br><span class="line">scp -r rc@10.42.0.1:/var/www/remote_dir/（远程目录） /var/www/local_dir（本地目录）</span><br></pre></td></tr></table></figure><p>允许 root 远程登录，修改server配置文件</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">sudo gedit /etc/ssh/sshd_config</span><br><span class="line"></span><br><span class="line">修改</span><br><span class="line"><span class="comment">#PermitRootLogin without-password</span></span><br><span class="line">PermitRootLogin yes</span><br><span class="line"></span><br><span class="line">然后重启</span><br><span class="line">sudo systemctl restart ssh.service</span><br></pre></td></tr></table></figure><p>查看ssh 状态</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">ps -e |grep ssh </span><br><span class="line"></span><br><span class="line"><span class="comment">#看到sshd则说明ssh-server已经安装启动</span></span><br></pre></td></tr></table></figure><hr><h1 id="配置-FTP-sever"><a href="#配置-FTP-sever" class="headerlink" title="配置 FTP sever"></a>配置 FTP sever</h1><p>linux ftp服务器软件有 vsftpd ，pure-ftpd ，proftp 。</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#安装</span></span><br><span class="line">sudo apt-get install vsftpd</span><br><span class="line"></span><br><span class="line"><span class="comment">#控制命令</span></span><br><span class="line">sudo /etc/init.d/vsftpd start</span><br><span class="line">sudo /etc/init.d/vsftpd stop</span><br><span class="line">sudo /etc/init.d/vsftpd restart</span><br><span class="line"><span class="comment">#或者类似</span></span><br><span class="line">sudo service vsftpd restart</span><br><span class="line"></span><br><span class="line"><span class="comment">#多了ftp用户组和ftp用户</span></span><br><span class="line">sudo cat /etc/group</span><br><span class="line">sudo cat /etc/passwd</span><br><span class="line"></span><br><span class="line"><span class="comment">#ftp服务器的目录位置在 /srv/ftp，这也是匿名用户访问时的根目录。 </span></span><br><span class="line"><span class="comment">#使用下列命令来间接更改目录</span></span><br><span class="line"><span class="built_in">cd</span> /srv</span><br><span class="line">sudo rm -d ftp</span><br><span class="line"><span class="comment"># 挂载家目录</span></span><br><span class="line"><span class="built_in">cd</span> ~/</span><br><span class="line">sudo mkdir ftp</span><br><span class="line"><span class="comment"># ln -s 为文件创件符号连接，非硬连接.</span></span><br><span class="line"><span class="built_in">cd</span> ~</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#配置</span></span><br><span class="line">sudo gedit /etc/vsftpd.conf</span><br><span class="line"></span><br><span class="line"><span class="comment">#允许匿名用户登录</span></span><br><span class="line">anonymous_enable=YES</span><br><span class="line"><span class="comment">#允许本地用户登录</span></span><br><span class="line">local_enable=YES</span><br><span class="line"><span class="comment">#开启全局上传</span></span><br><span class="line">write_enable=YES</span><br><span class="line"><span class="comment">#允许匿名用户上传文件</span></span><br><span class="line">anon_upload_enable=YES  </span><br><span class="line"><span class="comment">#充许匿名用户新建文件夹</span></span><br><span class="line">anon_mkdir_write_enable=YES</span><br><span class="line"></span><br><span class="line"><span class="comment">#加点banner提示</span></span><br><span class="line">ftpd_banner=Hello~~ </span><br><span class="line"></span><br><span class="line"><span class="comment">#FTP服务器最大承载用户</span></span><br><span class="line">max_clients=100</span><br><span class="line"></span><br><span class="line"><span class="comment">#限制每个IP的进程</span></span><br><span class="line">max_per_ip=5</span><br><span class="line"></span><br><span class="line"><span class="comment">#最大传输速率(b/s)</span></span><br><span class="line">local_max_rate=256000</span><br><span class="line"></span><br><span class="line"><span class="comment">#隐藏帐号</span></span><br><span class="line">hide_ids=YES </span><br><span class="line"></span><br><span class="line"><span class="comment">#启动chroot列表(Change root)</span></span><br><span class="line">chroot_list_enable=YES</span><br><span class="line"></span><br><span class="line"><span class="comment">#指定列表位置(我这用的是默认地址)</span></span><br><span class="line">chroot_list_file=/etc/vsftpd.chroot_list</span><br><span class="line">ssup</span><br><span class="line"><span class="comment">#这句默认设置里是没有的，自己加</span></span><br><span class="line">user_config_dir=/etc/自己定义一个设置个别用户用的文件夹地址</span><br></pre></td></tr></table></figure><hr><p>#文件共享</p><h2 id="samba-文件共享服务"><a href="#samba-文件共享服务" class="headerlink" title="samba 文件共享服务"></a><strong>samba 文件共享服务</strong></h2><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">sudo apt install samba   <span class="comment">#安装samba服务</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#更改配置文件</span></span><br><span class="line">sudo vi /etc/samba/smb.conf </span><br><span class="line"></span><br><span class="line"><span class="comment">#其中 ` ; ` 注释行，</span></span><br></pre></td></tr></table></figure><hr><h1 id="字体"><a href="#字体" class="headerlink" title="字体"></a>字体</h1><p>在终端输入以下命令进行字体安装：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">wget -O get-fonts.sh.zip http://files.cnblogs.com/DengYangjun/get-fonts.sh.zip</span><br><span class="line"></span><br><span class="line">unzip -o get-fonts.sh.zip 1&gt;/dev/null</span><br><span class="line"></span><br><span class="line">chmod a+x get-fonts.sh</span><br><span class="line"></span><br><span class="line">./get-fonts.sh</span><br></pre></td></tr></table></figure><p>如果要删除已下载的字体安装脚本，执行以下命令：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rm get-fonts.sh get-fonts.sh.zip 2&gt;/dev/null</span><br></pre></td></tr></table></figure><p>如果要恢复系统默认的字体，执行以下命令：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> /etc/fonts/conf.avail</span><br><span class="line"></span><br><span class="line">sudo mv 51-local.conf.old 51-local.conf 2&gt;/dev/null</span><br><span class="line"></span><br><span class="line">sudo mv 69-language-selector-zh-cn.conf.old 69-language-selector-zh-cn.conf 2&gt;/dev/null</span><br><span class="line"></span><br><span class="line">sudo rm -f -r /usr/share/fonts/truetype/myfonts 2&gt;/dev/null</span><br></pre></td></tr></table></figure><p>记录以备用。<br><a href="https://www.cnblogs.com/jaxu/p/5565326.html" target="_blank" rel="noopener">https://www.cnblogs.com/jaxu/p/5565326.html</a></p><hr><h1 id="中文语言下修改-home-文件夹-英文路径"><a href="#中文语言下修改-home-文件夹-英文路径" class="headerlink" title="中文语言下修改 home 文件夹 英文路径"></a>中文语言下修改 home 文件夹 英文路径</h1><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nano ～/.config/user-dirs.dirs <span class="comment"># 修改配置文件，也可以使用gedit等编辑器代替nano</span></span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">XDG_DESKTOP_DIR=&quot;$HOME/desktop&quot;</span><br><span class="line">XDG_DOWNLOAD_DIR=&quot;$HOME/download&quot;</span><br><span class="line">XDG_TEMPLATES_DIR=&quot;$HOME/template&quot;</span><br><span class="line">XDG_PUBLICSHARE_DIR=&quot;$HOME/public&quot;</span><br><span class="line">XDG_DOCUMENTS_DIR=&quot;$HOME/document&quot;</span><br><span class="line">XDG_MUSIC_DIR=&quot;$HOME/music&quot;</span><br><span class="line">XDG_PICTURES_DIR=&quot;$HOME/picture&quot;</span><br><span class="line">XDG_VIDEOS_DIR=&quot;$HOME/video&quot;</span><br></pre></td></tr></table></figure><p>或者使用 暂时改为英文环境，再改回中文：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">export</span> LANG=en_US  <span class="comment">#step 1</span></span><br><span class="line"></span><br><span class="line">xdg-user-dirs-gtk-update  <span class="comment">#step 2</span></span><br><span class="line"><span class="comment"># 跳出对话框询问是否将目录转化为英文路径,同意并关闭.</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">export</span> LANG=zh_CN  <span class="comment">#step 3</span></span><br><span class="line"><span class="comment">#重起系统.系统会提示是否把转化好的目录改回中文.选择不再提示。</span></span><br></pre></td></tr></table></figure><hr><p>ubuntu 常用软件</p><ul><li><code>htop</code>  友好查看系统负载与进程， top 的加强版，一般 terminal 使用 q 键退出。</li><li><code>nload</code> 监视网速，常用命令 <code>nload -u M</code> # 以MByte 为单位，也可以用 K 等，回车切换其他网卡。</li><li><code>System monitor Indicator</code>  可以在状态栏以数字形式显示网速负载等信息。</li></ul><hr><h1 id="nginx-配置"><a href="#nginx-配置" class="headerlink" title="nginx 配置"></a>nginx 配置</h1><p><code>locate nginx</code> 列出所有相关文件位置；</p><p><code>/etc/nginx/nginx.conf</code>  服务器配置文件路径；</p><p><code>/etc/nginx/sites-available/default</code>  重定向配置文件路径；</p><p><code>/etc/nginx/sites-enabled/default</code>  这个应该是测试通过后的copy；</p><p><code>nginx -t</code> 用于测试配置文件是否正确；</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">server &#123;</span><br><span class="line">        listen       80;</span><br><span class="line">        server_name  localhost;</span><br><span class="line">        root /var/www;</span><br><span class="line">        index index.php index.html;</span><br><span class="line">        location / &#123;</span><br><span class="line">                try_files $uri $uri/ =404;</span><br><span class="line">        &#125;</span><br><span class="line"># 重定向</span><br><span class="line">        if ( $request_uri = &quot;/&quot; ) &#123;</span><br><span class="line">                rewrite &quot;/&quot; http://rachpt.iok.la/new/ break;</span><br><span class="line">        &#125; </span><br><span class="line"># 404 等页面重定向</span><br><span class="line">        error_page 404 http://rachpt.iok.la/new/hide/r404.php;</span><br><span class="line">        error_page 403 http://rachpt.iok.la/new/hide/r403.php;</span><br><span class="line">        error_page 501 502 503 504 /50x.html;</span><br><span class="line">        location = /50x.html &#123;</span><br><span class="line">                root /var/www;</span><br><span class="line">        &#125;</span><br><span class="line"># php连接部分</span><br><span class="line">        location ~ \.php$ &#123;</span><br><span class="line">                try_files $uri =404;</span><br><span class="line">                fastcgi_pass unix:/var/run/php/php7.0-fpm.sock;</span><br><span class="line">                fastcgi_index index.php;</span><br><span class="line">                fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;</span><br><span class="line">                include fastcgi_params;</span><br><span class="line">        &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>更改<code>/etc/nginx/nginx.conf</code>在http定义区域加入： <code>fastcgi_intercept_errors on;</code> ，注意末尾分号。</p><h1 id="ImageMagic-使用笔记"><a href="#ImageMagic-使用笔记" class="headerlink" title="ImageMagic 使用笔记"></a>ImageMagic 使用笔记</h1><h2 id="一些快捷键"><a href="#一些快捷键" class="headerlink" title="一些快捷键"></a><strong>一些快捷键</strong></h2><p>space        显示下一张图片</p><p>backspace    显示上一张图片</p><p>h            水平翻转</p><p>v             垂直翻转</p><p>/            顺时针旋转90度</p><p>\            逆时针旋转90度</p><p>>            放大</p><p>&lt;            缩小</p><p>F7            模糊图片</p><p>Alt+s        把图片中间的像素旋转</p><p>Ctrl+s        图象另存</p><p>Ctrl+d        删除图片</p><p>q            退出</p><h2 id="display"><a href="#display" class="headerlink" title="display"></a><strong>display</strong></h2><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">display foo.png  <span class="comment">#显示图片</span></span><br><span class="line"></span><br><span class="line">display *.png  <span class="comment">#如果你要显示多个文件，你可以使用通配符</span></span><br><span class="line"></span><br><span class="line">display -delay 5 *   <span class="comment">#幻灯片</span></span><br></pre></td></tr></table></figure><h2 id="import-截屏"><a href="#import-截屏" class="headerlink" title="import 截屏"></a><strong>import</strong> 截屏</h2><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">import foo.png<span class="comment">#截取矩形区域，保存为 foo.png，</span></span><br><span class="line">import -pause 3 -frame foo.png<span class="comment">#截取程序的窗口。-frame外框，-pause获得焦点才开始截图，</span></span><br><span class="line">import -rotate 30 -pause 3 -frame foo.png<span class="comment">#倾斜窗口 30d度，</span></span><br><span class="line">import -pause 3 -window root screen.png<span class="comment">#截取整个屏幕，暂停3秒。</span></span><br></pre></td></tr></table></figure><h1 id="Fit2D-linux版下载地址"><a href="#Fit2D-linux版下载地址" class="headerlink" title="Fit2D linux版下载地址"></a>Fit2D linux版下载地址</h1><p><a href="http://ftp.esrf.eu/pub/expg/FIT2D/" target="_blank" rel="noopener">http://ftp.esrf.eu/pub/expg/FIT2D/</a> </p><p>绑定两个地址：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo mount --<span class="built_in">bind</span> /mnt/smb/ /srv/ftp/<span class="built_in">test</span>/  <span class="comment">#将smb 链接到test</span></span><br><span class="line">sudo umount /srv/ftp/<span class="built_in">test</span>/ <span class="comment">#取消test的链接</span></span><br></pre></td></tr></table></figure><h1 id="花生壳"><a href="#花生壳" class="headerlink" title="花生壳"></a>花生壳</h1><p>安装<br>32位：<strong>dpkg -i phddns_i386.deb</strong><br>64位：<strong>dpkg -i phddns_3.0_x86_64.deb</strong></p><p>卸载：<strong>dpkg -r phddns</strong></p><p><strong>phddns start</strong>（启动）| <strong>stop</strong>（停止）| <strong>status</strong>（状态）| <strong>restart</strong>（重启）|<br><strong>phddns reset</strong>（重置）<br><strong>phddns version</strong>（版本）</p><h1 id="Texmaker"><a href="#Texmaker" class="headerlink" title="Texmaker"></a>Texmaker</h1><ol><li>在弹出的文件管理器下进入<code>usr/share/applications/texmaker</code>路径.</li><li>选中Texmaker的标签,右击鼠标,点中属性.</li></ol><p>然后将Command一栏中的<code>texmaker %F</code>替换为 <code>env UBUNTU_MENUPROXY= texmaker %F</code> 可解决Texmaker<strong>快捷键失效问题</strong>。</p><h1 id="mv-命令"><a href="#mv-命令" class="headerlink" title="mv 命令"></a>mv 命令</h1><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">mv file_2.txt file_3.txt file_4.txt /home/rc/document <span class="comment">#移动多个文件到doc</span></span><br><span class="line">mv -i file_1.txt /home/rc/document <span class="comment">#交互式移动，提醒</span></span><br><span class="line">mv -v *.txt /home/rc/document <span class="comment">#打印移动信息</span></span><br><span class="line">mv -vn *.txt /home/rc/document <span class="comment">#n 移动不重复的</span></span><br><span class="line">mv -vu *.txt /home/rc/document <span class="comment">#u 移动,时间戳更新的覆盖原来的</span></span><br><span class="line">mv -vb *.txt /home/rc/document <span class="comment">#b 移动,以～备份原来的</span></span><br><span class="line">mv -f *.txt /home/rc/document <span class="comment">#无条件覆盖</span></span><br></pre></td></tr></table></figure><h1 id="终端中的链接符用法"><a href="#终端中的链接符用法" class="headerlink" title="终端中的链接符用法"></a>终端中的链接符用法</h1><ul><li><p><strong>&amp;</strong>    的作用是使命令在后台运行。</p><p>只要在命令后面跟上一个空格和 ‘&amp;’。你可以一口气在后台运行多个命令。</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">ping c5 www.tecmint.com &amp;</span><br><span class="line">sudo apt-get update &amp; mkdit <span class="built_in">test</span> &amp;</span><br></pre></td></tr></table></figure><ul><li><p><strong>;</strong>    一口气运行几个命令。</p><p>命令顺序执行。</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">apt-get update ; apt-get upgrade ; mkdir <span class="built_in">test</span></span><br></pre></td></tr></table></figure><p>  <strong>&amp;&amp;</strong>    与操作符。</p></li></ul><p>如果第一个命令执行成功，才会执行第二个命令。</p></li><li><p><strong>||</strong>    或操作符 。</p><p>如果第一个命令执行失败，才会执行第二个命令。</p></li></ul><ul><li><p><strong>！</strong>    非操作符。</p><p>执行除了提供的条件外的所有的语句。</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rm -r !(*.html) <span class="comment">#删除除了 ‘html’之外的所有文件</span></span><br></pre></td></tr></table></figure><p>   <strong>&amp;&amp; – ||</strong>    与或操作符。</p><p>‘与’和‘或’操作符的组合，它很像‘if-else‘语句。</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">ping -c3 www.tecmint.com &amp;&amp; <span class="built_in">echo</span> <span class="string">"Verified"</span> || <span class="built_in">echo</span> <span class="string">"Host Down"</span></span><br><span class="line"><span class="comment"># ping tecmint.com，如果成功打印‘已验证’，否则打印‘主机故障’。</span></span><br></pre></td></tr></table></figure><p>   <strong>|</strong>    管道操作符。</p><p>将第一个命令的输出作为第二个命令的输入.</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ls -l | less</span><br></pre></td></tr></table></figure><pre><code>**{}**    命令合并操作符。</code></pre><p>合并两个或多个命令，第二个命令依赖于第一个命令的执行。</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">[ -f /home/tecmint/Downloads/xyz.txt ] || touch /home/tecmint/Downloads/xyz.txt; <span class="built_in">echo</span> <span class="string">"The file does not exist"</span></span><br><span class="line"></span><br><span class="line">[ -f /home/tecmint/Downloads/xyz1.txt ] || &#123; touch /home/tecmint/Downloads/xyz.txt; <span class="built_in">echo</span> <span class="string">"The file does not exist"</span> &#125; </span><br><span class="line"> </span><br><span class="line"><span class="comment">#检查一下文件‘xyz.txt’是否在Downloads目录下，如果不存在则创建之并输出提示信息。</span></span><br></pre></td></tr></table></figure><pre><code>**()**    优先操作符。</code></pre><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">(Command_x1 &amp;&amp; Command_x2) || (Command_x3 &amp;&amp; Command_x4)</span><br></pre></td></tr></table></figure><pre><code>**\\**    连接符。</code></pre><p>太长而分成多行命令。</p><p>​</p></li></ul><h1 id="ls-命令"><a href="#ls-命令" class="headerlink" title="ls 命令"></a>ls 命令</h1><p>-h    参数意味着便于人识别，单位 1024.</p><p>-si    与h类似，单位 1000。</p><p>-S    以文件大小排序。</p><p>–block-size=K <em>M G T P …</em> 指定单位。两个-，无空格。</p><p>-a    显示隐藏文件，linux种使用“.”开头东阿是隐藏文件。</p><p>-d    只列出目录。例，ls -d */。</p><p>-g    不打印所有者。</p><p>-G    不打印组信息。</p><p>-n    打印UID和DID。</p><p>–color=never    不使用颜色。</p><p>-p    增加 / 标记文件夹。</p><p>-r    反序。</p><p>-R    递归列出子目录文件。</p><p>-X    以扩展名排序，同 –sort=extension 。</p><p>-t    以修改时间排序，新的在前面。</p>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;查看系统版本命令&quot;&gt;&lt;a href=&quot;#查看系统版本命令&quot; class=&quot;headerlink&quot; title=&quot;查看系统版本命令&quot;&gt;&lt;/a&gt;查看系统版本命令&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;&lt;code&gt;getconf LONG_BIT&lt;/code&gt; 查看系统位数；&lt;/li&gt;
&lt;li&gt;&lt;code&gt;uname -a&lt;/code&gt; 更详细的方法；&lt;/li&gt;
&lt;li&gt;&lt;code&gt;lsb_release -a&lt;/code&gt; 系统详细版本情况。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;w&lt;/code&gt; 当前谁在登录。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;last&lt;/code&gt; 查看登录记录。登录信息记录在二进制 &lt;code&gt;/var/log/wtmp&lt;/code&gt;文件中。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;~/.bash_history&lt;/code&gt; 中记录所有输入的命令。
    
    </summary>
    
      <category term="linux" scheme="https://rachpt.github.io/categories/linux/"/>
    
      <category term="学习" scheme="https://rachpt.github.io/categories/linux/%E5%AD%A6%E4%B9%A0/"/>
    
    
      <category term="ubuntu" scheme="https://rachpt.github.io/tags/ubuntu/"/>
    
  </entry>
  
  <entry>
    <title>ubuntu  firefox</title>
    <link href="https://rachpt.github.io/2017/12/09/ubuntu%E8%BF%9B%E5%85%A5Firefox%E7%9A%84%E6%96%B9%E6%B3%95/"/>
    <id>https://rachpt.github.io/2017/12/09/ubuntu进入Firefox的方法/</id>
    <published>2017-12-09T06:23:45.000Z</published>
    <updated>2018-02-28T16:09:44.917Z</updated>
    
    <content type="html"><![CDATA[<h1 id="进入Firefox的方法有："><a href="#进入Firefox的方法有：" class="headerlink" title="进入Firefox的方法有："></a>进入Firefox的方法有：</h1><ol><li><p>SUPER + A，然后按firefox，回车。这个是在Dash面板中搜索应用程序运行。事实上，只要按fir就能定位到Firefox程序。</p></li><li><p>ALT，然后按firefox，回车。这个相当于在命令行运行一条命令。</p><a id="more"></a></li><li>在终端中按firefox&amp;，回车。这个适用于以终端作为主要操作窗口的用户，使用TAB键还可以自动补全命令（只需输入前几个字母再按TAB键）。&amp;在shell中是后台运行的意思，这样终端就不会被Firefox独占。</li></ol><h1 id="部分常用快捷键"><a href="#部分常用快捷键" class="headerlink" title="部分常用快捷键"></a>部分常用快捷键</h1><p>CTRL + T: 新建标签页</p><p>CTRL + W: 关闭标签页</p><p>CTRL + SHIFT + T: 重新打开最近关闭的一个标签页</p><p>CTRL + TAB: 切换到下一个标签页</p><p>CTRL + SHIFT + TAB: 切换到上一个标签页</p><p>ALT + [1-8]: 跳到制定标签页</p><p>ALT + 9: 跳到最后一个标签页</p><p>CTRL + L: 跳到地址栏</p><p>ESC: 停止加载当前页面</p><p>CTRL + K: 跳到搜索引擎输入框</p><p>CTRL + F: 在当前页面中搜索</p><p>/: 快速查找。在Linux中很多程序（如VI、Man、Less）都使用/作为搜索的快捷键，并且可使用正则表达式查找。但在Firefox中没有正则表达式搜索的功能。</p><p>CTRL + D: 收藏到书签</p><p>ALT + 左方向键: 后退</p><p>ALT + v: 前进</p><p>CTRL + Q: 退出</p>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;进入Firefox的方法有：&quot;&gt;&lt;a href=&quot;#进入Firefox的方法有：&quot; class=&quot;headerlink&quot; title=&quot;进入Firefox的方法有：&quot;&gt;&lt;/a&gt;进入Firefox的方法有：&lt;/h1&gt;&lt;ol&gt;
&lt;li&gt;&lt;p&gt;SUPER + A，然后按firefox，回车。这个是在Dash面板中搜索应用程序运行。事实上，只要按fir就能定位到Firefox程序。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;ALT，然后按firefox，回车。这个相当于在命令行运行一条命令。&lt;/p&gt;
    
    </summary>
    
      <category term="linux" scheme="https://rachpt.github.io/categories/linux/"/>
    
      <category term="学习" scheme="https://rachpt.github.io/categories/linux/%E5%AD%A6%E4%B9%A0/"/>
    
    
      <category term="ubuntu" scheme="https://rachpt.github.io/tags/ubuntu/"/>
    
  </entry>
  
  <entry>
    <title>COMSOL 简要笔记</title>
    <link href="https://rachpt.github.io/2017/12/04/COMSOL%20%E7%AE%80%E8%A6%81%E7%AC%94%E8%AE%B0/"/>
    <id>https://rachpt.github.io/2017/12/04/COMSOL 简要笔记/</id>
    <published>2017-12-04T01:12:45.000Z</published>
    <updated>2018-02-28T16:10:02.008Z</updated>
    
    <content type="html"><![CDATA[<h1 id="COMSOL-简单模拟声子晶体步骤"><a href="#COMSOL-简单模拟声子晶体步骤" class="headerlink" title="COMSOL 简单模拟声子晶体步骤"></a>COMSOL 简单模拟声子晶体步骤</h1><ul><li>定义</li></ul><p>参数设置</p><ul><li>几何</li></ul><p>几何模型</p><a id="more"></a><ul><li>材料</li></ul><p>计算的材料选择</p><ul><li>物理场</li></ul><p>其中 边界条件选择尤为重要</p><ul><li>网格</li></ul><p>网格</p><ul><li>计算</li></ul><p>后续计算</p><ul><li>结束</li></ul><p>一切完成，导出数据</p>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;COMSOL-简单模拟声子晶体步骤&quot;&gt;&lt;a href=&quot;#COMSOL-简单模拟声子晶体步骤&quot; class=&quot;headerlink&quot; title=&quot;COMSOL 简单模拟声子晶体步骤&quot;&gt;&lt;/a&gt;COMSOL 简单模拟声子晶体步骤&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;定义&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;参数设置&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;几何&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;几何模型&lt;/p&gt;
    
    </summary>
    
      <category term="软件" scheme="https://rachpt.github.io/categories/%E8%BD%AF%E4%BB%B6/"/>
    
      <category term="教程" scheme="https://rachpt.github.io/categories/%E8%BD%AF%E4%BB%B6/%E6%95%99%E7%A8%8B/"/>
    
    
      <category term="comsol" scheme="https://rachpt.github.io/tags/comsol/"/>
    
  </entry>
  
  <entry>
    <title>python 笔记</title>
    <link href="https://rachpt.github.io/2017/12/01/python%E7%AC%94%E8%AE%B0/"/>
    <id>https://rachpt.github.io/2017/12/01/python笔记/</id>
    <published>2017-12-01T04:23:12.000Z</published>
    <updated>2018-02-28T16:10:44.703Z</updated>
    
    <content type="html"><![CDATA[<ul><li>安装python</li></ul><ul><li><p>安装 selenium 库</p><a id="more"></a><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python -m pip install selenium</span><br></pre></td></tr></table></figure></li><li><p>重要步骤</p></li></ul><blockquote><p>需要将firefox 与驱动程序（）加进环境变量。</p></blockquote><p>assert 插入调试。</p>]]></content>
    
    <summary type="html">
    
      &lt;ul&gt;
&lt;li&gt;安装python&lt;/li&gt;
&lt;/ul&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;安装 selenium 库&lt;/p&gt;
    
    </summary>
    
      <category term="python" scheme="https://rachpt.github.io/categories/python/"/>
    
    
      <category term="python" scheme="https://rachpt.github.io/tags/python/"/>
    
  </entry>
  
  <entry>
    <title>使用 FlexGet 订阅下载</title>
    <link href="https://rachpt.github.io/2017/11/29/FlexGet%20PT%E8%AE%A2%E9%98%85/"/>
    <id>https://rachpt.github.io/2017/11/29/FlexGet PT订阅/</id>
    <published>2017-11-29T07:12:10.000Z</published>
    <updated>2018-02-28T16:24:21.341Z</updated>
    
    <content type="html"><![CDATA[<p>FlexGet基于Python的一套订阅方案，看到PY就能想到其牛逼。<br><a id="more"></a></p><blockquote><p>此文目的在于简单的使用FlexGet代替UT自带的订功能，实现特殊需求</p></blockquote><p>FlexGet所要求的Python环境为2.7或者3.5，（不支持3.6及其以上，具体自己官网瞧）官网：<a href="https://flexget.com/" target="_blank" rel="noopener">https://flexget.com/</a> 。</p><ul><li><p>Python环境安装，推荐3.5版64位的，安装时记得添加进环境变量。<a href="https://www.python.org/ftp/python/3.5.4/python-3.5.4-amd64.exe" target="_blank" rel="noopener">https://www.python.org/ftp/python/3.5.4/python-3.5.4-amd64.exe</a> </p></li><li><p>按照官网方法 <a href="https://flexget.com/InstallWizard/Windows" target="_blank" rel="noopener">https://flexget.com/InstallWizard/Windows</a> 安装。其中注意，如果你之前已经同时安装了py2和py3，那你可能得百度一下自己修改一下命令，<code>python2</code>  <code>python3</code> 。</p><ul><li><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python -m pip install -U pip setuptools</span><br></pre></td></tr></table></figure></li><li><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">pip install flexget</span><br><span class="line">//有可能需要使用pip3,具体看自己环境</span><br></pre></td></tr></table></figure></li><li><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">flexget -V</span><br></pre></td></tr></table></figure></li></ul></li><li><p>至此基于Python的FlexGet环境已经搭建好了。下面我们配置FlexGet的控制文件。</p></li></ul><hr><ul><li><p>配置FlexGet</p><ul><li><p>任务计划程序（<strong><em>我已经默认大家使用的win</em></strong>）添加任务，如下面两图。</p><p>​</p></li><li><p>使用1分钟即可，不要配置几个任务，因为运行一次大概需要20-40秒，其中操作使用vbs文件，文件如下写</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">Set ws = CreateObject(&quot;Wscript.Shell&quot;) </span><br><span class="line"></span><br><span class="line">ws.run &quot;C:\Python35\Scripts\flexget.exe execute&quot;,vbhide</span><br><span class="line">//注意上面的路径， execute参数很重要。</span><br></pre></td></tr></table></figure></li><li><p>推荐直接在你的用户目录下新建<code>flexget</code>文件夹，然后将配置文件<code>config.yml</code> (自己建一个txt，改名即可)丢里面。</p></li><li><p><code>config.yml</code> 按照下面的代码填写即可快速设置</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">tasks:</span><br><span class="line"> TTG-WiKi:</span><br><span class="line">  rss: https://totheglory.im/****</span><br><span class="line">  if:</span><br><span class="line">   - &quot;&apos;1080p&apos;  in title&quot;: reject</span><br><span class="line">   - &quot;&apos;WiKi&apos;  in title&quot;: accept</span><br><span class="line">  download: C:\FlexgetDownloads\</span><br><span class="line">  content_size:</span><br><span class="line">   min: 400</span><br><span class="line">   max: 60000</span><br><span class="line">   strict: no</span><br><span class="line">  free_space:</span><br><span class="line">   path: C:\</span><br><span class="line">   space: 900</span><br></pre></td></tr></table></figure></li><li><p>说面一下，注意使用空格（<strong><em>不能使用制表符</em></strong>）严格对其，学过python就知道原因，rss就是你在PT站上面得到的个人RSS链接，<code>download:</code> 后面是你的utorrent自动载入种子的目录，<code>content_size:</code> 正如其义，可用于控制种子体积。其它可以参考 <a href="https://flexget.com/Plugins" target="_blank" rel="noopener">https://flexget.com/Plugins</a> 。这里感谢[珞樱-WHUPT]的AutoSeed配置文件详解。</p></li><li><p>UTorrent需要设置自动重文件夹载如torrent文件，如下图。</p><p>​</p></li></ul></li><li><p>一般来说，种子发布后，2-3分钟内可以实现自动下载，而使用utorrent自带的rss刷新时间最少为5分钟，而且无法自定义体积等其它高级筛选。更多可以参考 <a href="https://pt.whu.edu.cn/forums.php?action=viewtopic&amp;topicid=2017&amp;page=p20477" target="_blank" rel="noopener">https://pt.whu.edu.cn/forums.php?action=viewtopic&amp;topicid=2017&amp;page=p20477</a></p></li></ul><hr><p>今天看到公众号又增加了一个粉，于是发篇小笔记 。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;FlexGet基于Python的一套订阅方案，看到PY就能想到其牛逼。&lt;br&gt;
    
    </summary>
    
      <category term="教程" scheme="https://rachpt.github.io/categories/%E6%95%99%E7%A8%8B/"/>
    
    
      <category term="flexget" scheme="https://rachpt.github.io/tags/flexget/"/>
    
  </entry>
  
  <entry>
    <title>firefox 切换更新通道</title>
    <link href="https://rachpt.github.io/2017/11/29/Firefox%20%E6%9B%B4%E6%96%B0%E9%80%9A%E9%81%93%E5%88%87%E6%8D%A2/"/>
    <id>https://rachpt.github.io/2017/11/29/Firefox 更新通道切换/</id>
    <published>2017-11-29T01:23:34.000Z</published>
    <updated>2018-02-28T16:09:01.863Z</updated>
    
    <content type="html"><![CDATA[<p>用过Firefox(火狐浏览器)的童鞋都知道，Firefox可是个更新狂魔，如果你只是一个浏览器轻度使用者，或者是是别人给你提供啥（预装）就用啥这种User，那么Firefox的高频更新对你可能影响不大。如果是和我一样，在浏览器中装了大量的生产力工具的重度（伪极客）用户，FX的更新可能是灾难性的。<br><a id="more"></a></p><blockquote><p><strong>Mozilla Firefox</strong>（简称<strong>Firefox</strong>），中文俗称<strong>火狐</strong>（<a href="https://zh.wikipedia.org/wiki/%E8%AC%80%E6%99%BA%E4%B8%AD%E5%9C%8B" target="_blank" rel="noopener">中国大陆官方</a>有使用但未注册为商标），是一个<a href="https://zh.wikipedia.org/wiki/%E8%87%AA%E7%94%B1%E5%8F%8A%E5%BC%80%E6%94%BE%E6%BA%90%E4%BB%A3%E7%A0%81%E8%BD%AF%E4%BB%B6" target="_blank" rel="noopener">自由及开源</a>的<a href="https://zh.wikipedia.org/wiki/%E7%B6%B2%E9%A0%81%E7%80%8F%E8%A6%BD%E5%99%A8" target="_blank" rel="noopener">网页浏览器</a>，由<a href="https://zh.wikipedia.org/wiki/Mozilla%E5%9F%BA%E9%87%91%E6%9C%83" target="_blank" rel="noopener">Mozilla基金会</a>及其子公司<a href="https://zh.wikipedia.org/wiki/Mozilla%E5%85%AC%E5%8F%B8" target="_blank" rel="noopener">Mozilla公司</a>开发。Firefox支持<a href="https://zh.wikipedia.org/wiki/Windows" target="_blank" rel="noopener">Windows</a>、<a href="https://zh.wikipedia.org/wiki/OS_X" target="_blank" rel="noopener">OS X</a>及<a href="https://zh.wikipedia.org/wiki/Linux" target="_blank" rel="noopener">Linux</a>，其移动版支持<a href="https://zh.wikipedia.org/wiki/Android" target="_blank" rel="noopener">Android</a>及<a href="https://zh.wikipedia.org/wiki/Firefox_OS" target="_blank" rel="noopener">Firefox OS</a>，这些版本的Firefox使用<a href="https://zh.wikipedia.org/wiki/Gecko" target="_blank" rel="noopener">Gecko</a>来排版网页，Gecko是一个运行当前与预期之<a href="https://zh.wikipedia.org/wiki/%E7%B6%B2%E9%A0%81%E6%A8%99%E6%BA%96" target="_blank" rel="noopener">网页标准</a>的<a href="https://zh.wikipedia.org/wiki/%E6%8E%92%E7%89%88%E5%BC%95%E6%93%8E" target="_blank" rel="noopener">排版引擎</a>，而在2015年发布的<a href="https://zh.wikipedia.org/wiki/Firefox_for_iOS" target="_blank" rel="noopener">Firefox for iOS</a>则非使用Gecko。</p><p>截至2016年1月，Firefox全球<a href="https://zh.wikipedia.org/wiki/%E7%B6%B2%E9%A0%81%E7%80%8F%E8%A6%BD%E5%99%A8%E7%9A%84%E4%BD%BF%E7%94%A8%E5%88%86%E4%BD%88" target="_blank" rel="noopener">市占率</a>为9％至16%，为全球第二流行的网页浏览器。</p></blockquote><p>按更新频率大致可以这么排：ESR（42周），Release（6周），Beta（约一周），Nightly（每天），ESR是挺好的，但是Fx有个致命的缺点就是当扩展安装较多后，冷启动速度慢的令人发指，至于原因网上很多这方面的科学解释。现在更新的57版对冷启动速度有巨大提升，而插件兼容性方面对我影响不大，于是将所有的esr53.4升级到了57beta版（正式版当时还是56）。<br>由于每次更新fx都会导致lastpass这个插件无法保持自动登录信息，能让fx延迟更新或者不更新吗？是有办法的。</p><p>[64位版Frefox] 默认安装目录 <code>C:\Program Files\Mozilla Firefox\defaults\pref\channel-prefs.js</code> 下使用记事本（notepad）打开，将末尾部分的 <code>beta</code> 改成 <code>esr</code> 即可进入延长支持版本通道，或者<code>release</code> 进入普通发行版通道。如下图。</p><p>最后可以在设置里面禁用Firefox的自动更新。</p><p>文末附上 Firefox的官方FTP下载地址，再也不用担心下到中国版了……</p><p>http ://ftp.mozilla.org/pub/firefox/releases/ （去掉多余的空格）</p><p>我收藏的旧插件集，Fx 57大部分用不了了</p><p>https ://addons.mozilla.org/zh-CN/firefox/collections/rachpt/1/</p><hr><p>about:support 打开 配置目录</p><p>将 gmpopenh264.dll，gmpopenh264.info 这两个文件覆盖安装到 \gmp-gmpopenh264\1.6 目录下 ，版本号自己更新（在info文件中）</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;用过Firefox(火狐浏览器)的童鞋都知道，Firefox可是个更新狂魔，如果你只是一个浏览器轻度使用者，或者是是别人给你提供啥（预装）就用啥这种User，那么Firefox的高频更新对你可能影响不大。如果是和我一样，在浏览器中装了大量的生产力工具的重度（伪极客）用户，FX的更新可能是灾难性的。&lt;br&gt;
    
    </summary>
    
      <category term="教程" scheme="https://rachpt.github.io/categories/%E6%95%99%E7%A8%8B/"/>
    
    
      <category term="firefox" scheme="https://rachpt.github.io/tags/firefox/"/>
    
  </entry>
  
  <entry>
    <title>Acrobat 双页全屏显示</title>
    <link href="https://rachpt.github.io/2017/11/28/Acrobat%20%E5%8F%8C%E9%A1%B5%E5%85%A8%E5%B1%8F%E6%98%BE%E7%A4%BA/"/>
    <id>https://rachpt.github.io/2017/11/28/Acrobat 双页全屏显示/</id>
    <published>2017-11-28T09:34:31.000Z</published>
    <updated>2018-03-01T04:05:19.953Z</updated>
    
    <content type="html"><![CDATA[<p>我有一个大显示器，但是阅读pdf时，Acrobat DC (或者reader) 使用快捷键 [ Ctrl + L ] ，全屏显示了,可是偌大的显示器只显示了一页，左右两边大大黑边很是浪费。有办法实现全屏双页显示吗？<br><a id="more"></a><br><img src="https://ws1.sinaimg.cn/large/675bda05gy1fox6lzg1dbj21hc0u0djh.jpg" alt="acrobat1"></p><p>是的，可以。这里以Acrobat DC 为例。</p><blockquote><p><strong>Adobe Acrobat</strong>是由<a href="https://zh.wikipedia.org/wiki/Adobe_Systems" target="_blank" rel="noopener">Adobe Systems</a>所开发的电子文字处理软件集，可用于阅读、编辑、管理和共享<a href="https://zh.wikipedia.org/wiki/PDF" target="_blank" rel="noopener">PDF</a>格式文档。</p><p>一般包含如下包：</p><ul><li><strong>Adobe Acrobat</strong>，包括专业版和标准版。用于对<a href="https://zh.wikipedia.org/wiki/PDF" target="_blank" rel="noopener">PDF</a>文件进行编辑、共享和管理，需要购买，而3D版本，除了专业版的功能，另外也支持立体向量图片的转换。</li><li><strong>Acrobat Reader</strong>（2003年至2014年期间，曾使用Adobe Reader作为名称），用于阅读<a href="https://zh.wikipedia.org/wiki/PDF" target="_blank" rel="noopener">PDF</a>文件，为免费发放。</li></ul></blockquote><ul><li><p>首先，我们需要设置页面显示为双页视图，具体如下图所示。</p><p><img src="https://ws1.sinaimg.cn/large/675bda05gy1fox6mt3mqwj20go0diaag.jpg" alt="acrobat2"></p></li></ul><ul><li><p>然后，在 [首选项] - 快捷键[ Ctrl + K ]，或者从下面的位置进入。</p><p><img src="https://ws1.sinaimg.cn/large/675bda05gy1fox6ppe4iej20at0gumxf.jpg" alt="acrobat3"></p></li></ul><ul><li><p>接着，在 [首选项] –&gt;(左侧)[ 全屏 ]–&gt;[ 全屏设置 ]–&gt;去掉 &lt;下图红框项&gt; 前面的勾。如下图。</p><p><img src="https://ws1.sinaimg.cn/large/675bda05gy1fox6o2gvm2j20u00lcq4q.jpg" alt="acrobat4"></p></li></ul><ul><li><p>另外，如果你想开启Acrobat 的护眼模式(说白了也就是背景颜色)，可以设置一下 [辅助工具] 里面的 [文档颜色选项]，个人觉得这个不错——电脑管家的推荐色 [ R:  204  G: 232 B: 207 ]。</p><p><img src="https://ws1.sinaimg.cn/large/675bda05gy1fox6n9es1xj20tc0k676c.jpg" alt="acrobat5"></p></li><li><p>最后，使用快捷键 [ Ctrl + L ] 进入全屏阅读文档，或者点击 [ 视图 ] –&gt; [ 全屏模式 ] 。</p></li></ul><p><img src="https://ws1.sinaimg.cn/large/675bda05gy1fox6qd3t0tj21hc0u0zpz.jpg" alt="acrobat6"></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;我有一个大显示器，但是阅读pdf时，Acrobat DC (或者reader) 使用快捷键 [ Ctrl + L ] ，全屏显示了,可是偌大的显示器只显示了一页，左右两边大大黑边很是浪费。有办法实现全屏双页显示吗？&lt;br&gt;
    
    </summary>
    
      <category term="教程" scheme="https://rachpt.github.io/categories/%E6%95%99%E7%A8%8B/"/>
    
    
      <category term="pdf" scheme="https://rachpt.github.io/tags/pdf/"/>
    
  </entry>
  
  <entry>
    <title>MS 超算步骤 精简版</title>
    <link href="https://rachpt.github.io/2017/11/28/%E8%B6%85%E7%AE%97%E6%AD%A5%E9%AA%A4-%E7%B2%BE%E7%AE%80%E7%89%88/"/>
    <id>https://rachpt.github.io/2017/11/28/超算步骤-精简版/</id>
    <published>2017-11-28T07:23:12.000Z</published>
    <updated>2018-02-01T12:00:42.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="结构优化文件准备"><a href="#结构优化文件准备" class="headerlink" title="结构优化文件准备"></a>结构优化文件准备</h1><ol><li><p>cif 文件按 <code>ms_castep</code> 命名（或者其他不带空格简单名字）；</p></li><li><p>选中全部原子，<code>CASTEP Calculation</code> 设置参数，[Setup] Task: <code>Geometry Optimization</code> , Quality: <code>Ultra-fine</code> , Functional: <code>LDA, CA-PZ</code> , More –&gt; Max.iterations <code>500</code> , Optimize cell <code>yes</code> ; [Electronic] More –&gt; Use custom energy cutoff <code>400 or others</code> , k-points –&gt; Cusom grid parameters <code>yes</code> ,Grid parameters <code>4,2,4 or others</code>  ;[Propweties] Population analysis <code>yes</code> ; [Job Ctrol] Run in parallel on <code>8 or max</code> . Files –&gt; yes ；</p><a id="more"></a></li><li><p>在~Files–&gt;Documents–&gt;~CASTEP GeomOpt 复制 <code>~.cell</code> 和 <code>~.param</code> 文件到新文件夹 <code>~GeomOpt</code> 同时复制 <code>RunGeneral.sh &amp; subGeneral</code> 到其中；</p></li><li><p>设置 <code>subGeneral</code> 中 <code>ppn=?</code> 即是计算使用核数；</p></li><li><p>打开<code>~.cell</code> 找到 %BLOCK SPECIES POT 中的 ~.usp 部分，在 Material Studio 安装目录路径 <code>C:\Program Files (x86)\Accelrys\Materials Studio 8.0\share\Resources\Quantum\Castep\Potentials\</code> 中复制所有需要的 到刚才的 <code>~GeomOpt</code> 中，至此结构优化文件准备已经完成；</p></li></ol><hr><h1 id="超算部分-结构优化"><a href="#超算部分-结构优化" class="headerlink" title="超算部分 _结构优化"></a>超算部分 _结构优化</h1><ol><li><p>需要使用的步骤，<code>dos2unix subGeneral RunGeneral.sh</code> 转换步骤，<code>chmod +x subGeneral RunGeneral.sh</code> ，可以使用 <code>Tab</code> 自动填充，<code>qsub subGeneral</code> 提交任务， <code>qstat</code> 开始任务， <code>bqueues</code> 查看所有运行、请求与剩余的核数，<code>qdel 任务ID号</code> 结束任务；</p></li><li><p>下次在 <code>qstat</code> 无显示表示已经算完，但不知是否正常算完。</p><p>$JOBNAME.o$JOBID  标准输出</p><p>$JOBNAME.e$JOBID  标准错误输出</p></li></ol><hr><h1 id="计算弹性常数"><a href="#计算弹性常数" class="headerlink" title="计算弹性常数"></a>计算弹性常数</h1><ol><li>下载除 <code>~.check</code> 外的其他文件，复制粘贴并替换本地计算目录<code>~GeomOpt</code> ，在<code>MS</code> 中刷新<code>refresh</code> STP。</li><li>打开<code>~.xsd</code> 文件，选送全部原子，<code>CASTEP Analysis</code> –&gt; <code>Structure</code> –&gt;<code>Upadte</code> ；取消原子选中，<code>CASTEP Calculation</code> –&gt;Task <code>Elastic Constants</code> –&gt; <code>Files</code> ，Save。</li><li>根据右侧显示的<code>~.param</code> <code>ms_castep_cij__ii__jj.param</code> 修改<code>subGeneral_cij.cij</code> 中的循环次数，比最大的数大1。</li><li>复制文件到<code>ms_castep_Cij</code> ，所有原 <code>Cij</code>文件夹里面的 <code>~.cel</code> <code>~.param</code> 文件，以及<code>~GeomOpt</code> 里面的  <code>~.usp</code> <code>~.sh</code> ，以及刚才修改的<code>subGeneral_cij.cij</code> 。</li><li>提交<code>ms_castep_Cij</code>到远程，进入该目录，<code>不要使用空格，括号等符号（涉及到路径转义，比较麻烦）</code>  ，<code>chmod +x subGeneral_cij.cij RunGeneral.sh</code>  以及 <code>dos2unix subGeneral_cij.cij RunGeneral.sh</code> ，<code>ls</code> 这两出现绿色（或其他）表示已经转码了，<code>qsub subGeneral_cij.cij</code> 提交任务，<code>qstat</code> 开始任务。</li></ol><hr><h1 id="数据处理部分"><a href="#数据处理部分" class="headerlink" title="数据处理部分"></a>数据处理部分</h1><ol><li>同样，下载除 <code>~.check</code> 外的其他文件，覆盖到原本地目录，找到并打开<code>ma_castep.castep</code> 文件，也就是总的计算结果。</li><li>使用<code>CASTEP Analysis</code> –&gt; <code>Elastic constants</code> –&gt; <code>Calculate</code> 。</li><li>右侧生成 <code>ma_castep Elastic Contants.txt</code> 文件包含计算得到的弹性常数等信息。</li><li>复制其中的<code>Elastic Stiffness Constants Cij</code> 矩阵到计算用的matlab程序包data内。</li></ol><hr><h1 id="使用-Matlab-进一步计算"><a href="#使用-Matlab-进一步计算" class="headerlink" title="使用 Matlab 进一步计算"></a>使用 Matlab 进一步计算</h1><ol><li>导入数据，<code>Input.m</code> 运行[F9] ，<code>ElasticConst3D.m</code>  <code>ElasticConst2D.m</code>  Plot 画图，<code>YoungsModulus.m</code> 计算 Youngs Modulus。</li><li>具体见 &gt;  User’s Guide for ElasticConst 。</li></ol><h1 id="关于MS-的一些笔记"><a href="#关于MS-的一些笔记" class="headerlink" title="关于MS 的一些笔记"></a>关于MS 的一些笔记</h1><p>在计算弹性常数之前并不一定要进行几何优化，可以由实验观测到的结构计算出Cij数据。尽管如此，如果我们完成晶胞的几何优化，可以获得更多相容的结果，进而计算与理论基态对应的弹性常数。</p><p>弹性常数的精确度，尤其是切变常数的精确度，主要取决于SCF计算的品质，特别是布里渊区取样和波函数收敛程度的品质。所以我们设置SCF、k点取样和FFT格子的精度为Fine。</p><p>CASTEP的弹性常数计算任务的结果以一批.castep输出文件的形式给出。这些文件中的每一个文件都代表确定的晶胞在假设的应变模式和应变振幅下的几何优化运行结果。这些文件的命名约定为：seedname_cij__m__n。对于给定的模式来说，m代表当前的应变模式，n代表当前的应变振幅。 CASTEP可以使用这些结果来分析每一个运行计算出来的压力张量，产生一个有关弹性性质的文件。<code>Modules | CASTEP | Analysis | Elastic constants</code> —-&gt; <code>sedname Elastic Constants.txt</code>。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">此 `txt` 文档中的信息包括：</span><br><span class="line"></span><br><span class="line">* 输入的应变和计算出的应力的总结</span><br><span class="line">* 每一种应变模式线性拟合和拟合质量的计算结果</span><br><span class="line">* 给定对称性下计算出的应力与弹性常数之间的对应</span><br><span class="line">* 弹性常数Cij和弹性柔量Sij的表格</span><br><span class="line">* 导出量：体积模量和其倒数、压缩系数、杨氏模量、Poisson比、 Lame 常数(用于模拟各向同性介质)</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;结构优化文件准备&quot;&gt;&lt;a href=&quot;#结构优化文件准备&quot; class=&quot;headerlink&quot; title=&quot;结构优化文件准备&quot;&gt;&lt;/a&gt;结构优化文件准备&lt;/h1&gt;&lt;ol&gt;
&lt;li&gt;&lt;p&gt;cif 文件按 &lt;code&gt;ms_castep&lt;/code&gt; 命名（或者其他不带空格简单名字）；&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;选中全部原子，&lt;code&gt;CASTEP Calculation&lt;/code&gt; 设置参数，[Setup] Task: &lt;code&gt;Geometry Optimization&lt;/code&gt; , Quality: &lt;code&gt;Ultra-fine&lt;/code&gt; , Functional: &lt;code&gt;LDA, CA-PZ&lt;/code&gt; , More –&amp;gt; Max.iterations &lt;code&gt;500&lt;/code&gt; , Optimize cell &lt;code&gt;yes&lt;/code&gt; ; [Electronic] More –&amp;gt; Use custom energy cutoff &lt;code&gt;400 or others&lt;/code&gt; , k-points –&amp;gt; Cusom grid parameters &lt;code&gt;yes&lt;/code&gt; ,Grid parameters &lt;code&gt;4,2,4 or others&lt;/code&gt;  ;[Propweties] Population analysis &lt;code&gt;yes&lt;/code&gt; ; [Job Ctrol] Run in parallel on &lt;code&gt;8 or max&lt;/code&gt; . Files –&amp;gt; yes ；&lt;/p&gt;
    
    </summary>
    
      <category term="教程" scheme="https://rachpt.github.io/categories/%E6%95%99%E7%A8%8B/"/>
    
    
      <category term="materials studio" scheme="https://rachpt.github.io/tags/materials-studio/"/>
    
  </entry>
  
  <entry>
    <title>固体物理笔记</title>
    <link href="https://rachpt.github.io/2017/11/28/%E5%9B%BA%E4%BD%93%E7%89%A9%E7%90%86%EF%BC%88%E6%9D%90%E6%96%99%E5%AD%A6%E9%99%A2%EF%BC%89/"/>
    <id>https://rachpt.github.io/2017/11/28/固体物理（材料学院）/</id>
    <published>2017-11-28T04:00:00.000Z</published>
    <updated>2018-03-01T01:57:37.078Z</updated>
    
    <content type="html"><![CDATA[<h1 id="4-3-克朗尼格-朋奈模型"><a href="#4-3-克朗尼格-朋奈模型" class="headerlink" title="4.3 克朗尼格 - 朋奈模型"></a>4.3 克朗尼格 - 朋奈模型</h1><p>周期性边界条件，<br>晶体点阵a影响 能带<br>nPi/a</p><h1 id="4-4导体与绝缘体"><a href="#4-4导体与绝缘体" class="headerlink" title="4.4导体与绝缘体"></a>4.4导体与绝缘体</h1><ul><li>满带电子不导电</li><li>不满带电子导电</li></ul><p>能带理论解释导体半导体，绝缘体</p><h1 id="11月6日笔记"><a href="#11月6日笔记" class="headerlink" title="11月6日笔记"></a>11月6日笔记</h1><ul><li>超导 bcs理论</li><li></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;4-3-克朗尼格-朋奈模型&quot;&gt;&lt;a href=&quot;#4-3-克朗尼格-朋奈模型&quot; class=&quot;headerlink&quot; title=&quot;4.3 克朗尼格 - 朋奈模型&quot;&gt;&lt;/a&gt;4.3 克朗尼格 - 朋奈模型&lt;/h1&gt;&lt;p&gt;周期性边界条件，&lt;br&gt;晶体点阵a影响 能带
      
    
    </summary>
    
    
  </entry>
  
</feed>

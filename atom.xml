<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>rachpt&#39;s Blog</title>
  
  <subtitle>时间总是追不上</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://rachpt.github.io/"/>
  <updated>2019-06-02T10:25:03.168Z</updated>
  <id>https://rachpt.github.io/</id>
  
  <author>
    <name>rachpt</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>notes-for-ffmpeg</title>
    <link href="https://rachpt.github.io/2019/06/02/notes-for-ffmpeg/"/>
    <id>https://rachpt.github.io/2019/06/02/notes-for-ffmpeg/</id>
    <published>2019-06-02T09:08:49.000Z</published>
    <updated>2019-06-02T10:25:03.168Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>一些ffmpeg处理视频笔记。</p></blockquote><a id="more"></a><h1 id="裁剪黑边"><a href="#裁剪黑边" class="headerlink" title="裁剪黑边"></a>裁剪黑边</h1><p>主要使用 ffmpeg 的 <code>crop</code> 以及 <code>cropdetect</code> 参数。</p><p>视频左上角为坐标(0,0)，单位为像素。</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">ffmpeg -i input.mp4 -vf <span class="string">"cropdetect=24:16:0"</span> dummy.mp4</span><br><span class="line"></span><br><span class="line"><span class="comment"># 可以得到如下所示信息</span></span><br><span class="line"><span class="comment"># [Parsed_cropdetect_0 @ 0x7fab586781c0] x1:36 x2:1883 y1:0 y2:1079 w:1840 h:1072 x:40 y:4 pts:3584 t:0.233333 crop=1840:1072:40:4</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Ctrl + C 停止，复制 crop=1840:1072:40:4 用于后面步骤</span></span><br><span class="line"><span class="comment"># 注意视频黑边 是否会变化，否则需取舍使用哪些参数。</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 也可以使用 ffplay 预览，不用'压制'即可得到 crop 信息。</span></span><br><span class="line">ffplay input.mp4 -vf cropdetect=24:16:0</span><br><span class="line"></span><br><span class="line"><span class="comment"># 后面的参数 24 16 0 为默认值，更多请移步 [官方文档](https://www.ffmpeg.org/ffmpeg-filters.html#cropdetect)</span></span><br></pre></td></tr></table></figure><p>关于 crop，第一个 1840 表示裁剪出来的矩形长1840像素，宽1072像素，从(40,0)坐标处开始裁剪。<a href="https://www.ffmpeg.org/ffmpeg-filters.html#crop" target="_blank" rel="noopener">crop官方文档</a>。</p><p>除了使用 ffmpeg 的 cropdetect 参数外，可以截取一张视频图片，使用 GIMP 等图像工具，手动测量得到需要的参数。<br>以 GIMP 为例：</p><pre><code>1. 拉出参考线，Ctrl+鼠标滚轮放大，M 移动工具；2. Shift + M 换到测量工具，Ctrl 拉出水平垂直测量线。</code></pre><p><img src="https://raw.githubusercontent.com/rachpt/imgs/master/notes-for-ffmpeg-2019-6-2-18-7-13.png" alt="notes-for-ffmpeg-2019-6-2-18-7-13.png"></p><p><img src="https://raw.githubusercontent.com/rachpt/imgs/master/notes-for-ffmpeg-2019-6-2-18-7-28.png" alt="notes-for-ffmpeg-2019-6-2-18-7-28.png"></p><h1 id="去水印"><a href="#去水印" class="headerlink" title="去水印"></a>去水印</h1><p>和裁剪黑边类似，使用 <code>delogo</code> 命令，<a href="https://www.ffmpeg.org/ffmpeg-filters.html#delogo" target="_blank" rel="noopener">官方文档</a>。</p><p>同样需要定位位置，使用上面提到的 GIMP 测量坐标。<br><code>delogo=x=1742:y=992:w=132:h=40</code>，如其意，x y坐标起点(左上角0、0)，w  h宽和高。<br>一次可以定义多个去水印位置，使用 <code>,</code> 分隔，放置在滤镜参数里面。例子如下：<br><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">ffmpeg -y -i in.mp4 -vf <span class="string">"delogo=x=1472:y=35:w=408:h=42,delogo=x=1742:y=992:w=132:h=40,crop=1840:1040:40:0"</span> \</span><br><span class="line">-metadata comment=<span class="string">'made by rachpt'</span> -max_muxing_queue_size 1024 out.mp4</span><br></pre></td></tr></table></figure></p><p>两个水印，加上裁剪黑边。</p><p>效果对比如下：</p><p><img src="https://raw.githubusercontent.com/rachpt/imgs/master/notes-for-ffmpeg-2019-6-2-18-10-25.png" alt="notes-for-ffmpeg-2019-6-2-18-10-25.png"></p><p><img src="https://raw.githubusercontent.com/rachpt/imgs/master/notes-for-ffmpeg-2019-6-2-18-10-38.png" alt="notes-for-ffmpeg-2019-6-2-18-10-38.png"></p><p><img src="https://raw.githubusercontent.com/rachpt/imgs/master/notes-for-ffmpeg-2019-6-2-18-10-54.png" alt="notes-for-ffmpeg-2019-6-2-18-10-54.png"></p><h1 id="倍速"><a href="#倍速" class="headerlink" title="倍速"></a>倍速</h1><p>详见：<br><a href="https://github.com/rachpt/shell-scripts/blob/master/speed_up_video.sh" target="_blank" rel="noopener">https://github.com/rachpt/shell-scripts/blob/master/speed_up_video.sh</a></p><h2 id="视频"><a href="#视频" class="headerlink" title="视频"></a>视频</h2><p>1.7 倍速：<br><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">ffmpeg -i <span class="string">"<span class="variable">$i</span>"</span> -r 30 -c:v libx264 -preset fast \</span><br><span class="line">-filter_complex <span class="string">"[0:v]setpts=10/17 *PTS[v];[0:a]atempo=1.7[a]"</span> \</span><br><span class="line">-map <span class="string">"[v]"</span> -map <span class="string">"[a]"</span> <span class="string">"../encode/<span class="variable">$i</span>"</span> -y</span><br></pre></td></tr></table></figure></p><h2 id="音频"><a href="#音频" class="headerlink" title="音频"></a>音频</h2><p>如上，<code>[0:a]atempo=1.7[a]</code>。</p><h2 id="字幕"><a href="#字幕" class="headerlink" title="字幕"></a>字幕</h2><p>使用shell来完成，<br><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> `grep -Eo <span class="string">'([0-9]&#123;2&#125;:)&#123;2&#125;[0-9]&#123;2&#125;,[0-9]&#123;3&#125;'</span> <span class="string">"<span class="variable">$file</span>"</span>` ;<span class="keyword">do</span> </span><br><span class="line">  a=<span class="variable">$&#123;i:0:2&#125;</span>;</span><br><span class="line">  b=<span class="variable">$&#123;i:3:2&#125;</span>;</span><br><span class="line">  c=<span class="variable">$&#123;i:6:2&#125;</span>;</span><br><span class="line">  d=<span class="variable">$&#123;i:9:3&#125;</span>;</span><br><span class="line">  <span class="comment"># 匹配视频 1.7 倍速</span></span><br><span class="line">  total=`<span class="built_in">echo</span> <span class="string">"scale=0;(((<span class="variable">$a</span>*60+<span class="variable">$b</span>)*60+<span class="variable">$c</span>)*1000+<span class="variable">$d</span>)/1.7"</span>|bc`;</span><br><span class="line">  e=$((total % 1000));f=$((total / 1000));</span><br><span class="line">  g=$((f % 60));</span><br><span class="line">  h=$((f / 60));x=$((h % 60));</span><br><span class="line">  y=$((h / 60)) ;</span><br><span class="line">  j=`<span class="built_in">printf</span> <span class="string">"%02d:%02d:%02d,%03d\n"</span> <span class="variable">$y</span> <span class="variable">$x</span> <span class="variable">$g</span> <span class="variable">$e</span>`;</span><br><span class="line">  sed -i <span class="string">"s/<span class="variable">$i</span>/<span class="variable">$j</span>/"</span> <span class="string">"<span class="variable">$file</span>"</span>;</span><br><span class="line"><span class="keyword">done</span> </span><br><span class="line"></span><br><span class="line"><span class="comment"># 最后封装在一起参数</span></span><br><span class="line">ffmpeg -i in.mp4 -i sub.srt -c:s mov_text -c:v copy -c:a copy out.mp4</span><br></pre></td></tr></table></figure></p><h1 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h1><ul><li>使用 -ss 0:0:0 -t 1:0:0 后可能会遇到下面的报错，</li></ul><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Too many packets buffered <span class="keyword">for</span> output stream 0:1.</span><br></pre></td></tr></table></figure><p>只需要多加一个 <code>-max_muxing_queue_size 1024</code> 参数在其中即可解决，<a href="https://stackoverflow.com/questions/49686244/ffmpeg-too-many-packets-buffered-for-output-stream-01#answer-50262835" target="_blank" rel="noopener">详见这里</a>。</p>]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;一些ffmpeg处理视频笔记。&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
      <category term="linux" scheme="https://rachpt.github.io/categories/linux/"/>
    
    
      <category term="ffmpeg" scheme="https://rachpt.github.io/tags/ffmpeg/"/>
    
  </entry>
  
  <entry>
    <title>ssh-tunnel</title>
    <link href="https://rachpt.github.io/2019/05/29/ssh-tunnel/"/>
    <id>https://rachpt.github.io/2019/05/29/ssh-tunnel/</id>
    <published>2019-05-29T14:21:12.000Z</published>
    <updated>2019-06-01T08:23:17.353Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>使用 ssh 隧道使用外网访问 NAT 内网服务。</p></blockquote><a id="more"></a><h1 id="情景描述"><a href="#情景描述" class="headerlink" title="情景描述"></a>情景描述</h1><p>一台电脑能够 使用 ssh 连接到外部电脑，比如地址是 <code>115.115.115.1</code>，但是反过来不行，因为这台电脑得到的地址是 10 开头的 NAT 内网地址。</p><p>现在希望 外面的 115 地址的机器可以 ssh 到这台 10 地址的机器上，并且访问该机器上面的 web 服务(比如qbittorrent的webui)。</p><p>单独使用 ssh 方向透穿不稳定，因为 ssh 不活动一段时间过后这条连接就会被中断，然后你在外面的 115 那里是死活也每办法让 10 那里再重新 ssh到 115这里的啦。</p><p>于是 autossh 就被用来干这样一件事情，维持一条持续的 ssh 通道。</p><h1 id="反向穿透-ssh"><a href="#反向穿透-ssh" class="headerlink" title="反向穿透 ssh"></a>反向穿透 ssh</h1><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">autossh -M 5678 -CNR 2333:localhost:22 rachpt@115.115.115.1 -p 22</span><br></pre></td></tr></table></figure><p>5678 是autossh的监听端口，2333 就是在外部 115 机器上访问 10 机器的端口号，第一个 22 表示 10 机器的 ssh 在22端口(默认值)，后面的表示 115 机器ssh端口在默认的22。</p><p>这样做有个问题，就是需要输入 115 机器的ssh密码，我们可以使用 ssh 的 pub key避免输入密码，就像我们使用github那样。</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#------------------</span></span><br><span class="line"><span class="comment"># 在 10 机器上</span></span><br><span class="line">ssh-keygen -t rsa</span><br><span class="line"><span class="comment"># 生成公钥，自己记得给个名字</span></span><br><span class="line"></span><br><span class="line">cat ~/.ssh/你命的名.pub</span><br><span class="line"></span><br><span class="line"><span class="comment">#------------------</span></span><br><span class="line"><span class="comment"># 复制到 115 的机器上面</span></span><br><span class="line"><span class="comment"># 比如放到 ~/.ssh/authorized_keys 里面</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 编辑 /etc/ssh/sshd_config 文件</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 添加或则修改</span></span><br><span class="line">AuthorizedKeysFile      .ssh/authorized_keys</span><br></pre></td></tr></table></figure><p>这样就能实现 10 机器免密码 ssh 到 115 机器。</p><p>为了实现开机自动使用 autossh 反向透穿，使用 systemd，</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">vim /etc/systemd/system/autossh.service</span><br><span class="line"></span><br><span class="line">[Unit]</span><br><span class="line">Description=auto SSH</span><br><span class="line">After=network.target</span><br><span class="line">[Service]</span><br><span class="line">User=rachpt</span><br><span class="line">ExecStart=/usr/bin/autossh -M 5678 -CNR 2333:localhost:22 rachpt@115.156.156.1</span><br><span class="line">[Install]</span><br><span class="line">WantedBy=multi-user.target</span><br></pre></td></tr></table></figure><p>一通 daemon-reload enable start就可以了。</p><p>记得kill掉占用端口的进程，不然gg…</p><h1 id="反向穿透-web-服务"><a href="#反向穿透-web-服务" class="headerlink" title="反向穿透 web 服务"></a>反向穿透 web 服务</h1><p>这里以 qbittorrent-nox webui 为例。</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">autossh -M 5001 -CNR 10010:localhost:10010 rachpt@115.156.115.1</span><br></pre></td></tr></table></figure><p><strong><a href="https://github.com/qbittorrent/qBittorrent/issues/7274#issuecomment-362936393" target="_blank" rel="noopener">重要提示：远程端口和服务端口必须一致</a></strong>，我用的10010端口，否则401连不上。</p><p>当然 qbittorrent-nox 需要在 10010端口运行 webui(具体请使用 help)。</p><h1 id="最后"><a href="#最后" class="headerlink" title="最后"></a>最后</h1><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">sudo lsof -t -i:10010</span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看占用端口 10010 的进程</span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;使用 ssh 隧道使用外网访问 NAT 内网服务。&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
      <category term="linux" scheme="https://rachpt.github.io/categories/linux/"/>
    
    
      <category term="ssh" scheme="https://rachpt.github.io/tags/ssh/"/>
    
  </entry>
  
  <entry>
    <title>substitute-sinaimg-with-githubimg-url</title>
    <link href="https://rachpt.github.io/2019/04/29/substitute-sinaimg-with-githubimg-url/"/>
    <id>https://rachpt.github.io/2019/04/29/substitute-sinaimg-with-githubimg-url/</id>
    <published>2019-04-29T04:16:12.000Z</published>
    <updated>2019-04-29T04:26:57.378Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>最好的图床 新浪 已经禁止外链，图片迁移至 github。</p></blockquote><a id="more"></a><p>前些天，得知 新浪 图片禁止外链，就在想怎么解决图片问题，直接放在 github pages 里面又要改动很多。</p><p>恰好最近在使用 vs-code，试了一下 picgo 插件，感觉很棒，smsm图床我是不敢用，404了去找谁。</p><p>于是在github建一个 repo 专门存放图片，还能备份到坚果云一份。替换新浪图片链接为 github 链接。</p><p>先是在 vs-code 里面手动替换了几个，工作量太大，于是写了个bash脚本完成这件事。</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"><span class="comment"># Author: rachpt@126.com</span></span><br><span class="line"><span class="comment"># Date: 2019-04-29</span></span><br><span class="line"><span class="comment"># 批量下载 md 文件中的 新浪图片，重命名为 `文件名-数字` 格式</span></span><br><span class="line"><span class="comment"># 替换md文件中的 新浪图片地址</span></span><br><span class="line"><span class="comment"># 批量下载图片</span></span><br><span class="line"><span class="function"><span class="title">download_pic</span></span>() &#123;</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> `ls -1 *.md`; <span class="keyword">do</span></span><br><span class="line">lists=<span class="string">"<span class="variable">$(grep -Eio 'https?://ws..sinaimg.[-0-9a-z/]+.jpg' "$i")</span>"</span></span><br><span class="line"><span class="keyword">if</span> [[ <span class="variable">$lists</span> ]]; <span class="keyword">then</span> </span><br><span class="line">total=`<span class="built_in">echo</span> <span class="string">"<span class="variable">$lists</span>"</span>|wc -l`; j=1</span><br><span class="line"><span class="keyword">while</span> [[ <span class="variable">$j</span> -le <span class="variable">$total</span> ]]; <span class="keyword">do</span> </span><br><span class="line"><span class="built_in">echo</span> <span class="variable">$&#123;i%.md&#125;</span>-<span class="variable">$j</span></span><br><span class="line">picurl=`<span class="built_in">echo</span> <span class="string">"<span class="variable">$lists</span>"</span>|sed -n <span class="string">"<span class="variable">$j</span> p"</span>`</span><br><span class="line"><span class="built_in">echo</span> <span class="variable">$picurl</span></span><br><span class="line"><span class="comment"># 此处使用了 httpie，当然可以使用 crul wget 等工具</span></span><br><span class="line">http -d <span class="string">"<span class="variable">$picurl</span>"</span> -o <span class="string">"../pic/<span class="variable">$&#123;i%.md&#125;</span>-<span class="variable">$j</span>.jpg"</span></span><br><span class="line">((j++))</span><br><span class="line"><span class="keyword">done</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"><span class="keyword">done</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="comment"># 替换 url 地址。两条完全可以合在一起，为了减少意外错误，这里分开</span></span><br><span class="line"><span class="function"><span class="title">substitute_url</span></span>() &#123;</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> `ls -1 *.md`; <span class="keyword">do</span></span><br><span class="line">lists=<span class="string">"<span class="variable">$(grep -Eio 'https?://ws..sinaimg.[-0-9a-z/]+.jpg' "$i")</span>"</span></span><br><span class="line"><span class="keyword">if</span> [[ <span class="variable">$lists</span> ]]; <span class="keyword">then</span> </span><br><span class="line">total=`<span class="built_in">echo</span> <span class="string">"<span class="variable">$lists</span>"</span>|wc -l`; j=1</span><br><span class="line"><span class="keyword">while</span> [[ <span class="variable">$j</span> -le <span class="variable">$total</span> ]]; <span class="keyword">do</span> </span><br><span class="line"><span class="built_in">echo</span> <span class="variable">$&#123;i%.md&#125;</span>-<span class="variable">$j</span></span><br><span class="line">picurl=`<span class="built_in">echo</span> <span class="string">"<span class="variable">$lists</span>"</span>|sed -n <span class="string">"<span class="variable">$j</span> p"</span>`</span><br><span class="line"><span class="built_in">echo</span> <span class="variable">$picurl</span></span><br><span class="line"><span class="comment"># 说明：picurl 中包含'/'，因此使用\% 作为自定义正则标识符</span></span><br><span class="line"><span class="comment"># s 命令匹配部分 ![] 都需要转义，替换的不用，后一个 s 使用%分割而不是/</span></span><br><span class="line"><span class="comment"># 使用 &#123;&#125; 限定替换范围</span></span><br><span class="line">sed -Ei <span class="string">"\%<span class="variable">$picurl</span>% &#123; s/\!\[.*\]/![<span class="variable">$&#123;i%.md&#125;</span>-<span class="variable">$j</span>.jpg]/; s%<span class="variable">$picurl</span>%https://raw.githubusercontent.com/rachpt/imgs/master/<span class="variable">$&#123;i%.md&#125;</span>-<span class="variable">$j</span>.jpg%; &#125;"</span> <span class="string">"<span class="variable">$i</span>"</span></span><br><span class="line">((j++))</span><br><span class="line"><span class="keyword">done</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"><span class="keyword">done</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="comment"># 调用</span></span><br><span class="line">download_pic</span><br><span class="line"><span class="built_in">echo</span> <span class="string">'若无问题 30 秒后开始替换'</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">'Ctrl + C 强制取消替换'</span></span><br><span class="line">sleep 30</span><br><span class="line">substitute_url</span><br><span class="line"><span class="built_in">echo</span> <span class="string">'Done!'</span></span><br></pre></td></tr></table></figure><p>脚本在 <a href="https://github.com/rachpt/shell-scripts/blob/master/change-url.sh" target="_blank" rel="noopener">https://github.com/rachpt/shell-scripts/blob/master/change-url.sh</a> 。</p><p>这里记录一下。</p>]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;最好的图床 新浪 已经禁止外链，图片迁移至 github。&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
      <category term="shell" scheme="https://rachpt.github.io/categories/shell/"/>
    
    
      <category term="sinaimg" scheme="https://rachpt.github.io/tags/sinaimg/"/>
    
  </entry>
  
  <entry>
    <title>notes-for-gnuplot</title>
    <link href="https://rachpt.github.io/2019/04/19/notes-for-gnuplot/"/>
    <id>https://rachpt.github.io/2019/04/19/notes-for-gnuplot/</id>
    <published>2019-04-19T06:15:53.000Z</published>
    <updated>2019-04-28T15:01:38.000Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>gnuplot 画图笔记。</p></blockquote><a id="more"></a><h1 id="使用希腊字母"><a href="#使用希腊字母" class="headerlink" title="使用希腊字母"></a>使用希腊字母</h1><p>这个叫 Enhanced 文本模式，首先需要设置terminal enhanced。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">set term qt enhanced</span><br></pre></td></tr></table></figure></p><p>term 是 terminal 的简写形式，我使用的 qt 模式。<br>比如我想将图例，也就是 key 中插入希腊字母，<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">plot &apos;real-prop-vecpot.dat&apos; u (-$3):($2) w lp lw 2 title &apos;E(t)/&#123;/Symbol= \145&#125;&apos;</span><br></pre></td></tr></table></figure></p><p>这里指定了 线的title，<code>{/Symbol= \145}</code>，145是8进制数 表示 16进制 65。gnuplot 的 Symbol 表中 65 表示 omega。<br><img src="https://raw.githubusercontent.com/rachpt/imgs/master/guplot-show.jpg" alt="guplot-show.jpg"><br>(图片版权：我)</p><h1 id="设置字体大小"><a href="#设置字体大小" class="headerlink" title="设置字体大小"></a>设置字体大小</h1><p>通常情况gnuplot 字体小的看不见。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"># 设置 图例字体大小20</span><br><span class="line">set key font &apos;,20&apos;</span><br><span class="line"></span><br><span class="line"># 可以指定字体</span><br><span class="line">set key font &apos;字体名,20&apos;</span><br><span class="line"># 详情 help set key</span><br><span class="line"></span><br><span class="line"># 其他 xlabel xtics tics 一样</span><br><span class="line">set tics font &apos;,15&apos;</span><br></pre></td></tr></table></figure><h1 id="设置-x-y-轴间距"><a href="#设置-x-y-轴间距" class="headerlink" title="设置 x(y) 轴间距"></a>设置 x(y) 轴间距</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">set xtics 0,2,20</span><br><span class="line"># x轴 0开始至20，间距2</span><br><span class="line"></span><br><span class="line"># 要指定显示形式，则需要使用 像列表一样的东西。</span><br></pre></td></tr></table></figure><h1 id="图片大小"><a href="#图片大小" class="headerlink" title="图片大小"></a>图片大小</h1><ol><li><p>圆形，也就是 x=y</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">set size square</span><br></pre></td></tr></table></figure></li><li><p>其他…</p></li></ol><h1 id="设置plot"><a href="#设置plot" class="headerlink" title="设置plot"></a>设置plot</h1><p>plot 加上 with (简写 w) 有 linepoints(简写 lp)，linewidth(lw)，linecolor(lc)，pointtype(pt)，pointsize(ps) 等参数，后面紧跟数子值即可，可是使用 <code>test</code> 查看各种样式对应值。</p><h1 id="对数据列操作"><a href="#对数据列操作" class="headerlink" title="对数据列操作"></a>对数据列操作</h1><p>使用 <code>plot &#39;路径&#39; using 1:2  ...</code> 可以将路径里面 第一列作为 x 第二列作为 y 画图，using简写 u，使用<code>($列号)</code>对列操作，比如这样 <code>u ($1 /2):($2 ** 2)</code>。<code>**</code> 表示 次方。</p><h1 id="设置-xy-轴范围"><a href="#设置-xy-轴范围" class="headerlink" title="设置 xy 轴范围"></a>设置 xy 轴范围</h1><p>如下所示。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">set xrange[0:20]</span><br><span class="line">set yrange[0:10]</span><br></pre></td></tr></table></figure></p><h1 id="GUI-的一些快捷键"><a href="#GUI-的一些快捷键" class="headerlink" title="GUI 的一些快捷键"></a>GUI 的一些快捷键</h1><p>按住 <code>ctrl</code> 鼠标滚轮， 可以缩放。</p><p><code>r</code> 键，显示鼠标处 十字。xy 值可以在左下角显示。</p><p>其他以后写，现在忘记了…</p><p><a href="http://blog.sciencenet.cn/blog-373392-535918.html" target="_blank" rel="noopener">参考文档</a>。</p><h1 id="在-gnuplot-中调用-shell-命令"><a href="#在-gnuplot-中调用-shell-命令" class="headerlink" title="在 gnuplot 中调用 shell 命令"></a>在 gnuplot 中调用 shell 命令</h1><p>使用 <code>system</code> 函数。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"># 打印当前路径</span><br><span class="line">system(&quot;pwd&quot;)</span><br><span class="line"></span><br><span class="line">path = system(&quot;pwd&quot;)</span><br><span class="line"></span><br><span class="line">print path</span><br><span class="line"></span><br><span class="line"># 当前文件夹名</span><br><span class="line">foldername=system(&quot;basename `pwd`&quot;)</span><br></pre></td></tr></table></figure><p><a href="https://stackoverflow.com/questions/12846717/using-awk-or-other-shell-command-inside-gnuplot-function" target="_blank" rel="noopener">参考文档</a>。</p>]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;gnuplot 画图笔记。&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
    
      <category term="gnuplot" scheme="https://rachpt.github.io/tags/gnuplot/"/>
    
  </entry>
  
  <entry>
    <title>notes-for-flexget</title>
    <link href="https://rachpt.github.io/2019/04/15/notes-for-flexget/"/>
    <id>https://rachpt.github.io/2019/04/15/notes-for-flexget/</id>
    <published>2019-04-15T14:21:25.000Z</published>
    <updated>2019-04-29T02:37:09.000Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>之前一直使用最简单的if模块满足不了要求，探索使用新的模块。 </p></blockquote><a id="more"></a><h1 id="if与regexp"><a href="#if与regexp" class="headerlink" title="if与regexp"></a>if与regexp</h1><p>这两个都可以用来进行简单的逻辑过滤。主要用在title字段，应用在其他字段也是可以的。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">if:</span><br><span class="line">  - &quot;&apos;Complete&apos; in title&quot;: reject</span><br><span class="line">  - &quot;&apos;NYHD&apos; in title&quot;: reject</span><br><span class="line">  - &quot;&apos;-RS&apos; in title&quot;: reject</span><br><span class="line">  - &quot;&apos;Cinderella.Chef&apos; in title&quot;: accept</span><br><span class="line">  - &quot;&apos;Douro.Mainland&apos; in title&quot;: accept</span><br><span class="line">regexp:</span><br><span class="line">  accept:</span><br><span class="line">    - game.*of.*Thrones.*s08e.*-GoT</span><br><span class="line">  reject:</span><br><span class="line">    - .*-MT$</span><br><span class="line">    - .*-HDC$</span><br><span class="line">    - .*-MT$</span><br></pre></td></tr></table></figure><p>例子如上，if 区分大小写，而regexp不区分大小写，使用正则表达式(注意写全.*)。<br>写完记得 <code>flexget daemon reload-config</code> 才会生效，我是用的 daemon 模式运行的。<br>virtualenv 使用<code>/home/rachpt/.flexget/bin/python /home/rachpt/.flexget/bin/flexget daemon reload-config</code>，前面是virtualenv 中的python路径，这个可以用在 systemd 中实现开机自动启动。<br>使用 <code>/home/rachpt/.flexget/bin/python /home/rachpt/.flexget/bin/flexget execute --try-regexp --tasks my_test_task</code> 检测 my_test_task 的regexp 运行匹配情况(记得每次修改config.yml后reload-config)。</p><h1 id="daemon"><a href="#daemon" class="headerlink" title="daemon"></a>daemon</h1><p>官方文档很全，大部分都有讲。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">schedules:</span><br><span class="line">  - tasks: [&apos;hdchina&apos;, &apos;wiki&apos;, &apos;hdsky&apos;, &apos;byr_an&apos;, &apos;ipt_movies&apos;]</span><br><span class="line">    interval:</span><br><span class="line">      minutes: 3</span><br><span class="line">  - tasks: &apos;ipt_tvs&apos;</span><br><span class="line">    schedule:</span><br><span class="line">      day_of_week: mon</span><br><span class="line">      hour: 8-10</span><br><span class="line">      minute: &quot;*/1&quot;</span><br></pre></td></tr></table></figure><p>schedules是一个Top-Level Keys，有两种定时模式，interval 就是等时间间隔运行，以前的文档中有提到使用 seconds，现在好像不行了，也就是说，最小更新频率 1分钟一次(可能说的不对，使用 seconds，check不过)。tasks作用任务字典(一个就使用字符串，记得引号)。</p><p>另一种是和 cron 类似的模式，上面的例子，每周一 8-10点每 1分钟运行一次 task ipt-tvs。同样最小单位分钟。</p><p>systemd 设置。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">cat /etc/systemd/system/flexget.service</span><br><span class="line"># 或则写到 /usr/lib/systemd/system/flexget.service</span><br><span class="line">[Unit]</span><br><span class="line">Description=Flexget Daemon</span><br><span class="line">After=network.target</span><br><span class="line">[Service]</span><br><span class="line">User=rachpt # 此处我没有使用 root 运行</span><br><span class="line">Type=simple</span><br><span class="line">WorkingDirectory=/home/rachpt/.flexget</span><br><span class="line">ExecStart=/home/rachpt/.flexget/bin/python /home/rachpt/.flexget/bin/flexget daemon start</span><br><span class="line">ExecStop=/home/rachpt/.flexget/bin/python /home/rachpt/.flexget/bin/flexget daemon stop</span><br><span class="line">ExecReload=/home/rachpt/.flexget/bin/python /home/rachpt/.flexget/bin/flexget daemon reload</span><br><span class="line">Nice=19</span><br><span class="line">[Install]</span><br><span class="line">WantedBy=multi-user.target</span><br></pre></td></tr></table></figure></p><p>systemctl reload-daemon &amp;&amp; systemctl enable flexget &amp;&amp; systemctl start flexget</p><h1 id="web-ui"><a href="#web-ui" class="headerlink" title="web-ui"></a>web-ui</h1><p>有两个 web-ui，使用v1就行了，区别就是v2还是半残品。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">web_server: </span><br><span class="line">  port: 9999</span><br><span class="line">  base_url: /</span><br><span class="line">  web_ui: yes</span><br><span class="line">  run_v2: true # 开启v2 webui，关闭注释即可</span><br></pre></td></tr></table></figure><p>访问地址不一样，vi: <a href="http://127.0.0.1:9999/" target="_blank" rel="noopener">http://127.0.0.1:9999/</a> ，v2: <a href="http://127.0.0.1:9999/v2/" target="_blank" rel="noopener">http://127.0.0.1:9999/v2/</a></p><p>需要设置密码，不能改用户名(flexget)，具体看官方文档。 <a href="https://flexget.com/Web-UI" target="_blank" rel="noopener">https://flexget.com/Web-UI</a> 。<br>效果图。</p><p><img src="https://raw.githubusercontent.com/rachpt/imgs/master/notes-for-flexget-1.jpg" alt="notes-for-flexget-1.jpg"></p><p><img src="https://raw.githubusercontent.com/rachpt/imgs/master/notes-for-flexget-2.jpg" alt="notes-for-flexget-2.jpg"></p><h1 id="过滤"><a href="#过滤" class="headerlink" title="过滤"></a>过滤</h1><p>几个用于的过滤方法。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">size_movie:</span><br><span class="line">  content_size:</span><br><span class="line">    min: 512</span><br><span class="line">    max: 22480</span><br><span class="line">    strict: no</span><br></pre></td></tr></table></figure></p><p>按种子内容大小(体积)，单位MB。范围在 512M 至 22480M 之间的才 accept。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">exists_movie:</span><br><span class="line">  path: /mnt/data/movies</span><br><span class="line">  allow_different_qualities: better</span><br></pre></td></tr></table></figure><p>如果path下已经有 1080p bluray版本资源，那么 720p bluary 就会被 reject掉。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">quality:</span><br><span class="line">  - 720p bluray</span><br><span class="line">  - 1080p webdl</span><br></pre></td></tr></table></figure><p>按质量挑选，可以使用范围选择。<a href="https://flexget.com/Plugins/quality" target="_blank" rel="noopener">https://flexget.com/Plugins/quality</a> 。</p><h1 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h1><p>template 中不能使用 过滤规则，比如 if。</p><p>可以 自动解压 rar zip 分卷或单个文件，<a href="https://flexget.com/Plugins/decompress" target="_blank" rel="noopener">https://flexget.com/Plugins/decompress</a> ，<br><a href="https://flexget.com/Plugins/archives" target="_blank" rel="noopener">https://flexget.com/Plugins/archives</a> ，还有设置 transmission ratio等。</p><p>debug 模式：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">flexget -L debug --test execute --tasks my-test-task</span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;之前一直使用最简单的if模块满足不了要求，探索使用新的模块。 &lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
    
      <category term="flexget" scheme="https://rachpt.github.io/tags/flexget/"/>
    
  </entry>
  
  <entry>
    <title>jupyter-notebook-cannot-work-with-the-same-base-name</title>
    <link href="https://rachpt.github.io/2019/04/10/jupyter-notebook-cannot-work-with-the-same-base-name/"/>
    <id>https://rachpt.github.io/2019/04/10/jupyter-notebook-cannot-work-with-the-same-base-name/</id>
    <published>2019-04-10T09:43:29.000Z</published>
    <updated>2019-04-29T02:37:09.000Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>.ipynb 死活连接不上kernel，但是单独放到其他目录又可以。</p></blockquote><a id="more"></a><p>使用 pycharm 以及 vs code编辑python 代码，但是运行时提示我的 matplotlib 有问题，因为我使用了 anaconda，同时有使用过 virtualenv，环境乱七八糟，但是我的 anaconda base环境里面使用我所用到的库的。由于代码也不多，于是想到直接使用jupyter notebook。</p><p>于是我创建了一个和刚才的 py 文件同名的 ipynb 文件。当然它们是在同一个文件夹下。下面就是我的遭遇：</p><p><img src="https://raw.githubusercontent.com/rachpt/imgs/master/jupyter-notebook-cannot-work-with-the-same-base-name-1.jpg" alt="jupyter-notebook-cannot-work-with-the-same-base-name-1.jpg"></p><p>我打开其他目录下的 ipynb 文件却是正常的，于是排除我的 jupyter 环境的问题。<br>经过一通复制粘贴重命名后，最终确定是那个 base name 一样的 py 文件导致的。改名问题解决。</p><p><img src="https://raw.githubusercontent.com/rachpt/imgs/master/jupyter-notebook-cannot-work-with-the-same-base-name-2.jpg" alt="jupyter-notebook-cannot-work-with-the-same-base-name-2.jpg"></p><p>这里记录一下，希望有用。</p>]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;.ipynb 死活连接不上kernel，但是单独放到其他目录又可以。&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
      <category term="python" scheme="https://rachpt.github.io/categories/python/"/>
    
    
      <category term="jupyter, python" scheme="https://rachpt.github.io/tags/jupyter-python/"/>
    
  </entry>
  
  <entry>
    <title>notes-about-awstats</title>
    <link href="https://rachpt.github.io/2019/03/22/notes-about-awstats/"/>
    <id>https://rachpt.github.io/2019/03/22/notes-about-awstats/</id>
    <published>2019-03-22T03:41:20.000Z</published>
    <updated>2019-03-22T04:28:04.000Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>使用awstata分析nginx以及vsftp日志。</p></blockquote><a id="more"></a><h1 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h1><p>可以使用相应平台的包管理器安装，也可以直接到<a href="https://awstats.sourceforge.io/#DOWNLOAD" target="_blank" rel="noopener">官网</a>下载归档文件，解压其中的 <code>wwwroot</code>放到nginx的根目录，或者在nginx config文件设置alias，可以参考 <a href="https://wiki.archlinux.org/index.php/awstats" target="_blank" rel="noopener">https://wiki.archlinux.org/index.php/awstats</a> 或者<code>tools/nginx/awstats-nginx.conf</code>文件。</p><p>另外，需要 perl，这个系统一般都带有。</p><h1 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h1><p>这部分比较复杂，可以使用配套的tools 里面的 <code>awstats_configure.pl</code> 交互式生成配置文件，也可以修改 <code>/etc/awstats/awstats.model.conf</code>，包管理器安装才有的。</p><p>我是用的 <code>pacman</code> 安装的，所以直接复制修改该model文件，将<code>model</code>改成自己的任务名，比如<code>web</code>或则<code>ftp</code>啥的。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">LogFile=&quot;/var/log/nginx/access.log&quot;</span><br><span class="line"></span><br><span class="line">LogType=W # 默认 web模式</span><br><span class="line"></span><br><span class="line">LogFormat=1</span><br><span class="line"></span><br><span class="line">SiteDomain=&quot;web-server&quot; # 改成你想显示的</span><br><span class="line"></span><br><span class="line">AllowToUpdateStatsFromBrowser=0  # 是否可以通过网页更新，具体好坏里面有说明</span><br><span class="line"></span><br><span class="line">DirIcons=&quot;/awstatsicons&quot; # 如果你修改了该路径</span><br><span class="line"></span><br><span class="line">UseFramesWhenCGI=0  # 是否开启侧边栏，0 不开</span><br><span class="line"></span><br><span class="line">ShowFlagLinks=&quot;en cn tw de jp&quot; # 显示语言切换按钮</span><br><span class="line"></span><br><span class="line">Logo=&quot;awstats_logo1.png&quot;  # logo 图片</span><br><span class="line">LogoLink=&quot;/&quot;   # logo 链接</span><br></pre></td></tr></table></figure><p>上面是 nginx 日志的，对于 vsftp 只有一点区别，就是需要自己定义 <code>LogFormat</code>，如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">LogFile=&quot;/var/log/vsftpd.log&quot; # vsftp 需要打开对应的日志开关！！！</span><br><span class="line"></span><br><span class="line">LogType=F  # ftp 模式</span><br><span class="line"></span><br><span class="line">LogFormat=&quot;%time3 %other %host %bytesd %url %other %other %method %other %logname %other %code %other %other&quot;  # 这个需要和你的 vsftp log 文件列匹配。</span><br><span class="line"></span><br><span class="line"># 其他类似</span><br></pre></td></tr></table></figure><p>需要注意文件权限问题，比如 wwwroot里面的 需要chown http(你的 nginx 运行用户)，log文件需要有读权限，否则你需要使用 root 运行下面家要说的生成命令。</p><h1 id="生成"><a href="#生成" class="headerlink" title="生成"></a>生成</h1><p>需要使用 crontab (cronie) 定时运行更新命令。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">sudo crontab -e # 创建 root 用户的定时任务</span><br><span class="line"># 每个 1 小时运行一次</span><br><span class="line">7 */1 * * * /usr/share/awstats/tools/awstats_updateall.pl now -awstatsprog=/usr/share/webapps/awstats/awstats/awstats.pl &gt; /home/awstatus.log</span><br><span class="line"># 因为配置文件在 etc 里面，所以上面没有指明路径。</span><br></pre></td></tr></table></figure><p>因为我是用的是nginx alias 方式，所以 -awstatsprog 路径就是安装默认路径。</p><h1 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h1><p>效果展示:</p><p><a href="http://mirrors.hust.edu.cn/visitor/" target="_blank" rel="noopener">http://mirrors.hust.edu.cn/visitor/</a></p><p><a href="http://rachpt.iok.la/awstats/awstats.pl?config=nginx" target="_blank" rel="noopener">http://rachpt.iok.la/awstats/awstats.pl?config=nginx</a></p><p><a href="http://rachpt.iok.la/awstats/awstats.pl?config=vsftp" target="_blank" rel="noopener">http://rachpt.iok.la/awstats/awstats.pl?config=vsftp</a></p>]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;使用awstata分析nginx以及vsftp日志。&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
      <category term="linux" scheme="https://rachpt.github.io/categories/linux/"/>
    
    
      <category term="awstats" scheme="https://rachpt.github.io/tags/awstats/"/>
    
  </entry>
  
  <entry>
    <title>amazing-sed-on-Linux</title>
    <link href="https://rachpt.github.io/2019/03/22/amazing-sed-on-Linux/"/>
    <id>https://rachpt.github.io/2019/03/22/amazing-sed-on-Linux/</id>
    <published>2019-03-22T01:26:57.000Z</published>
    <updated>2019-04-28T15:43:36.000Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>记录一些少有用到的sed使用技巧。</p></blockquote><a id="more"></a><h1 id="正则匹配"><a href="#正则匹配" class="headerlink" title="正则匹配"></a>正则匹配</h1><p>sed 默认情况使用基本正则表达式(BRE)，也就是有些元字符需要使用转义<code>\</code>，加上 <code>-E</code>或则<code>-r</code>参数后即可变成扩展正则表达a(ERE)式情况。</p><p>grep 可以使用 <code>-i</code> 参数忽略大小写，而 sed 的 <code>-i</code> 参数表示直接修改源文件而不是输出到标准输出 stdout，在替换模式下也是可以使用参数忽略大小写的，就是在 表示全部(g)的位置放置i。<code>sed &#39;s/旧的东西/新的东西/ig&#39; filename</code>。<code>g</code> 全部，<code>i</code>大小写不敏感。</p><p>sed 可以使用行号，范围或则正则表达式限定和面代码的作用范围，如<code>sed -n &#39;1,3 p&#39; filename</code> 只打印1到3行，如果有多个命令，则使用<code>;</code>分隔，<code>{}</code>裹起来。<code>sed -n &#39;1, /匹配这个/ {s/old/new/;s%ba/ba%la/la%}&#39; filename</code>，对于这个，使用正则表达式限定下界，普通情况我们使用两个<code>/</code>将正则表达式裹起来，可以看到后面替换模式中我们使用<code>%</code>而不是通常的<code>/</code>作为分隔符，这对于字段中包含<code>/</code>的情况会相当友好，不用使用<code>\</code>转义。所以前面正则表达式限定的地方有没有可能使用自定义符号而不是<code>/</code>？<strong>匹配网站链接、路径</strong>时需要注意，特别使用使用了变量的情况！！！有两种方式解决：</p><pre><code>1. 使用`\`对所有匹配内容中的`/`转义，2. 使用`\`转义你自己的第一个限定符。</code></pre><p><code>sed &#39;/abc\/def/ {do something}&#39; filename</code>，<code>sed &#39;\=abc/def= {do something}&#39; filename</code>。效果如下：</p><p><img src="https://raw.githubusercontent.com/rachpt/imgs/master/sed-amazimg-1.jpg" alt="sed-amazimg-1.jpg"></p><h1 id="追加多行"><a href="#追加多行" class="headerlink" title="追加多行"></a>追加多行</h1><p>通常我们使用 <code>a</code> 加上我们需要添加的内容 最佳到指定位置。但是我们找遇到了如下错误：</p><p><img src="https://raw.githubusercontent.com/rachpt/imgs/master/sed-amazimg-2.jpg" alt="sed-amazimg-2.jpg"></p><p>使用<code>\n</code>来表示换行如何，</p><p><img src="https://raw.githubusercontent.com/rachpt/imgs/master/sed-amazimg-3.jpg" alt="sed-amazimg-3.jpg"></p><p>这次我们成功了。那么我们只需要将包含多行的一个变量将 不可见的换行辅 替换成字符<code>\n</code>即可追加这个多行变量到指定位置。那么如何将一个包含多行的变量变成一个使用符号<code>\n</code>分隔的单行变量？<br><code>mult_lines=&quot;$(echo &quot;$mult_lines&quot;|sed &#39;:a;N;s/\n/\\n/;ta;&#39;)&quot;</code>，注意双引号的使用。这里使用<code>a</code> 作为自定义标示符(label)用于跳转，<code>N</code>追加到模式空间，<code>s</code>就是我们熟悉的替换，注意<code>\\n</code>的使用。<code>t</code>仅当最后一个替换命令修改了模式空间时才跳转到标签。如果未指定label，则跳转到脚本的末尾，<a href="https://www.thegeekstuff.com/2009/12/unix-sed-tutorial-6-examples-for-sed-branching-operation/" target="_blank" rel="noopener">扩展阅读</a>。<br>还有一个细节需要提一下，就是<code>$()</code>中我们使用<code>\\n</code>，如果是使用<code>` `</code> ，那么需要使用<code>\\\n</code>，<a href="https://github.com/rachpt/AutoSeed/blob/208aa23b2155d0b98999bdb38341ac23e65e8d58/get_desc/generate.sh#L66" target="_blank" rel="noopener">一个应用例子</a>。</p><h1 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h1><p>还没有…</p>]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;记录一些少有用到的sed使用技巧。&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
      <category term="linux" scheme="https://rachpt.github.io/categories/linux/"/>
    
    
      <category term="sed" scheme="https://rachpt.github.io/tags/sed/"/>
    
  </entry>
  
  <entry>
    <title>Trouble-with-automatic-mouse-copy-function-under-linux</title>
    <link href="https://rachpt.github.io/2019/02/22/Trouble-with-automatic-mouse-copy-function-under-linux/"/>
    <id>https://rachpt.github.io/2019/02/22/Trouble-with-automatic-mouse-copy-function-under-linux/</id>
    <published>2019-02-22T03:37:03.000Z</published>
    <updated>2019-04-29T02:37:10.000Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>突然选中文本就自动复制到粘贴板了，怎么回事？</p></blockquote><a id="more"></a><p>这几天又安装了 goldendict，配合 translate-shell 直接使用 goolgle 翻译文献。不知道怎么回事一时间 <code>Ctrl + C + C</code> 无法使用，各种折腾之后终于能用了。这不是重点，重点是现在突然发现我选中任意地方的文本后，就自动被复制到张贴板了，这对于浏览器操作及其不便。</p><p>关闭词典以及其屏幕取词也无效。<br>网上搜索一下，发现 linux 竟然有 选中复制/鼠标中建粘贴，以及 ctrl + c /ctrl + v 两种粘贴板，默认情况下两种粘贴板互相独立。因为我的某种操作让两种内容混在一起了。</p><p>粘贴板学问详情可以看 <a href="http://forum.ubuntu.org.cn/viewtopic.php?f=48&amp;t=279535" target="_blank" rel="noopener">http://forum.ubuntu.org.cn/viewtopic.php?f=48&amp;t=279535</a> 。</p><p>具体的误操作在该出<br><img src="https://raw.githubusercontent.com/rachpt/imgs/master/Trouble-with-automatic-mouse-copy-function-under-linux-1.jpg" alt="Trouble-with-automatic-mouse-copy-function-under-linux-1.jpg"></p><p>应该关闭<strong>同步剪切粘贴板和选中内容</strong>。</p><p>第一次知道还有选中复制这种功能。</p>]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;突然选中文本就自动复制到粘贴板了，怎么回事？&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
    
      <category term="linux, clipboard" scheme="https://rachpt.github.io/tags/linux-clipboard/"/>
    
  </entry>
  
  <entry>
    <title>latex-beamer-note</title>
    <link href="https://rachpt.github.io/2019/01/16/latex-beamer-note/"/>
    <id>https://rachpt.github.io/2019/01/16/latex-beamer-note/</id>
    <published>2019-01-16T06:24:19.000Z</published>
    <updated>2019-03-20T00:46:40.000Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>记录一些使用 LaTeX beamer 的技巧。</p></blockquote><a id="more"></a><h1 id="图片显示编号以及不显示编号"><a href="#图片显示编号以及不显示编号" class="headerlink" title="图片显示编号以及不显示编号"></a>图片显示编号以及不显示编号</h1><p>大部分模板图片都不会编号，只需在导言区加上如下</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">\setbeamertemplate&#123;caption&#125;[numbered]</span><br></pre></td></tr></table></figure><p>即可显示图片编号。<br><a href="https://yihui.name/cn/2010/08/show-caption-numbers-in-beamer/" target="_blank" rel="noopener">参考文档</a>。</p><p>自定义编号，使用caption 宏包。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">\usepackage&#123;caption&#125;</span><br></pre></td></tr></table></figure><p>标签使用 <code>\caption*{}</code>。<br><a href="https://blog.csdn.net/ProgramChangesWorld/article/details/51553683" target="_blank" rel="noopener">参考文档</a>。</p>]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;记录一些使用 LaTeX beamer 的技巧。&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
      <category term="latex" scheme="https://rachpt.github.io/categories/latex/"/>
    
    
      <category term="beamer" scheme="https://rachpt.github.io/tags/beamer/"/>
    
  </entry>
  
  <entry>
    <title>install-matlab-on-archlinux</title>
    <link href="https://rachpt.github.io/2018/12/31/install-matlab-on-archlinux/"/>
    <id>https://rachpt.github.io/2018/12/31/install-matlab-on-archlinux/</id>
    <published>2018-12-31T09:50:22.000Z</published>
    <updated>2019-07-14T08:58:35.802Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>由于archlinux 并不在matlab 官方支持的系统之列，之前使用不完整的matlab(无法使用实时脚本，帮助页面显示不正常)，一直觉得理所当然，居然是有解决办法的。</p></blockquote><a id="more"></a><h1 id="linux-上安装-matlab"><a href="#linux-上安装-matlab" class="headerlink" title="linux 上安装 matlab"></a>linux 上安装 matlab</h1><p>不同于windows，在linux安装iso封装的软件可能需要使用命令(mount)挂载先，然后运行安装程序，后面就是熟悉的点点点了。大体步骤如下：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">mkdir /tmp/matlab</span><br><span class="line"></span><br><span class="line">sudo mount  -o loop /mnt/data/MATLAB_R2018b_Linux/R2018b_glnxa64_dvd1.iso  /tmp/matlab</span><br><span class="line"></span><br><span class="line"><span class="comment"># 新开一个 terminal</span></span><br><span class="line"><span class="comment"># 使用普通账户运行！</span></span><br><span class="line">sudo /tmp/matlab/install  <span class="comment"># 如果安装到自己的家目录，不需要使用 sudo。</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 后面会弹出一个安装界面，</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 若全部安装，50% 时提示弹出 dvd1 插入 dvd2</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 使用 df 查看挂在的所有设备</span></span><br><span class="line">sudo umount -f /dev/loop0  <span class="comment"># 如果提示设备忙，可以稍微等几分钟，再试。</span></span><br><span class="line"></span><br><span class="line">sudo mount  -o loop /mnt/data/MATLAB_R2018b_Linux/R2018b_glnxa64_dvd2.iso  /tmp/matlab</span><br><span class="line"></span><br><span class="line"><span class="comment"># 点击安装界面的继续</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 最后  umount ，以及 rmdir /tmp/matlab</span></span><br></pre></td></tr></table></figure><p> 和windows的安装一样(挂载相同的盘符)，dvd2 的挂载点(路径)应与dvd1 一致。理论上相当于将两dvd解压到一个文件夹(挂载相当于允许你分两次解压)。</p><h1 id="matlab-支持的系统"><a href="#matlab-支持的系统" class="headerlink" title="matlab 支持的系统"></a>matlab 支持的系统</h1><p>如下图：<br><img src="https://raw.githubusercontent.com/rachpt/imgs/master/install-matlab-on-archlinux-1.jpg" alt="install-matlab-on-archlinux-1.jpg"></p><p><a href="https://ww2.mathworks.cn/support/sysreq.html" target="_blank" rel="noopener">https://ww2.mathworks.cn/support/sysreq.html</a></p><p>并没有 archlinux。archlinux wiki上如是说：<br><img src="https://raw.githubusercontent.com/rachpt/imgs/master/install-matlab-on-archlinux-2.jpg" alt="install-matlab-on-archlinux-2.jpg"></p><p><a href="https://wiki.archlinux.org/index.php/MATLAB" target="_blank" rel="noopener">https://wiki.archlinux.org/index.php/MATLAB</a></p><p>所以但我安装后遇到 matlab 无法使用试试脚本以及帮助文档不正常时，以为这就是不支持的代价。</p><p>我甚至已经使用systemd-nspawn 构建 ubuntu容器运行 matlab，但是容器中的matlab仍然有如上问题。<br>同样的matlab 版本，我在 ubuntu 系的linux上安装所有功能均表现正常。这甚至逼迫我更换系统发行版。</p><p>无意中发现通过下面的办法是可以解决archlinux 中matlab 部分功能受限的问题。</p><h1 id="解决办法"><a href="#解决办法" class="headerlink" title="解决办法"></a>解决办法</h1><ol><li>通过 dvd 安装好matlab 2018b后，</li><li>使用<code>yaourt matlab-r2017b</code> (这个时候最高只有2017b)安装依赖。<br>推荐使用 yay，yaourt已经没有继续维护了，现在(2019.7)已经有 matlab-r2018b了。</li><li>构建肯定是会失败的，但是依赖会被安装。</li></ol><p>也可以自己安装 如下图片中所示的依赖，使用 yaourt 比较省事。</p><p><img src="https://raw.githubusercontent.com/rachpt/imgs/master/install-matlab-on-archlinux-3.jpg" alt="install-matlab-on-archlinux-3.jpg"></p><p>下面是matlab安装依赖前的报错情况。</p><p><img src="https://raw.githubusercontent.com/rachpt/imgs/master/install-matlab-on-archlinux-4.jpg" alt="install-matlab-on-archlinux-4.jpg"></p><p>实时脚本、帮助文档正常图。</p><p><img src="https://raw.githubusercontent.com/rachpt/imgs/master/install-matlab-on-archlinux-5.jpg" alt="install-matlab-on-archlinux-5.jpg"></p><h1 id="最后"><a href="#最后" class="headerlink" title="最后"></a>最后</h1><p>通过最近频繁更换linux 发行版，得出的结论就是，home 和系统分开，大软件安装到 home下user 外面，比如 matlab comsol crossover pycharm anaconda 等。</p><p>.desktop 文件使用绝对路径，添加到 ~/.local/share/applications/ 里面。<br>下面是我的 matlab.desktop。</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">[Desktop Entry] </span><br><span class="line">Categories=Application;Development;</span><br><span class="line">Comment=Scientific computing environment</span><br><span class="line">Encoding=UTF-8</span><br><span class="line">Exec=/home/program/MATLAB/R2018b/bin/matlab -desktop</span><br><span class="line">Icon=/home/program/MATLAB/R2018b/toolbox/shared/dastudio/resources/MatlabIcon.png</span><br><span class="line">Name=MATLAB R2018b</span><br><span class="line">StartupNotify=<span class="literal">true</span> </span><br><span class="line">Terminal=<span class="literal">false</span></span><br><span class="line">Type=Application</span><br></pre></td></tr></table></figure><p>如果 命令行窗口 出现方块，只需要修改使用的字体以显示中文字符。</p>]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;由于archlinux 并不在matlab 官方支持的系统之列，之前使用不完整的matlab(无法使用实时脚本，帮助页面显示不正常)，一直觉得理所当然，居然是有解决办法的。&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
      <category term="linux" scheme="https://rachpt.github.io/categories/linux/"/>
    
    
      <category term="matlab" scheme="https://rachpt.github.io/tags/matlab/"/>
    
  </entry>
  
  <entry>
    <title>something-difference-from-manjaro-back-to-ubuntu</title>
    <link href="https://rachpt.github.io/2018/12/18/something-difference-from-manjaro-back-to-ubuntu/"/>
    <id>https://rachpt.github.io/2018/12/18/something-difference-from-manjaro-back-to-ubuntu/</id>
    <published>2018-12-18T07:03:54.000Z</published>
    <updated>2018-12-18T08:17:36.000Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>qprop无法在软件较新的manjaro上编译运行，matlab实时脚本、帮助文档在arch-linux上有问题，mj更新系统很大概率遇到装不上。这三点因素使我做出再次更换系统的决定。</p></blockquote><a id="more"></a><h1 id="适合自己的linux发行版"><a href="#适合自己的linux发行版" class="headerlink" title="适合自己的linux发行版"></a>适合自己的linux发行版</h1><p>到目前为止，我已经完全使用linux系统一年了，所谓完全就是作为主力机器，能不用Windows坚决不用Windows。在这之前自认为对Windows的使用有一些自己的见解，对于配置出适合自己的Windows工作环境非常熟悉。清晰的知道Windows所不能给我提供的功能(或者实现困难)，我尝试过使用 ubuntu 以及ubuntu麒麟(大概14年，那时候原生的ubuntu配置中文比较费劲)，当时啥都不会，没多久就回到Windows10预览版了(那时候Windows8的开始屏可恶心死我了)，后面有试过几次，都没能领会到linux的精髓。</p><p>去年的大约这个时候，由于当时有一台闲置的pc用于 web 服务器，刚开始用的 Windows10，由于Windows总是自己坏掉，于是试了 Windows server 2016，稳定运行15天后再次死机，再加上当时我们需要连接超级计算机提交计算任务，于是了解了部分linux的脚本命令等，有理由相信我已经可以驾驭(使用)linux了，于是安装了ubuntu 16.04lts 到那台闲置的机器上。经过各种配置后，相当稳定，连续正常运行 93 天(后来需要升级系统才关机的)，在了解到各种软件的linux情况后，果断将工作电脑安装上 linux。</p><p>使用过好几个桌面系统，debian 系的、redhat 系的，最后选择了 linux mint，因为界面很适合从Windows转过来的用户，ubuntu的核心让我能够在网上找到较多的教程。用的相当舒适。直到后来从 18.3 升级到 19，有道词典用不了了(看文献屏幕取词翻译)。</p><p>我也试过回到就得 18.3，但是当时因为 python 的几个库的依赖相互冲突解决不了(可能是 3.5太老了，加上用过新的界面就回不去了)，最后我强行升级系统python直接将系统弄死了。</p><p>rpm的包看着好不友好，还有个莫名其妙的 iptable，对于我来说往往全全就是阻碍，centos 难用到死的 gnome桌面我打死不会再试，suse 由于当时试的 kde 版本，各种快捷键都不一样，最后被定义为难用。</p><p>先在笔记本装了 manjaro 的 cinnamon版本，一直也没啥问题。体验几乎和 mint 一致。<br>最后将 开机 没有任何窗口的mint 18.3 替换成manjaro kde版，毕竟ked试manjaro官方维护的，可能会好一些。</p><p>经过短暂而痛苦的学习习惯kde桌面后，配置后喜爱的工作环境，还行。</p><p>不知道什么原因，TensorFlow本来一条命令轻轻松松搞定，然而费了吃奶的力气才装上，MATLAB的安装更是气，先后试了 2017a 2018a 2018b，中午乱码，无法创建实时脚本，帮助页面显示有问题。忍着用！还有最近好几次遇到升级时提示 python的xxx已经存在，无法升级系统，长久考虑，以后可能会出大问题。</p><p>加上最近导师想要使用 <a href="https://github.com/jam31118/rigged-qprop" target="_blank" rel="noopener">qprop</a> 计算东西，刚开始怎么都编译不了，后面编译好后运行有问题。但是在个导师新装的 ubuntu 上编译后可以运行。</p><p>在虚拟机中测试 kubuntu 可以编译运行。于是重装系统至 kubuntu。</p><h1 id="matlab"><a href="#matlab" class="headerlink" title="matlab"></a>matlab</h1><p>刚开始时 实时脚本帮助文档都没问题，但是更换为原来的 home 后，又有问题了。<br>删除 ~/.matlab 后一切正常！</p><h1 id="搜狗乱码"><a href="#搜狗乱码" class="headerlink" title="搜狗乱码"></a>搜狗乱码</h1><p>貌似不需要 archlinux 的在 .xinputrc 里面加东西，其他<a href="https://blog.csdn.net/oncealong/article/details/79328930" target="_blank" rel="noopener">参考这里</a>。</p><h1 id="使用原home"><a href="#使用原home" class="headerlink" title="使用原home"></a>使用原home</h1><p>使用 fstab 挂载原来的 home，体验很糟糕，文件管理器中文乱码，全新配置不会。</p><p>使用 cp -axv /old/home/xxconf /new/home/dir 还原 .mozilla 等软件数据。</p><p>待续…</p>]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;qprop无法在软件较新的manjaro上编译运行，matlab实时脚本、帮助文档在arch-linux上有问题，mj更新系统很大概率遇到装不上。这三点因素使我做出再次更换系统的决定。&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
      <category term="linux" scheme="https://rachpt.github.io/categories/linux/"/>
    
    
      <category term="linux, ubuntu" scheme="https://rachpt.github.io/tags/linux-ubuntu/"/>
    
  </entry>
  
  <entry>
    <title>dual-disk-install-dual-system</title>
    <link href="https://rachpt.github.io/2018/12/10/dual-disk-install-dual-system/"/>
    <id>https://rachpt.github.io/2018/12/10/dual-disk-install-dual-system/</id>
    <published>2018-12-10T06:46:25.000Z</published>
    <updated>2019-04-29T02:37:09.000Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>双 11 花了110元买了块 mstata 固态硬盘，完成多年的愿望。这里记录一下双硬盘独立安装 windows 和 Linux 系统。</p></blockquote><a id="more"></a><h1 id="现在的情况"><a href="#现在的情况" class="headerlink" title="现在的情况"></a>现在的情况</h1><p>一般网上都是单一硬盘安装双系统的，不管是 legacy 或是 uefi，双系统的引导文件都在一块硬盘里面，所以最多就是通过软件修复一下例外一个系统的引导即可。<br>现在的情况是两块固态硬盘，大小一样 120G，需要将 windows 安装到其中一块，而 Linux 安装到另外一块，并且希望在开机的时候提供一个友好的选择系统的界面。</p><p>比较容易实现的是，两块硬盘按照正常步骤分别安装到两硬盘，开机的时候 狂按 F12 (或者其他) 进入 boot manger 选择不同启动硬盘，就能进入不同的系统。但是操作很是不友好。</p><h1 id="背景知识"><a href="#背景知识" class="headerlink" title="背景知识"></a>背景知识</h1><p>win7 不支持 uefi + GPT 模式启动，只能使用传统的 legacy Bios + MBR 模式启动，缺点很明显，硬盘上线2.2T，启动速度也相对慢，多了 Bios 自检过程。<br><a href="https://zhuanlan.zhihu.com/p/36976698" target="_blank" rel="noopener">更多请看这里</a>，<a href="https://blog.csdn.net/u014712482/article/details/80686387" target="_blank" rel="noopener">或者这里</a>。</p><p>刚开始的时候，我的唯一的硬盘上面安装的是 manjaro Linux，加装硬盘后，我使用常规方法安装了 windows 10，然后我将 windows 盘作为默认启动硬盘，使用 easyBSD 创建 Linux 的引导，失败告终，windows 不能切换 Linux，只能改启动应到盘。</p><p>就在要绝望的时候，有人说 Fedora 可以双硬盘安装并解决双系统引导问题。于是开始准别全部重装。</p><h1 id="重装系统"><a href="#重装系统" class="headerlink" title="重装系统"></a>重装系统</h1><p>能用 uefi 的机器我当然不会使用 legacy 啦。</p><p>首先安装 windows 到 windows 认为的 disk 0，后来发现这个可有可无。<br>有几点需要注意，修改 windows 安装程序 默认的 efi 100m 的设置，因为我们想把 linux 的 efi 挂载到 windows 的 efi 分区。<br>时候证明，这一步可能不需要(在linux下看到 efi 使用量 35 m)。</p><p>系统版本选择界面后，按<code>Shift+F10</code>调出命令提示符，</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">diskpart</span><br><span class="line">list disk</span><br><span class="line">select disk 0</span><br><span class="line">clean</span><br><span class="line">convert gpt</span><br><span class="line">create partition efi size=800</span><br><span class="line">create partition primary size=102400</span><br></pre></td></tr></table></figure><p>自定义 efi 分区大小， 其实 500m 可能就够了，保险起见，设了 800m。</p><p><a href="https://www.ithome.com/html/win10/224908.htm" target="_blank" rel="noopener">具体情况这个参考文档</a>。</p><p><strong>第一次</strong>尝试安装 Fedora cinnamon 版本，一切照旧，我只是选择了 安装到另外空的硬盘，分区使用自动。<br>装好后，自动将 Linux 盘作为了默认引导硬盘，greb 页面出了 Fedora 外还有 windows 的启动项，一切如愿。当然选择 windows 所在硬盘为默认引导盘 自然无法进入 Linux。</p><p>本来就此结束，但是那个引导界面实在是太丑了，还有 Fedora 用不习惯。</p><p>于是开始<strong>第二次</strong>尝试。<br>Linux 版本是 manjaro KDE 版本，windows 还是之前的不变，只是格式化 Fedora 的盘。<br>安装的时候 自己设置分区以及挂载点。<br>windows 的(/dev/sda) efi 分区挂载到 /boot/efi，不格式化， /dev/sdb 上8 G linuxswap，其余全部ext4 挂载点 / 。</p><p>装完后 一切和 Fedora 一致，引导界面漂亮了很多，很现代，还能记住上一次使用的引导选项。</p><p>在 linux 下可以看到 efi 里面有 windows 的引导文件夹。</p><p>有可能在windows下使用 efi 引导修复工具可以将 Linux 引导选项加入到 windows 引导列表里面，这样每个硬盘都能引导双系统(未测试)。</p><p><img src="https://raw.githubusercontent.com/rachpt/imgs/master/dual-disk-install-dual-system-1.jpg" alt="dual-disk-install-dual-system-1.jpg">。</p>]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;双 11 花了110元买了块 mstata 固态硬盘，完成多年的愿望。这里记录一下双硬盘独立安装 windows 和 Linux 系统。&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
      <category term="linux" scheme="https://rachpt.github.io/categories/linux/"/>
    
    
      <category term="linux, windows" scheme="https://rachpt.github.io/tags/linux-windows/"/>
    
  </entry>
  
  <entry>
    <title>change-to-use-archlinux</title>
    <link href="https://rachpt.github.io/2018/12/01/change-to-use-archlinux/"/>
    <id>https://rachpt.github.io/2018/12/01/change-to-use-archlinux/</id>
    <published>2018-12-01T12:59:54.000Z</published>
    <updated>2018-12-01T13:30:09.000Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>因为python版本的原因，从linuxmint 19 换回mint18.3，最后尝试使用基于archlinux的manjaro。这里记录几个刚开始比较头疼的问题。</p></blockquote><a id="more"></a><h1 id="KED"><a href="#KED" class="headerlink" title="KED"></a>KED</h1><p>之前习惯了类windows的cinnamon，也想过直接使用manjaro的cinnamon版本，但是考虑到 mint19 上比较容易出现的xwindow卡死，于是决定尝试使用manjaro官方支持的kde版本，之前体验过一小段时间，当时感觉是初始设置反人类，设置麻烦。<br>经过一两周的使用，现在基本上能把kde配置成方便自己习惯了。</p><ol><li>文件双击打开，</li><li>桌面显示desktop文件夹内容，</li><li>任务栏调成类 windows，</li><li>开机自动启用小键盘，</li><li>安装 tim，kde connect配合安卓手机太棒了！<br>…</li></ol><h1 id="Tinyproxy"><a href="#Tinyproxy" class="headerlink" title="Tinyproxy"></a>Tinyproxy</h1><p>安装好后啥配置对没改，使用 systemctl 启动不了，提示啥 <code>/run/tinyproxy/tinyproxy.pid</code> 无法创建。</p><p>解决办法：<br><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># PidFile: Write the PID of the main tinyproxy thread to this file so it</span></span><br><span class="line"><span class="comment"># can be used for signalling purposes.</span></span><br><span class="line"><span class="comment"># If not specified, no pidfile will be written.</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment">#PidFile "/run/tinyproxy/tinyproxy.pid"</span></span><br></pre></td></tr></table></figure></p><p>取消 <code>/etc/tinyproxy/tinyproxy.conf</code> 如上的注释行。<br><a href="https://github.com/StreisandEffect/streisand/issues/1381" target="_blank" rel="noopener">参考文档</a>。</p><h1 id="vsftpd"><a href="#vsftpd" class="headerlink" title="vsftpd"></a>vsftpd</h1><p>vsftpd 的匿名模式路径一片空白，使用shell的ftp也连接不了。<br>解决办法：<br><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">vim /etc/vsftpd.conf</span><br><span class="line"><span class="comment"># 添加下面一行</span></span><br><span class="line">seccomp_sandbox=NO</span><br></pre></td></tr></table></figure></p><p><a href="https://wiki.archlinux.org/index.php/Very_Secure_FTP_Daemon" target="_blank" rel="noopener">参考文档</a>。</p><p>例外，vsftpd 不支持使用 ln -s 软连接，使用 mount –band /old /new 可解。<br><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 在 /etc/fstab 中添加如下行，以便开机自动bind。</span></span><br><span class="line">/mnt/data/pub                             /srv/ftp/pub       none  <span class="built_in">bind</span>    0 0</span><br></pre></td></tr></table></figure></p><h1 id="swapfie"><a href="#swapfie" class="headerlink" title="swapfie"></a>swapfie</h1><p>使用<code>sudo fallocate -l 20G /swapfile</code> 快速创建大体积swapfile 文件。<br><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">sudo fallocate -l 20G /swapfile</span><br><span class="line"><span class="comment"># 为了安全</span></span><br><span class="line">sudo chown root:root /swapfile</span><br><span class="line"></span><br><span class="line">sudo chmod 0600 /swapfile</span><br><span class="line"></span><br><span class="line">sudo mkswap /swapfile</span><br><span class="line"><span class="comment"># 开</span></span><br><span class="line">sudo swapon /swapfile</span><br><span class="line"><span class="comment"># 关</span></span><br><span class="line">sudo swapoff /swapfile</span><br><span class="line"></span><br><span class="line"><span class="comment"># 添加开机自动挂载</span></span><br><span class="line">vim /etc/fstab</span><br><span class="line"></span><br><span class="line">/swapfile      none       swap    sw 0 0</span><br></pre></td></tr></table></figure></p><p>/etc/fstab 会在启动的时候执行. 若文件有误那么会启动失败！！！</p>]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;因为python版本的原因，从linuxmint 19 换回mint18.3，最后尝试使用基于archlinux的manjaro。这里记录几个刚开始比较头疼的问题。&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
    
      <category term="linux" scheme="https://rachpt.github.io/tags/linux/"/>
    
  </entry>
  
  <entry>
    <title>an-error-in-mpv-player</title>
    <link href="https://rachpt.github.io/2018/10/28/an-error-in-mpv-player/"/>
    <id>https://rachpt.github.io/2018/10/28/an-error-in-mpv-player/</id>
    <published>2018-10-28T08:29:17.000Z</published>
    <updated>2018-10-28T08:37:38.000Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>最近 mpv 突然打不开，终端运行提示 libtalloc 版本有问题。</p></blockquote><a id="more"></a><p>使用终端运行错误提示如下，</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ mpv  </span><br><span class="line">mpv: relocation error: /usr/lib/x86_64-linux-gnu/libldb.so.1: symbol talloc_strdup_append_buffer version TALLOC_2.0.2 not defined <span class="keyword">in</span> file libtalloc.so.2 with link time reference</span><br></pre></td></tr></table></figure><p>百度一番，有类似的问题的解决记录。</p><p><a href="http://blog.chinaunix.net/uid-27057175-id-5747280.html" target="_blank" rel="noopener">文档1</a>，<a href="https://answers.launchpad.net/ubuntu/+question/291448" target="_blank" rel="noopener">文档2</a>.</p><p>经比较，应该是 libtalloc 有问题。</p><p>解决：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get install --reinstall libtevent0 libtalloc2</span><br><span class="line"></span><br><span class="line"><span class="comment"># 可能只要最后的 libtalloc2 即可</span></span><br></pre></td></tr></table></figure><p>小记。</p>]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;最近 mpv 突然打不开，终端运行提示 libtalloc 版本有问题。&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
    
      <category term="linux" scheme="https://rachpt.github.io/tags/linux/"/>
    
  </entry>
  
  <entry>
    <title>change-the-resolution-of-the-console</title>
    <link href="https://rachpt.github.io/2018/09/20/change-the-resolution-of-the-console/"/>
    <id>https://rachpt.github.io/2018/09/20/change-the-resolution-of-the-console/</id>
    <published>2018-09-20T12:52:51.000Z</published>
    <updated>2018-09-26T03:09:02.000Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>周末花了一个下午搞定了 Linux 字符界面分辨率与中文环境。</p></blockquote><a id="more"></a><h1 id="Console"><a href="#Console" class="headerlink" title="Console"></a>Console</h1><p>一般有图形界面的 Linux 发行版通过 <code>Ctrl + Alt + F[1-6]</code> 进入(切换)到字符界面(控制台 字符哑终端) console.<code>C + A + F7</code> 返回 x-window。</p><p>临时切换至字符界面能过在不影响后台计算进程的前提下处理轻量文本任务、查看系统状态等操作。</p><p>但是有两个问题，一是分辨率，二是中文支持。</p><h1 id="分辨率"><a href="#分辨率" class="headerlink" title="分辨率"></a>分辨率</h1><p>由于之前图方便，直接使用的 VGA 接口，字符界面分辨率特别难受，后来查看才得知 1080p 的显示器一直使用的 800x600 分辨率模式，各种模糊、显示不清，甚至让我怀疑 linux 版本的问题。Google 百度来来回回一个下午找到一些修改 vga 模式下分辨率的方法。</p><p>对于 ubuntu / Linux mint，修改 grub 配置文件 <code>/etc/default/grub</code>。</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 添加</span></span><br><span class="line">GRUB_GFXMODE=1600x1200x32</span><br><span class="line">GRUB_GFXPAYLOAD_LINUX=keep</span><br></pre></td></tr></table></figure><p>之前一直坑在这里面，就是自以为 分辨率以及 色深自己根据显示器随便写就是。<br>后面才发现需要在开机选择引导时，按 <code>c</code> 进入 grub 界面，使用 <code>vbeinfo</code> 查看系统支持的分辨率和色深。</p><p>写非法的分辨率以及色深会导致 console 进不去。</p><p>鉴于 vga 模式下的分辨率没有和显示器匹配的。于是不得不改用 DVI接口，渣渣显卡没有 HDMI 接口，否则就不存在这些问题。</p><p>dvi 可以粗略理解为 HDMI 接口的缩水版，dvi 和 HDMI 接口都是数字信号传输的，直接匹配显示器分辨率。</p><p><strong>所以最终的解决办法是 使用 DVI/HDMI 接口代替 VGA 接口</strong></p><h1 id="中文"><a href="#中文" class="headerlink" title="中文"></a>中文</h1><ol><li><p>使用英文作为系统语言，添加中文支持，这样欢迎等信息都是英文。</p></li><li><p>安装 <code>sudo apt install zhcon</code></p></li></ol><p>使用 <code>zhcon --utf8</code> 进入中文环境。</p><h1 id="鼠标"><a href="#鼠标" class="headerlink" title="鼠标"></a>鼠标</h1><p>使用 <code>GPM</code> 实现.<br>安装:</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">sudo apt install gpm</span><br><span class="line"></span><br><span class="line">sudo systemctl <span class="built_in">enable</span> gpm.service</span><br><span class="line"></span><br><span class="line">sudo systemctl start gpm.service</span><br><span class="line"></span><br><span class="line">sudo systemctl status gpm.service</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;周末花了一个下午搞定了 Linux 字符界面分辨率与中文环境。&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
      <category term="linux" scheme="https://rachpt.github.io/categories/linux/"/>
    
    
      <category term="console" scheme="https://rachpt.github.io/tags/console/"/>
    
  </entry>
  
  <entry>
    <title>vim-set-working-directory-to-the-current-file</title>
    <link href="https://rachpt.github.io/2018/08/22/vim-set-working-directory-to-the-current-file/"/>
    <id>https://rachpt.github.io/2018/08/22/vim-set-working-directory-to-the-current-file/</id>
    <published>2018-08-22T01:47:54.000Z</published>
    <updated>2019-04-29T02:37:10.000Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>vim自动进入打开文件所在目录,原谅我无耻地 copy。</p></blockquote><a id="more"></a><p>如果装了插件 NERDTree，使用 <code>:NERDTreeFind</code> 可以扩展到打开文件所在目录。不自动有点麻烦。</p><p>百度了一圈，找到的答案是使用</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&quot;在.vimrc 中加入</span><br><span class="line">execute &quot;cd&quot; expand(&quot;%:h&quot;)</span><br></pre></td></tr></table></figure><p>缺点是如果目录路径中有特殊字符可能报错。比如：<br><img src="https://raw.githubusercontent.com/rachpt/imgs/master/vim-set-working-directory-to-the-current-file-1.jpg" alt="vim-set-working-directory-to-the-current-file-1.jpg"></p><p>使用 Google 查找关键词 <code>vimrc execute cd expand</code>，找到 vim 官方解决办法。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">set autochdir</span><br><span class="line"></span><br><span class="line">autocmd BufEnter * silent! lcd %:p:h</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">autocmd BufEnter * if expand(&quot;%:p:h&quot;) !~ &apos;^/tmp&apos; | silent! lcd %:p:h | endif</span><br></pre></td></tr></table></figure><p>第一种，可能和某些插件有冲突，本人测试刚才有特殊字符的文件正常。<br>后面两个兼容性更好，最后一个加了判断，<code>/tmp</code> 中的文件不切换到改路径去。此法最好。</p><p>参考<a href="https://www.douban.com/note/543140992/" target="_blank" rel="noopener">文档1</a>，<a href="http://vim.wikia.com/wiki/Set_working_directory_to_the_current_file" target="_blank" rel="noopener">文档2-wiki</a>.</p>]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;vim自动进入打开文件所在目录,原谅我无耻地 copy。&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
      <category term="linux" scheme="https://rachpt.github.io/categories/linux/"/>
    
    
      <category term="vim" scheme="https://rachpt.github.io/tags/vim/"/>
    
  </entry>
  
  <entry>
    <title>service-systemctl-and-daemon</title>
    <link href="https://rachpt.github.io/2018/07/28/service-systemctl-and-daemon/"/>
    <id>https://rachpt.github.io/2018/07/28/service-systemctl-and-daemon/</id>
    <published>2018-07-27T16:43:38.000Z</published>
    <updated>2019-05-29T13:03:07.000Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>前面说到了使用原码编译 <code>transmission-daemon</code> <code>qbittorrent-nox</code> <code>nginx</code> ，但是需要自己配置启动脚本。</p></blockquote><a id="more"></a><h1 id="transmission-daemon"><a href="#transmission-daemon" class="headerlink" title="transmission-daemon"></a>transmission-daemon</h1><p>之前使用 apt 安装的 tr-d ，虽然很容易可以使用 <code>sudo systemctl enable|start|stop|status transmission-daemon</code>，但是不得不忍受一个很长很傻的运行用户名，而且修改起来特别麻烦，文件权限也是乱的很。</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br></pre></td><td class="code"><pre><span class="line">sudo vim /etc/init.d/transmission-daemon</span><br><span class="line"></span><br><span class="line"><span class="comment"># 添加下面的脚本，并给执行权限</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#!/bin/sh -e</span></span><br><span class="line"></span><br><span class="line"><span class="comment">### BEGIN INIT INFO</span></span><br><span class="line"><span class="comment"># Provides:          transmission-daemon</span></span><br><span class="line"><span class="comment"># Required-Start:    $local_fs $remote_fs $network</span></span><br><span class="line"><span class="comment"># Required-Stop:     $local_fs $remote_fs $network</span></span><br><span class="line"><span class="comment"># Default-Start:     2 3 4 5</span></span><br><span class="line"><span class="comment"># Default-Stop:      0 1 6</span></span><br><span class="line"><span class="comment"># Short-Description: Start or stop the transmission-daemon.</span></span><br><span class="line"><span class="comment"># Description:       Enable service provided by transmission-daemon.</span></span><br><span class="line"><span class="comment">### END INIT INFO</span></span><br><span class="line"></span><br><span class="line">NAME=transmission-daemon</span><br><span class="line">DAEMON=/usr/bin/<span class="variable">$NAME</span></span><br><span class="line">USER=rachpt</span><br><span class="line">STOP_TIMEOUT=30</span><br><span class="line"></span><br><span class="line"><span class="built_in">export</span> PATH=<span class="string">"<span class="variable">$&#123;PATH:+$PATH:&#125;</span>/sbin"</span></span><br><span class="line"></span><br><span class="line">[ -x <span class="variable">$DAEMON</span> ] || <span class="built_in">exit</span> 0</span><br><span class="line"></span><br><span class="line">[ -e /etc/default/<span class="variable">$NAME</span> ] &amp;&amp; . /etc/default/<span class="variable">$NAME</span></span><br><span class="line"></span><br><span class="line">. /lib/lsb/init-functions</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">start_daemon</span></span> () &#123;</span><br><span class="line">    <span class="keyword">if</span> [ <span class="variable">$ENABLE_DAEMON</span> != 1 ]; <span class="keyword">then</span></span><br><span class="line">        log_progress_msg <span class="string">"(disabled)"</span></span><br><span class="line">    log_end_msg 255 || <span class="literal">true</span></span><br><span class="line">    <span class="keyword">else</span>    </span><br><span class="line">        start-stop-daemon --start \</span><br><span class="line">        --chuid <span class="variable">$USER</span> \</span><br><span class="line"><span class="variable">$START_STOP_OPTIONS</span> \</span><br><span class="line">        --<span class="built_in">exec</span> <span class="variable">$DAEMON</span> -- <span class="variable">$OPTIONS</span> || log_end_msg $?</span><br><span class="line">log_end_msg 0</span><br><span class="line">    <span class="keyword">fi</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">case</span> <span class="string">"<span class="variable">$1</span>"</span> <span class="keyword">in</span></span><br><span class="line">    start)</span><br><span class="line">        log_daemon_msg <span class="string">"Starting bittorrent daemon"</span> <span class="string">"<span class="variable">$NAME</span>"</span></span><br><span class="line">        start_daemon</span><br><span class="line">        ;;</span><br><span class="line">    stop)</span><br><span class="line">        log_daemon_msg <span class="string">"Stopping bittorrent daemon"</span> <span class="string">"<span class="variable">$NAME</span>"</span></span><br><span class="line">        start-stop-daemon --stop --quiet \</span><br><span class="line">            --<span class="built_in">exec</span> <span class="variable">$DAEMON</span> --retry <span class="variable">$STOP_TIMEOUT</span> \</span><br><span class="line">            --oknodo || log_end_msg $?</span><br><span class="line">        log_end_msg 0</span><br><span class="line">        ;;</span><br><span class="line">    reload)</span><br><span class="line">        log_daemon_msg <span class="string">"Reloading bittorrent daemon"</span> <span class="string">"<span class="variable">$NAME</span>"</span></span><br><span class="line">        start-stop-daemon --stop --quiet \</span><br><span class="line">            --<span class="built_in">exec</span> <span class="variable">$DAEMON</span> \</span><br><span class="line">            --oknodo --signal 1 || log_end_msg $?</span><br><span class="line">        log_end_msg 0</span><br><span class="line">        ;;</span><br><span class="line">    restart|force-reload)</span><br><span class="line">        log_daemon_msg <span class="string">"Restarting bittorrent daemon"</span> <span class="string">"<span class="variable">$NAME</span>"</span></span><br><span class="line">        start-stop-daemon --stop --quiet \</span><br><span class="line">            --<span class="built_in">exec</span> <span class="variable">$DAEMON</span> --retry <span class="variable">$STOP_TIMEOUT</span> \</span><br><span class="line">            --oknodo || log_end_msg $?</span><br><span class="line">        start_daemon</span><br><span class="line">        ;;</span><br><span class="line">    status)</span><br><span class="line">        status_of_proc <span class="string">"<span class="variable">$DAEMON</span>"</span> <span class="string">"<span class="variable">$NAME</span>"</span> &amp;&amp; <span class="built_in">exit</span> 0 || <span class="built_in">exit</span> $?</span><br><span class="line">        ;;</span><br><span class="line">    *)</span><br><span class="line">        log_action_msg <span class="string">"Usage: /etc/init.d/<span class="variable">$NAME</span> &#123;start|stop|reload|force-reload|restart|status&#125;"</span> || <span class="literal">true</span></span><br><span class="line">        <span class="built_in">exit</span> 2</span><br><span class="line">        ;;</span><br><span class="line"><span class="keyword">esac</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">exit</span> 0</span><br></pre></td></tr></table></figure><p>文件的开头 ### 部分为LSB tags，格式比较固定，可以参考其他的修改，如果没有会有如下类似报错：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">ssh.service is not a native service, redirecting to systemd-sysv-install</span><br><span class="line">Executing /lib/systemd/systemd-sysv-install <span class="built_in">enable</span> ssh</span><br><span class="line">insserv: warning: script <span class="string">'ssh'</span> missing LSB tags and overrides</span><br><span class="line">update-rc.d: error: ssh Default-Start contains no runlevels, aborting.</span><br></pre></td></tr></table></figure><p>[参考文档tps://my.oschina.net/apis/blog/1647729?p=1)。</p><p>使用命令：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">sudo update-rc.d transmission-daemon defaults</span><br></pre></td></tr></table></figure><p>更新 system 脚本。</p><p>至此不出意外就可以使用</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo service transmission-daemon stop|start|status</span><br></pre></td></tr></table></figure><h1 id="开机启动"><a href="#开机启动" class="headerlink" title="开机启动"></a>开机启动</h1><p>前面的 service 可以一系统服务的方式启动 daemon，而且可以指定运行的用户名，但会不能开机自启动。</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> /etc/systmd/system</span><br><span class="line"></span><br><span class="line">vim transmission-daemion.service</span><br><span class="line"></span><br><span class="line"><span class="comment"># 填入</span></span><br><span class="line"></span><br><span class="line">[Unit]</span><br><span class="line">Description=Transmission BitTorrent Daemon</span><br><span class="line">After=network.target</span><br><span class="line"></span><br><span class="line">[Service]</span><br><span class="line">User=rachpt</span><br><span class="line">Type=simple</span><br><span class="line">ExecStart=/usr/bin/transmission-daemon -f --<span class="built_in">log</span>-error --logfile /var/<span class="built_in">log</span>/transmission-daemon.log</span><br><span class="line">ExecReload=/bin/<span class="built_in">kill</span> -s HUP <span class="variable">$MAINPID</span></span><br><span class="line"></span><br><span class="line">[Install]</span><br><span class="line">WantedBy=multi-user.target</span><br></pre></td></tr></table></figure><p>在这里卡了半天，无法成功，<code>-f</code> 好像很重要，删除后无法运行，无法设置开机运行。</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">sudo systemctl daemon-reload</span><br><span class="line"></span><br><span class="line">sudo systemctl <span class="built_in">enable</span> transmission-daemon</span><br></pre></td></tr></table></figure><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 查考所有服务</span></span><br><span class="line">sudo systemctl list-unit-files</span><br></pre></td></tr></table></figure><p><strong>记得备份所有 <code>transmission-daemon</code> 目录下的 resume 和 torrent 等文件目录。</strong> 血的教训。</p><h1 id="nginx"><a href="#nginx" class="headerlink" title="nginx"></a>nginx</h1><p>service 脚本参考 <a href="http://rachpt.github.io/2018/07/25/compile-nginx-1-14/">此文</a> 。</p><p>开机启动</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 直接复制官方的</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">vim /etc/systemd/system/nginx.service</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># Stop dance for nginx</span></span><br><span class="line"><span class="comment"># =======================</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># ExecStop sends SIGSTOP (graceful stop) to the nginx process.</span></span><br><span class="line"><span class="comment"># If, after 5s (--retry QUIT/5) nginx is still running, systemd takes control</span></span><br><span class="line"><span class="comment"># and sends SIGTERM (fast shutdown) to the main process.</span></span><br><span class="line"><span class="comment"># After another 5s (TimeoutStopSec=5), and if nginx is alive, systemd sends</span></span><br><span class="line"><span class="comment"># SIGKILL to all the remaining processes in the process group (KillMode=mixed).</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># nginx signals reference doc:</span></span><br><span class="line"><span class="comment"># http://nginx.org/en/docs/control.html</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line">[Unit]</span><br><span class="line">Description=A high performance web server and a reverse proxy server</span><br><span class="line">Documentation=man:nginx(8)</span><br><span class="line">After=network.target</span><br><span class="line"></span><br><span class="line">[Service]</span><br><span class="line">Type=forking</span><br><span class="line">PIDFile=/run/nginx.pid</span><br><span class="line">ExecStartPre=/usr/sbin/nginx -t -q -g <span class="string">'daemon on; master_process on;'</span></span><br><span class="line">ExecStart=/usr/sbin/nginx -g <span class="string">'daemon on; master_process on;'</span></span><br><span class="line">ExecReload=/usr/sbin/nginx -g <span class="string">'daemon on; master_process on;'</span> -s reload</span><br><span class="line">ExecStop=-/sbin/start-stop-daemon --quiet --stop --retry QUIT/5 --pidfile /run/nginx.pid</span><br><span class="line">TimeoutStopSec=5</span><br><span class="line">KillMode=mixed</span><br><span class="line"></span><br><span class="line">[Install]</span><br><span class="line">WantedBy=multi-user.target</span><br></pre></td></tr></table></figure><p>注意路径，其他和 transmission-daemon 一样。</p><h1 id="qbittorrent"><a href="#qbittorrent" class="headerlink" title="qbittorrent"></a>qbittorrent</h1><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">vim /etc/systemd/system/qbittorrent.service</span><br><span class="line"><span class="comment"># 或者 /lib/systemd/system/qbittorrent.service</span></span><br><span class="line"></span><br><span class="line">[Unit]</span><br><span class="line">Description=qBittorrent Daemon Service</span><br><span class="line">After=network.target</span><br><span class="line"></span><br><span class="line">[Service]</span><br><span class="line">User=rachpt</span><br><span class="line">Type=forking</span><br><span class="line">RemainAfterExit=yes</span><br><span class="line">ExecStart=/usr/bin/qbittorrent-nox -d</span><br><span class="line">ExecStop=/usr/bin/killall -w qbittorrent-nox</span><br><span class="line">Restart=on-abort</span><br><span class="line">Nice=19</span><br><span class="line"></span><br><span class="line">[Install]</span><br><span class="line">WantedBy=multi-user.target</span><br></pre></td></tr></table></figure><p>好像不用 <code>init.d</code>  里面运行脚本。</p><h1 id="flexget"><a href="#flexget" class="headerlink" title="flexget"></a>flexget</h1><p>这东西也可以 开机自动已 daemon 运行。</p><p><a href="https://flexget.com/InstallWizard/Linux/AutoStart" target="_blank" rel="noopener">参考文档</a></p><p>在此 copy 过来。</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 新建一个配置文件</span></span><br><span class="line"></span><br><span class="line">sudo vim /etc/default/flexget</span><br><span class="line"></span><br><span class="line"><span class="comment"># Configuration for /etc/init.d/flexget</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># User to run flexget as.</span></span><br><span class="line"><span class="comment"># Daemon will not start if left empty.</span></span><br><span class="line">FGUSER=<span class="string">"rachpt"</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Full path to the flexget config.yml file to use.</span></span><br><span class="line"><span class="comment"># Defaults to FGUSER $HOME/.flexget/config.yml</span></span><br><span class="line">CONFIG=<span class="string">"/home/rachpt/.config/flexget/config.yml"</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Path to the directory where flexget should log. Do not add trailing slash.</span></span><br><span class="line"><span class="comment"># Defaults to the FGUSER $HOME/.flexget directory</span></span><br><span class="line">LOG=<span class="string">"/home/rachpt/.config/flexget"</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Log verbosity </span></span><br><span class="line"><span class="comment"># Available options : none critical error warning info verbose debug trace</span></span><br><span class="line"><span class="comment"># Defaults to info</span></span><br><span class="line">LEVEL=<span class="string">"info"</span></span><br></pre></td></tr></table></figure><p>建运行脚本 <code>/etc/init.d/flexget</code></p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"></span><br><span class="line"><span class="comment">### BEGIN INIT INFO</span></span><br><span class="line"><span class="comment"># Provides:          flexget</span></span><br><span class="line"><span class="comment"># Required-Start:    $network $remote_fs</span></span><br><span class="line"><span class="comment"># Required-Stop:     $network $remote_fs</span></span><br><span class="line"><span class="comment"># Should-Start:      </span></span><br><span class="line"><span class="comment"># Should-Stop:       </span></span><br><span class="line"><span class="comment"># Default-Start:     2 3 4 5</span></span><br><span class="line"><span class="comment"># Default-Stop:      0 1 6</span></span><br><span class="line"><span class="comment"># Short-Description: Flexget</span></span><br><span class="line"><span class="comment"># Description:       FlexGet is a multipurpose automation tool </span></span><br><span class="line"><span class="comment">#                    for content like torrents, nzbs, podcasts,</span></span><br><span class="line"><span class="comment">#                    comics, series, movies, etc.</span></span><br><span class="line"><span class="comment">### END INIT INFO</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Author: Antoine Joubert, 19/01/2014</span></span><br><span class="line"></span><br><span class="line">NAME=<span class="string">"flexget"</span></span><br><span class="line">DAEMON=<span class="string">"/usr/local/bin/flexget"</span></span><br><span class="line">SETTINGS=<span class="string">"/etc/default/<span class="variable">$NAME</span>"</span></span><br><span class="line"></span><br><span class="line">DESC=<span class="string">"Flexget"</span></span><br><span class="line">PIDFILE=<span class="string">"/var/run/<span class="variable">$NAME</span>.pid"</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">set</span> -e</span><br><span class="line"></span><br><span class="line">. /lib/lsb/init-functions</span><br><span class="line"></span><br><span class="line"><span class="built_in">unset</span> FGUSER CONFIG LOG LEVEL</span><br><span class="line"></span><br><span class="line"><span class="comment"># Exit if flexget not installed</span></span><br><span class="line"><span class="keyword">if</span> [ ! -x <span class="string">"<span class="variable">$DAEMON</span>"</span> ]; <span class="keyword">then</span></span><br><span class="line">        log_action_msg <span class="string">"<span class="variable">$DESC</span>: Could not find flexget executable. Exiting."</span></span><br><span class="line">        <span class="built_in">exit</span> 2</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Read configuration variables</span></span><br><span class="line"><span class="keyword">if</span> [ -r /etc/default/<span class="variable">$NAME</span> ]; <span class="keyword">then</span></span><br><span class="line">        . /etc/default/<span class="variable">$NAME</span></span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">        log_action_msg <span class="string">"<span class="variable">$DESC</span>: /etc/default/<span class="variable">$NAME</span> not found. Exiting."</span></span><br><span class="line">        <span class="built_in">exit</span> 2</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Exit if FGUSER has not been set in /etc/default/flexget</span></span><br><span class="line"><span class="keyword">if</span> [ -z <span class="variable">$FGUSER</span> ]; <span class="keyword">then</span></span><br><span class="line">        log_action_msg <span class="string">"<span class="variable">$DESC</span>: FGUSER not set in /etc/default/<span class="variable">$NAME</span>. Exiting."</span></span><br><span class="line">        <span class="built_in">exit</span> 2</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Function to verify if flexget is already running</span></span><br><span class="line"><span class="function"><span class="title">run_check</span></span>() &#123;</span><br><span class="line">        <span class="keyword">if</span> [ -e <span class="variable">$PIDFILE</span> ]; <span class="keyword">then</span></span><br><span class="line">               status_of_proc -p <span class="variable">$PIDFILE</span> <span class="variable">$DAEMON</span> <span class="variable">$NAME</span> &gt; /dev/null &amp;&amp; RETVAL=0 || RETVAL=<span class="string">"$?"</span></span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">                RETVAL=<span class="string">"2"</span></span><br><span class="line">        <span class="keyword">fi</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">end_log</span></span>() &#123;</span><br><span class="line">        <span class="keyword">if</span> [ <span class="variable">$RETVAL</span> -eq 0 ]; <span class="keyword">then</span></span><br><span class="line">                log_end_msg 0</span><br><span class="line">                <span class="built_in">return</span> 0</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">                log_end_msg 1</span><br><span class="line">                <span class="built_in">exit</span> 1</span><br><span class="line">        <span class="keyword">fi</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"># Function to define config file, log file and log level</span></span><br><span class="line"><span class="function"><span class="title">conf_check</span></span>() &#123;</span><br><span class="line">        <span class="keyword">if</span> [ -z <span class="string">"<span class="variable">$CONFIG</span>"</span> ]; <span class="keyword">then</span></span><br><span class="line">                OPTIONS=<span class="string">"<span class="variable">$OPTIONS</span>"</span></span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">                OPTIONS=<span class="string">"-c <span class="variable">$CONFIG</span>"</span></span><br><span class="line">        <span class="keyword">fi</span></span><br><span class="line">        <span class="keyword">if</span> [ -z <span class="string">"<span class="variable">$LOG</span>"</span> ]; <span class="keyword">then</span></span><br><span class="line">                OPTIONS=<span class="string">"<span class="variable">$OPTIONS</span>"</span></span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">                OPTIONS=<span class="string">"<span class="variable">$OPTIONS</span> -l <span class="variable">$LOG</span>/flexget.log"</span></span><br><span class="line">                <span class="keyword">if</span> [ ! -d <span class="string">"<span class="variable">$LOG</span>"</span> ]; <span class="keyword">then</span> </span><br><span class="line">                        mkdir -p -m 750 <span class="variable">$LOG</span></span><br><span class="line">                        chown <span class="variable">$FGUSER</span> <span class="variable">$LOG</span></span><br><span class="line">                <span class="keyword">fi</span></span><br><span class="line">        <span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> [ -z <span class="variable">$LEVEL</span> ]; <span class="keyword">then</span></span><br><span class="line">                OPTIONS=<span class="string">"<span class="variable">$OPTIONS</span>"</span></span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">                OPTIONS=<span class="string">"<span class="variable">$OPTIONS</span> -L <span class="variable">$LEVEL</span>"</span></span><br><span class="line">        <span class="keyword">fi</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">start_flexget</span></span>() &#123;</span><br><span class="line">        run_check</span><br><span class="line">        <span class="keyword">if</span> [ <span class="variable">$RETVAL</span> = 0 ]; <span class="keyword">then</span></span><br><span class="line">                log_action_msg <span class="string">"<span class="variable">$DESC</span>: Already running with PID <span class="variable">$(cat $PIDFILE)</span>. Aborting."</span></span><br><span class="line">                <span class="built_in">exit</span> 2</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">                conf_check</span><br><span class="line">                log_daemon_msg <span class="string">"<span class="variable">$DESC</span>: Starting the daemon."</span></span><br><span class="line">                start-stop-daemon --start --background --quiet --pidfile <span class="variable">$PIDFILE</span> --make-pidfile --chuid <span class="variable">$FGUSER</span> \</span><br><span class="line">                --user <span class="variable">$FGUSER</span> --<span class="built_in">exec</span> <span class="variable">$DAEMON</span> -- <span class="variable">$OPTIONS</span> daemon start</span><br><span class="line">                RETVAL=$?</span><br><span class="line">                end_log</span><br><span class="line">        <span class="keyword">fi</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">stop_flexget</span></span>() &#123;</span><br><span class="line">        run_check</span><br><span class="line">        <span class="keyword">if</span> [ <span class="variable">$RETVAL</span> = 0 ]; <span class="keyword">then</span></span><br><span class="line">                log_daemon_msg <span class="string">"<span class="variable">$DESC</span>: Stopping the daemon."</span></span><br><span class="line">                start-stop-daemon --stop --quiet --chuid <span class="string">"<span class="variable">$FGUSER</span>"</span> --pidfile <span class="string">"<span class="variable">$PIDFILE</span>"</span> --retry 30</span><br><span class="line">                RETVAL=$?</span><br><span class="line">                [ -e <span class="string">"<span class="variable">$PIDFILE</span>"</span> ] &amp;&amp; rm -f <span class="string">"<span class="variable">$PIDFILE</span>"</span></span><br><span class="line">                end_log</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">                log_action_msg <span class="string">"<span class="variable">$DESC</span>: Not currently running. Aborting."</span></span><br><span class="line">                <span class="built_in">exit</span> 2</span><br><span class="line">        <span class="keyword">fi</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">status_flexget</span></span>() &#123;</span><br><span class="line">        run_check</span><br><span class="line">        <span class="keyword">if</span> [ <span class="variable">$RETVAL</span> = 0 ]; <span class="keyword">then</span></span><br><span class="line">                log_action_msg <span class="string">"<span class="variable">$DESC</span>: Currently running with PID <span class="variable">$(cat $PIDFILE)</span>."</span></span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">                log_action_msg <span class="string">"<span class="variable">$DESC</span>: Not currently running."</span></span><br><span class="line">        <span class="keyword">fi</span></span><br><span class="line">        <span class="built_in">exit</span> <span class="variable">$RETVAL</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">case</span> <span class="string">"<span class="variable">$1</span>"</span> <span class="keyword">in</span></span><br><span class="line">        start)</span><br><span class="line">                start_flexget</span><br><span class="line">        ;;</span><br><span class="line">        stop)</span><br><span class="line">                stop_flexget</span><br><span class="line">        ;;</span><br><span class="line">        restart)</span><br><span class="line">                stop_flexget &amp;&amp; sleep 2 &amp;&amp; start_flexget</span><br><span class="line">        ;;</span><br><span class="line">        status)</span><br><span class="line">                status_flexget</span><br><span class="line">        ;;</span><br><span class="line">        *)</span><br><span class="line">                <span class="built_in">echo</span> <span class="string">"Usage: <span class="variable">$0</span> &#123;start|stop|restart|status&#125;"</span></span><br><span class="line"><span class="keyword">esac</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">exit</span> 0</span><br></pre></td></tr></table></figure><p>记得加执行权限。</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo update-rc.d flexget defaults</span><br></pre></td></tr></table></figure><p>建立 <code>flexget.service</code> 文件。</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">sudo vim /etc/systemd/system/flexget.service </span><br><span class="line"></span><br><span class="line">[Unit]</span><br><span class="line">Description=Flexget Daemon</span><br><span class="line">After=network.target</span><br><span class="line"></span><br><span class="line">[Service]</span><br><span class="line">User=rachpt</span><br><span class="line">Type=simple</span><br><span class="line">WorkingDirectory=/home/rachpt/.config/flexget</span><br><span class="line">ExecStart=/usr/<span class="built_in">local</span>/bin/flexget daemon start</span><br><span class="line">ExecStop=/usr/<span class="built_in">local</span>/bin/flexget daemon stop</span><br><span class="line">ExecReload=/usr/<span class="built_in">local</span>/bin/flexget daemon reload</span><br><span class="line"></span><br><span class="line">[Install]</span><br><span class="line">WantedBy=multi-user.target</span><br></pre></td></tr></table></figure><p>其他和前面一样，不再重复。</p><p>使用 <code>pidtree</code> 可以看到所有进程的父进程。</p>]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;前面说到了使用原码编译 &lt;code&gt;transmission-daemon&lt;/code&gt; &lt;code&gt;qbittorrent-nox&lt;/code&gt; &lt;code&gt;nginx&lt;/code&gt; ，但是需要自己配置启动脚本。&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
      <category term="linux" scheme="https://rachpt.github.io/categories/linux/"/>
    
    
      <category term="daemon" scheme="https://rachpt.github.io/tags/daemon/"/>
    
  </entry>
  
  <entry>
    <title>use-expect-to-ssh-and-solve-a-problem</title>
    <link href="https://rachpt.github.io/2018/07/26/use-expect-to-ssh-and-solve-a-problem/"/>
    <id>https://rachpt.github.io/2018/07/26/use-expect-to-ssh-and-solve-a-problem/</id>
    <published>2018-07-26T08:24:18.000Z</published>
    <updated>2019-04-29T02:37:10.000Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>使用 expect 实现一个简单命来使用 ssh 连上远程主机，并解决一个恼火的问题。</p></blockquote><a id="more"></a><p>正常的远程连接主机的方法是<code>ssh user@ip -p port</code>，根据提示输入密码，很是繁琐。<br>expect 能过实现交互式的脚本命令。</p><h1 id="脚本"><a href="#脚本" class="headerlink" title="脚本"></a>脚本</h1><p>expect 一般需要自己额外安装，ubuntu为例：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get install expect</span><br><span class="line"></span><br><span class="line"><span class="comment"># 创建脚本</span></span><br><span class="line">vim auto_ssh.sh</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#!/usr/bin/expect -f</span></span><br><span class="line"><span class="built_in">set</span> timeout 10 <span class="comment"># 脚本超时时间</span></span><br><span class="line">spawn ssh rachpt@115.156.156.156</span><br><span class="line">expect <span class="string">"rachpt@115.156.156.156's password: "</span></span><br><span class="line">send <span class="string">"mypassword\r"</span> <span class="comment"># 密码</span></span><br><span class="line"></span><br><span class="line">expect <span class="string">"rachpt@pc:*"</span> <span class="comment"># 远程主机名 pc</span></span><br><span class="line"></span><br><span class="line">send <span class="string">"clear\r"</span> <span class="comment"># 清屏</span></span><br><span class="line"></span><br><span class="line">interact <span class="comment"># 退出脚本，控制交给用户</span></span><br></pre></td></tr></table></figure><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">vim ~/.bashrc</span><br><span class="line"></span><br><span class="line"><span class="comment"># 添加一个别名</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">alias</span> as=<span class="string">'/path/auto_ssh.sh'</span></span><br></pre></td></tr></table></figure><p>之前一直用这个脚本，开始时很是爽，只需 as 一下，就自动连接。</p><p>但是我不得不忍受下面的情形：<br><img src="https://raw.githubusercontent.com/rachpt/imgs/master/use-expect-to-ssh-and-solve-a-problem-1.jpg" alt="use-expect-to-ssh-and-solve-a-problem-1.jpg"></p><p>连上后如果改变 terminal 大小，远程的大小不会随着变。</p><p>后来发现不是我一个人遇到这问题。</p><h1 id="解决"><a href="#解决" class="headerlink" title="解决"></a>解决</h1><p>使用下面的脚本代替：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/expect -f</span></span><br><span class="line"><span class="comment">#trap sigwinch spawned</span></span><br><span class="line"><span class="built_in">trap</span> &#123;</span><br><span class="line"> <span class="built_in">set</span> rows [stty rows]</span><br><span class="line"> <span class="built_in">set</span> cols [stty columns]</span><br><span class="line"> stty rows <span class="variable">$rows</span> columns <span class="variable">$cols</span> &lt; <span class="variable">$spawn_out</span>(slave,name)</span><br><span class="line">&#125; WINCH</span><br><span class="line"></span><br><span class="line"><span class="built_in">set</span> timeout 10</span><br><span class="line">spawn ssh rachpt@115.156.156.156</span><br><span class="line">expect <span class="string">"rachpt@115.156.156.156's password: "</span></span><br><span class="line">send <span class="string">"mypassword\r"</span></span><br><span class="line"></span><br><span class="line">expect <span class="string">"rachpt@pc:*"</span></span><br><span class="line"></span><br><span class="line">send <span class="string">"clear\r"</span></span><br><span class="line"></span><br><span class="line">interact</span><br></pre></td></tr></table></figure><p>原因是没有传输窗口改变信号，加一个 trap在前面即可。</p><p><a href="https://blog.csdn.net/ownfire/article/details/8364039" target="_blank" rel="noopener">参考文档1</a>，<a href="https://blog.csdn.net/achejq/article/details/77882741" target="_blank" rel="noopener">文档2</a>，<a href="https://ubuntuforums.org/showthread.php?t=865420" target="_blank" rel="noopener">文档3</a>。</p>]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;使用 expect 实现一个简单命来使用 ssh 连上远程主机，并解决一个恼火的问题。&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
      <category term="linux" scheme="https://rachpt.github.io/categories/linux/"/>
    
    
      <category term="ssh" scheme="https://rachpt.github.io/tags/ssh/"/>
    
      <category term="expect" scheme="https://rachpt.github.io/tags/expect/"/>
    
  </entry>
  
  <entry>
    <title>compile-nginx-1.14</title>
    <link href="https://rachpt.github.io/2018/07/25/compile-nginx-1-14/"/>
    <id>https://rachpt.github.io/2018/07/25/compile-nginx-1-14/</id>
    <published>2018-07-25T14:58:31.000Z</published>
    <updated>2019-04-28T15:54:49.000Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>魔改编译安装 nginx。</p></blockquote><a id="more"></a><h1 id="要做啥"><a href="#要做啥" class="headerlink" title="要做啥"></a>要做啥</h1><p>如图所示：<br><img src="https://raw.githubusercontent.com/rachpt/imgs/master/nginx-404.jpg" alt="nginx-404.jpg"></p><p>希望将 nginx 默认的 错误页面自定义加入一个 返回的超链接。</p><h1 id="改源码"><a href="#改源码" class="headerlink" title="改源码"></a>改源码</h1><ol><li><p>下载源码，<br><a href="http://nginx.org/en/download.html" target="_blank" rel="noopener">http://nginx.org/en/download.html</a><br>选择 Stable version，    nginx-1.14.0。</p></li><li><p>修改源码：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line">vim nginx-1.14.0/src/http/ngx_http_special_response.c</span><br><span class="line"></span><br><span class="line"><span class="comment"># 大约 109 行开始</span></span><br><span class="line"></span><br><span class="line">static char ngx_http_error_401_page[] =</span><br><span class="line"><span class="string">"&lt;html&gt;"</span> CRLF</span><br><span class="line"><span class="string">"&lt;head&gt;&lt;meta http-equiv=\"Content-Type\" content=\"text/html; charset=utf-8\"&gt;&lt;title&gt;401 Authorization Required&lt;/title&gt;&lt;/head&gt;"</span> CRLF</span><br><span class="line"><span class="string">"&lt;body bgcolor=\"white\"&gt;"</span> CRLF</span><br><span class="line"><span class="string">"&lt;center&gt;&lt;h1&gt;401 Authorization Required&lt;/h1&gt;&lt;/center&gt;"</span> CRLF</span><br><span class="line"><span class="string">"&lt;center&gt;&lt;h2&gt;&lt;a href=\"/index.html\"&gt;返回首页&lt;/a&gt;&lt;/h2&gt;&lt;/center&gt;"</span> CRLF</span><br><span class="line">;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">static char ngx_http_error_402_page[] =</span><br><span class="line"><span class="string">"&lt;html&gt;"</span> CRLF</span><br><span class="line"><span class="string">"&lt;head&gt;&lt;meta http-equiv=\"Content-Type\" content=\"text/html; charset=utf-8\"&gt;&lt;title&gt;402 Payment Required&lt;/title&gt;&lt;/head&gt;"</span> CRLF</span><br><span class="line"><span class="string">"&lt;body bgcolor=\"white\"&gt;"</span> CRLF</span><br><span class="line"><span class="string">"&lt;center&gt;&lt;h1&gt;402 Payment Required&lt;/h1&gt;&lt;/center&gt;"</span> CRLF</span><br><span class="line"><span class="string">"&lt;center&gt;&lt;h2&gt;&lt;a href=\"/index.html\"&gt;返回首页&lt;/a&gt;&lt;/h2&gt;&lt;/center&gt;"</span> CRLF</span><br><span class="line">;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">static char ngx_http_error_403_page[] =</span><br><span class="line"><span class="string">"&lt;html&gt;"</span> CRLF</span><br><span class="line"><span class="string">"&lt;head&gt;&lt;meta http-equiv=\"Content-Type\" content=\"text/html; charset=utf-8\"&gt;&lt;title&gt;403 Forbidden&lt;/title&gt;&lt;/head&gt;"</span> CRLF</span><br><span class="line"><span class="string">"&lt;body bgcolor=\"white\"&gt;"</span> CRLF</span><br><span class="line"><span class="string">"&lt;center&gt;&lt;h1&gt;403 Forbidden&lt;/h1&gt;&lt;/center&gt;"</span> CRLF</span><br><span class="line"><span class="string">"&lt;center&gt;&lt;h2&gt;&lt;a href=\"/index.html\"&gt;返回首页&lt;/a&gt;&lt;/h2&gt;&lt;/center&gt;"</span> CRLF</span><br><span class="line">.</span><br><span class="line">.</span><br><span class="line">.</span><br></pre></td></tr></table></figure></li></ol><p>按自己需求修改，其中，包含中文不要指定 utf-8 编码。</p><h1 id="编译"><a href="#编译" class="headerlink" title="编译"></a>编译</h1><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> nginx-1.14.0</span><br><span class="line"></span><br><span class="line">./configure --with-select_module --with-poll_module \</span><br><span class="line">--with-threads --with-file-aio --with-http_ssl_module \</span><br><span class="line">--with-http_v2_module --with-http_realip_module \</span><br><span class="line">--with-http_addition_module --with-http_xslt_module \</span><br><span class="line">--with-http_xslt_module --with-http_image_filter_module \</span><br><span class="line">--with-http_image_filter_module --with-http_geoip_module \</span><br><span class="line">--with-http_geoip_module --with-http_sub_module \</span><br><span class="line">--with-http_dav_module --with-http_flv_module \</span><br><span class="line">--with-http_mp4_module --with-http_gunzip_module \</span><br><span class="line">--with-http_gzip_static_module --with-http_auth_request_module \</span><br><span class="line">--with-http_random_index_module --with-http_secure_link_module \</span><br><span class="line">--with-http_degradation_module --with-http_slice_module \</span><br><span class="line">--with-http_stub_status_module --with-http_perl_module \</span><br><span class="line">--with-mail --with-mail_ssl_module --with-stream --with-stream \</span><br><span class="line">--with-stream_ssl_module --with-google_perftools_module \</span><br><span class="line">--with-cpp_test_module --with-pcre --with-libatomic \</span><br><span class="line">--prefix=/usr/<span class="built_in">local</span>/nginx --sbin-path=/usr/sbin/nginx \</span><br><span class="line">--conf-path=/etc/nginx/nginx.conf --error-log-path=/var/<span class="built_in">log</span>/nginx/error.log \</span><br><span class="line">--http-log-path=/var/<span class="built_in">log</span>/nginx/access.log \</span><br><span class="line">--pid-path=/var/run/nginx/nginx.pid --lock-path=/var/lock/nginx.lock</span><br><span class="line"></span><br><span class="line">make &amp;&amp; sudo make install</span><br></pre></td></tr></table></figure><p>各个模块具体用处，请参看以下文章。</p><p><a href="https://www.cnblogs.com/dtiove/p/5924385.html" target="_blank" rel="noopener">参考文档1</a>，<a href="https://blog.csdn.net/likelxl/article/details/789167050" target="_blank" rel="noopener">参考文档2</a>。</p><h1 id="添加-service"><a href="#添加-service" class="headerlink" title="添加 service"></a>添加 service</h1><p>系统 mint, 对 ubuntu 应该都有效.</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br></pre></td><td class="code"><pre><span class="line">vim /etc/init.d/nginx</span><br><span class="line"></span><br><span class="line"><span class="comment"># 写入脚本</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#! /bin/sh</span></span><br><span class="line"></span><br><span class="line"><span class="comment">### BEGIN INIT INFO</span></span><br><span class="line"><span class="comment"># Provides:          nginx</span></span><br><span class="line"><span class="comment"># Required-Start:    $remote_fs $syslog</span></span><br><span class="line"><span class="comment"># Required-Stop:     $remote_fs $syslog</span></span><br><span class="line"><span class="comment"># Default-Start:     2 3 4 5</span></span><br><span class="line"><span class="comment"># Default-Stop:      0 1 6</span></span><br><span class="line"><span class="comment"># Short-Description: starts the nginx web server</span></span><br><span class="line"><span class="comment"># Description:       starts nginx using start-stop-daemon</span></span><br><span class="line"><span class="comment">### END INIT INFO</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment">#------------------------------------------------------------------------------</span></span><br><span class="line"><span class="comment">#                               Functions</span></span><br><span class="line"><span class="comment">#------------------------------------------------------------------------------</span></span><br><span class="line">. /lib/lsb/init-functions</span><br><span class="line"><span class="comment">#------------------------------------------------------------------------------</span></span><br><span class="line"><span class="comment">#                               Consts</span></span><br><span class="line"><span class="comment">#------------------------------------------------------------------------------</span></span><br><span class="line">PATH=/usr/<span class="built_in">local</span>/sbin:/usr/<span class="built_in">local</span>/bin:/sbin:/bin:/usr/sbin:/usr/bin</span><br><span class="line">DAEMON=/usr/sbin/nginx</span><br><span class="line"></span><br><span class="line">PS=<span class="string">"nginx"</span></span><br><span class="line">PIDNAME=<span class="string">"nginx"</span>                         <span class="comment">#lets you do $PS-slave</span></span><br><span class="line">PIDFILE=<span class="variable">$PIDNAME</span>.pid                    <span class="comment">#pid file</span></span><br><span class="line">PIDSPATH=/run                           <span class="comment">#pid path</span></span><br><span class="line"></span><br><span class="line">DESCRIPTION=<span class="string">"Nginx Server..."</span></span><br><span class="line"></span><br><span class="line">RUNAS=root                              <span class="comment">#user to run as</span></span><br><span class="line"></span><br><span class="line">SCRIPT_OK=0                             <span class="comment">#ala error codes</span></span><br><span class="line">SCRIPT_ERROR=1                          <span class="comment">#ala error codes</span></span><br><span class="line">TRUE=1                                  <span class="comment">#boolean</span></span><br><span class="line">FALSE=0                                 <span class="comment">#boolean</span></span><br><span class="line"></span><br><span class="line">lockfile=/var/lock/subsys/nginx</span><br><span class="line">NGINX_CONF_FILE=<span class="string">"/etc/nginx/nginx.conf"</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#------------------------------------------------------------------------------</span></span><br><span class="line"><span class="comment">#                               Simple Tests</span></span><br><span class="line"><span class="comment">#------------------------------------------------------------------------------</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#test if nginx is a file and executable</span></span><br><span class="line"><span class="built_in">test</span> -x <span class="variable">$DAEMON</span> || <span class="built_in">exit</span> 0</span><br><span class="line"></span><br><span class="line"><span class="comment"># Include nginx defaults if available</span></span><br><span class="line"><span class="keyword">if</span> [ -f /etc/default/nginx ] ; <span class="keyword">then</span></span><br><span class="line">        . /etc/default/nginx</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#------------------------------------------------------------------------------</span></span><br><span class="line"><span class="comment">#                               Functions</span></span><br><span class="line"><span class="comment">#------------------------------------------------------------------------------</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">setFilePerms</span></span>()&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> [ -f <span class="variable">$PIDSPATH</span>/<span class="variable">$PIDFILE</span> ]; <span class="keyword">then</span></span><br><span class="line">        chmod 400 <span class="variable">$PIDSPATH</span>/<span class="variable">$PIDFILE</span></span><br><span class="line">    <span class="keyword">fi</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">configtest</span></span>() &#123;</span><br><span class="line">    <span class="variable">$DAEMON</span> -t -c <span class="variable">$NGINX_CONF_FILE</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">getPSCount</span></span>() &#123;</span><br><span class="line">    <span class="built_in">return</span> `pgrep -f <span class="variable">$PS</span> | wc -l`</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">isRunning</span></span>() &#123;</span><br><span class="line">    <span class="keyword">if</span> [ <span class="variable">$1</span> ]; <span class="keyword">then</span></span><br><span class="line">        pidof_daemon <span class="variable">$1</span></span><br><span class="line">        PID=$?</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> [ <span class="variable">$PID</span> -gt 0 ]; <span class="keyword">then</span></span><br><span class="line">                <span class="built_in">return</span> 1</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">                <span class="built_in">return</span> 0</span><br><span class="line">        <span class="keyword">fi</span></span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">        pidof_daemon</span><br><span class="line">        PID=$?</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> [ <span class="variable">$PID</span> -gt 0 ]; <span class="keyword">then</span></span><br><span class="line">                <span class="built_in">return</span> 1</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">                <span class="built_in">return</span> 0</span><br><span class="line">        <span class="keyword">fi</span></span><br><span class="line">    <span class="keyword">fi</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">#courtesy of php-fpm</span></span><br><span class="line"><span class="function"><span class="title">wait_for_pid</span></span> () &#123;</span><br><span class="line">    try=0</span><br><span class="line"></span><br><span class="line">    <span class="keyword">while</span> <span class="built_in">test</span> <span class="variable">$try</span> -lt 35 ; <span class="keyword">do</span></span><br><span class="line">        <span class="keyword">case</span> <span class="string">"<span class="variable">$1</span>"</span> <span class="keyword">in</span></span><br><span class="line">            <span class="string">'created'</span>)</span><br><span class="line">            <span class="keyword">if</span> [ -f <span class="string">"<span class="variable">$2</span>"</span> ] ; <span class="keyword">then</span></span><br><span class="line">                try=<span class="string">''</span></span><br><span class="line">                <span class="built_in">break</span></span><br><span class="line">            <span class="keyword">fi</span></span><br><span class="line">            ;;</span><br><span class="line"></span><br><span class="line">            <span class="string">'removed'</span>)</span><br><span class="line">            <span class="keyword">if</span> [ ! -f <span class="string">"<span class="variable">$2</span>"</span> ] ; <span class="keyword">then</span></span><br><span class="line">                try=<span class="string">''</span></span><br><span class="line">                <span class="built_in">break</span></span><br><span class="line">            <span class="keyword">fi</span></span><br><span class="line">            ;;</span><br><span class="line">        <span class="keyword">esac</span></span><br><span class="line"></span><br><span class="line">        try=`expr <span class="variable">$try</span> + 1`</span><br><span class="line">        sleep 1</span><br><span class="line">    <span class="keyword">done</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">status</span></span>()&#123;</span><br><span class="line">    isRunning</span><br><span class="line">    isAlive=$?</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> [ <span class="string">"<span class="variable">$&#123;isAlive&#125;</span>"</span> -eq <span class="variable">$TRUE</span> ]; <span class="keyword">then</span></span><br><span class="line">            <span class="built_in">echo</span> <span class="string">"<span class="variable">$PIDNAME</span> found running with processes:  `pidof <span class="variable">$PS</span>`"</span></span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            <span class="built_in">echo</span> <span class="string">"<span class="variable">$PIDNAME</span> is NOT running."</span></span><br><span class="line">        <span class="keyword">fi</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">removePIDFile</span></span>()&#123;</span><br><span class="line">    <span class="keyword">if</span> [ <span class="variable">$1</span> ]; <span class="keyword">then</span></span><br><span class="line">            <span class="keyword">if</span> [ -f <span class="variable">$1</span> ]; <span class="keyword">then</span></span><br><span class="line">                 rm -f <span class="variable">$1</span></span><br><span class="line">            <span class="keyword">fi</span></span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">        <span class="comment">#Do default removal</span></span><br><span class="line">        <span class="keyword">if</span> [ -f <span class="variable">$PIDSPATH</span>/<span class="variable">$PIDFILE</span> ]; <span class="keyword">then</span></span><br><span class="line">                 rm -f <span class="variable">$PIDSPATH</span>/<span class="variable">$PIDFILE</span></span><br><span class="line">            <span class="keyword">fi</span></span><br><span class="line">        <span class="keyword">fi</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">start</span></span>() &#123;</span><br><span class="line">    log_daemon_msg <span class="string">"Starting <span class="variable">$DESCRIPTION</span>"</span></span><br><span class="line">    isRunning</span><br><span class="line">    isAlive=$?</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> [ <span class="string">"<span class="variable">$&#123;isAlive&#125;</span>"</span> -eq <span class="variable">$TRUE</span> ]; <span class="keyword">then</span></span><br><span class="line">        log_end_msg <span class="variable">$SCRIPT_ERROR</span></span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">        start-stop-daemon --start --quiet --chuid <span class="variable">$RUNAS</span> --pidfile <span class="variable">$PIDSPATH</span>/<span class="variable">$PIDFILE</span> --<span class="built_in">exec</span> <span class="variable">$DAEMON</span> \</span><br><span class="line">        -- -c <span class="variable">$NGINX_CONF_FILE</span></span><br><span class="line">        setFilePerms</span><br><span class="line">        log_end_msg <span class="variable">$SCRIPT_OK</span></span><br><span class="line">    <span class="keyword">fi</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">stop</span></span>() &#123;</span><br><span class="line">    log_daemon_msg <span class="string">"Stopping <span class="variable">$DESCRIPTION</span>"</span></span><br><span class="line"></span><br><span class="line">    isRunning</span><br><span class="line">    isAlive=$?</span><br><span class="line">    <span class="keyword">if</span> [ <span class="string">"<span class="variable">$&#123;isAlive&#125;</span>"</span> -eq <span class="variable">$TRUE</span> ]; <span class="keyword">then</span></span><br><span class="line">         start-stop-daemon --stop --quiet --pidfile <span class="variable">$PIDSPATH</span>/<span class="variable">$PIDFILE</span></span><br><span class="line">         wait_for_pid <span class="string">'removed'</span> <span class="variable">$PIDSPATH</span>/<span class="variable">$PIDFILE</span></span><br><span class="line">         <span class="keyword">if</span> [ -n <span class="string">"<span class="variable">$try</span>"</span> ] ; <span class="keyword">then</span></span><br><span class="line">             log_end_msg <span class="variable">$SCRIPT_ERROR</span></span><br><span class="line">         <span class="keyword">else</span></span><br><span class="line">             removePIDFile</span><br><span class="line">             log_end_msg <span class="variable">$SCRIPT_OK</span></span><br><span class="line">         <span class="keyword">fi</span></span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">         log_end_msg <span class="variable">$SCRIPT_ERROR</span></span><br><span class="line">    <span class="keyword">fi</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">reload</span></span>() &#123;</span><br><span class="line">    configtest || <span class="built_in">return</span> $?</span><br><span class="line">    log_daemon_msg <span class="string">"Reloading (via HUP) <span class="variable">$DESCRIPTION</span>"</span></span><br><span class="line">    isRunning</span><br><span class="line">    <span class="keyword">if</span> [ $? -eq <span class="variable">$TRUE</span> ]; <span class="keyword">then</span></span><br><span class="line">        `killall -HUP <span class="variable">$PS</span>` <span class="comment">#to be safe</span></span><br><span class="line">        log_end_msg <span class="variable">$SCRIPT_OK</span></span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">        log_end_msg <span class="variable">$SCRIPT_ERROR</span></span><br><span class="line">    <span class="keyword">fi</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">terminate</span></span>() &#123;</span><br><span class="line">    log_daemon_msg <span class="string">"Force terminating (via KILL) <span class="variable">$DESCRIPTION</span>"</span></span><br><span class="line"></span><br><span class="line">    PIDS=`pidof <span class="variable">$PS</span>` || <span class="literal">true</span></span><br><span class="line"></span><br><span class="line">    [ -e <span class="variable">$PIDSPATH</span>/<span class="variable">$PIDFILE</span> ] &amp;&amp; PIDS2=`cat <span class="variable">$PIDSPATH</span>/<span class="variable">$PIDFILE</span>`</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="variable">$PIDS</span>; <span class="keyword">do</span></span><br><span class="line">        <span class="keyword">if</span> [ <span class="string">"<span class="variable">$i</span>"</span> = <span class="string">"<span class="variable">$PIDS2</span>"</span> ]; <span class="keyword">then</span></span><br><span class="line">            <span class="built_in">kill</span> <span class="variable">$i</span></span><br><span class="line">            wait_for_pid <span class="string">'removed'</span> <span class="variable">$PIDSPATH</span>/<span class="variable">$PIDFILE</span></span><br><span class="line">            removePIDFile</span><br><span class="line">        <span class="keyword">fi</span></span><br><span class="line">    <span class="keyword">done</span></span><br><span class="line">    log_end_msg <span class="variable">$SCRIPT_OK</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">destroy</span></span>() &#123;</span><br><span class="line">    log_daemon_msg <span class="string">"Force terminating and may include self (via KILLALL) <span class="variable">$DESCRIPTION</span>"</span></span><br><span class="line">    killall <span class="variable">$PS</span> -q &gt;&gt; /dev/null 2&gt;&amp;1</span><br><span class="line">    log_end_msg <span class="variable">$SCRIPT_OK</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">pidof_daemon</span></span>() &#123;</span><br><span class="line">    PIDS=`pidof <span class="variable">$PS</span>` || <span class="literal">true</span></span><br><span class="line"></span><br><span class="line">    [ -e <span class="variable">$PIDSPATH</span>/<span class="variable">$PIDFILE</span> ] &amp;&amp; PIDS2=`cat <span class="variable">$PIDSPATH</span>/<span class="variable">$PIDFILE</span>`</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="variable">$PIDS</span>; <span class="keyword">do</span></span><br><span class="line">        <span class="keyword">if</span> [ <span class="string">"<span class="variable">$i</span>"</span> = <span class="string">"<span class="variable">$PIDS2</span>"</span> ]; <span class="keyword">then</span></span><br><span class="line">            <span class="built_in">return</span> 1</span><br><span class="line">        <span class="keyword">fi</span></span><br><span class="line">    <span class="keyword">done</span></span><br><span class="line">    <span class="built_in">return</span> 0</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">case</span> <span class="string">"<span class="variable">$1</span>"</span> <span class="keyword">in</span></span><br><span class="line">    start)</span><br><span class="line">        start</span><br><span class="line">        ;;</span><br><span class="line">    stop)</span><br><span class="line">        stop</span><br><span class="line">        ;;</span><br><span class="line">    restart|force-reload)</span><br><span class="line">        stop</span><br><span class="line">        sleep 3</span><br><span class="line">        start</span><br><span class="line">        ;;</span><br><span class="line">    reload)</span><br><span class="line">        <span class="variable">$1</span></span><br><span class="line">        ;;</span><br><span class="line">    status)</span><br><span class="line">        status</span><br><span class="line">        ;;</span><br><span class="line">    configtest)</span><br><span class="line">        <span class="variable">$1</span></span><br><span class="line">        ;;</span><br><span class="line">    terminate)</span><br><span class="line">        <span class="variable">$1</span></span><br><span class="line">        ;;</span><br><span class="line">    destroy)</span><br><span class="line">        <span class="variable">$1</span></span><br><span class="line">        ;;</span><br><span class="line">    *)</span><br><span class="line">        FULLPATH=/etc/init.d/<span class="variable">$PS</span></span><br><span class="line">        <span class="built_in">echo</span> <span class="string">"Usage: <span class="variable">$FULLPATH</span> &#123;start|stop|restart|force-reload|status|configtest|terminate|destroy&#125;"</span></span><br><span class="line">        <span class="built_in">echo</span> <span class="string">"       The 'destroy' command should only be used as a last resort."</span></span><br><span class="line">        <span class="built_in">exit</span> 1</span><br><span class="line">        ;;</span><br><span class="line"><span class="keyword">esac</span></span><br><span class="line"><span class="built_in">exit</span> 0</span><br></pre></td></tr></table></figure><p>记得改权限.<br>上面的 nginx 路径需要改成自己编译时候写的,或者 <code>which nginx</code>.</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">sudo update-rc.d nginx defaults</span><br><span class="line"></span><br><span class="line">sudo systemctl daemon-reload</span><br><span class="line"></span><br><span class="line">sudo systemctl <span class="built_in">enable</span> nginx</span><br></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/rachpt/imgs/master/nginx-init-d.jpg" alt="nginx-init-d.jpg"></p><p><a href="https://segmentfault.com/q/1010000005987075" target="_blank" rel="noopener">参考文档</a>.</p>]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;魔改编译安装 nginx。&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
      <category term="linux" scheme="https://rachpt.github.io/categories/linux/"/>
    
    
      <category term="nginx" scheme="https://rachpt.github.io/tags/nginx/"/>
    
  </entry>
  
</feed>
